{"version":3,"sources":["FinishFactory.ts"],"names":[],"mappings":"","file":"FinishFactory.js","sourcesContent":["import { FinishClause } from \"./clauses/FinishClause\";\n\nimport { Container } from \"./data/Container\";\nimport { Factory } from \"./data/Factory\";\n\nimport { QueryToken } from \"./tokens/QueryToken\";\n\n\n/**\n * Alias for the finish factory function for the specified finish clause.\n *\n * The factory will receive the {@link Container} with the final token\n * data ({@link QueryToken}) of the constructed query.\n *\n * The factory function must return the extended {@link FinishClause}.\n * The build it factory {@link FinishClause.createFrom} is recommended\n * to be used internally so the expected behaviour applies with added\n * custom functionality for the custom factory.\n */\nexport type FinishFactory<T extends FinishClause> = Factory<Container<QueryToken>, T>;\n"],"sourceRoot":"../src"}