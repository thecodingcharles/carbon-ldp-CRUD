import { cloneElement } from "../../data/utils";
import { convertValue } from "../utils";
import { NotTriplePattern } from "./NotTriplePattern";
function getHasFn(container) {
    return (...values) => {
        const parsedValues = container.targetToken.values.slice();
        parsedValues.push(values.map(convertValue));
        const targetToken = cloneElement(container.targetToken, { values: parsedValues });
        const newContainer = cloneElement(container, { targetToken });
        return MultipleValuesPatternMore.createFrom(newContainer, {});
    };
}
export const MultipleValuesPattern = {
    createFrom(container, object) {
        return NotTriplePattern.createFrom(container, Object.assign(object, {
            has: getHasFn(container),
        }));
    },
};
export const MultipleValuesPatternMore = {
    createFrom(container, object) {
        return NotTriplePattern.createFrom(container, Object.assign(object, {
            and: getHasFn(container),
        }));
    },
};

//# sourceMappingURL=MultipleValuesPattern.js.map
