{"version":3,"sources":["data/QueryUnitContainer.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,SAAS,EAAiB,MAAM,aAAa,CAAC;AA4BvD,MAAM,OAAO,kBACZ,SAAQ,SAAqB;IAqB7B,YAAa,IAAwC;QACpD,KAAK,CAAE,IAAI,CAAE,CAAC;QACd,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,CAAC;QAChE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;QAE1D,IAAI,GAAG,CAAC,MAAM,KAAK,kBAAkB;YAAG,MAAM,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC;IAC/D,CAAC;CACD","file":"QueryUnitContainer.js","sourcesContent":["import { FinishClause } from \"../clauses/FinishClause\";\nimport { AskToken } from \"../tokens/AskToken\";\n\nimport { QueryToken } from \"../tokens/QueryToken\";\nimport { SelectToken } from \"../tokens/SelectToken\";\n\nimport { Container, ContainerData } from \"./Container\";\nimport { Factory } from \"./Factory\";\n\n\n/**\n * Interface that describe the necessary data for the creation\n * of a {@link QueryUnitContainer}.\n */\nexport interface QueryUnitContainerData<SELECT extends FinishClause, ASK extends FinishClause> extends ContainerData<QueryToken> {\n\t/**\n\t * @see QueryUnitContainer.selectFinishClauseFactory\n\t */\n\tselectFinishClauseFactory:Factory<Container<any>, SELECT>;\n\n\t/**\n\t * @see QueryUnitContainer.askFinishClauseFactory\n\t */\n\taskFinishClauseFactory:Factory<Container<any>, ASK>;\n}\n\n\n/**\n * Immutable class that contains the hidden data of the main query\n * statement.\n *\n * Extension of the {@link Container} that add the finish factories\n * for every type of type of query supported.\n */\nexport class QueryUnitContainer<SELECT extends FinishClause, ASK extends FinishClause>\n\textends Container<QueryToken>\n\timplements QueryUnitContainerData<SELECT, ASK> {\n\n\t/**\n\t * The factory used for create the finish statement of a SELECT\n\t * query.\n\t */\n\treadonly selectFinishClauseFactory:Factory<Container<QueryToken<SelectToken>>, SELECT>;\n\n\t/**\n\t * The factory used for create the finish statement of a SELECT\n\t * query.\n\t */\n\treadonly askFinishClauseFactory:Factory<Container<QueryToken<AskToken>>, ASK>;\n\n\t/**\n\t * Constructor that receives and object with the base data of the\n\t * container.\n\t *\n\t * @param data The base data for the container creation.\n\t */\n\tconstructor( data:QueryUnitContainerData<SELECT, ASK> ) {\n\t\tsuper( data );\n\t\tthis.selectFinishClauseFactory = data.selectFinishClauseFactory;\n\t\tthis.askFinishClauseFactory = data.askFinishClauseFactory;\n\n\t\tif( new.target === QueryUnitContainer ) Object.freeze( this );\n\t}\n}\n"],"sourceRoot":"../../src"}