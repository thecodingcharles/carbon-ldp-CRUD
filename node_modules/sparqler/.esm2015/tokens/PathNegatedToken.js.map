{"version":3,"sources":["tokens/PathNegatedToken.ts"],"names":[],"mappings":"AAUA,MAAM,OAAO,gBAAgB;IAI5B,YAAa,IAA+C;QAHnD,UAAK,GAAiB,aAAa,CAAC;QAI5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAED,QAAQ;QACP,OAAO,IAAK,IAAI,CAAC,IAAK,EAAE,CAAC;IAC1B,CAAC;CACD","file":"PathNegatedToken.js","sourcesContent":["import { SubPathInNegatedToken } from \"./SubPathInNegatedToken\";\nimport { PathInNegatedToken } from \"./PathInNegatedToken\";\nimport { TokenNode } from \"./TokenNode\";\n\n\n/**\n * Token for the negation of a path statement.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rPathPrimary}\n */\nexport class PathNegatedToken implements TokenNode {\n\treadonly token:\"pathNegated\" = \"pathNegated\";\n\treadonly path:PathInNegatedToken | SubPathInNegatedToken;\n\n\tconstructor( path:PathInNegatedToken | SubPathInNegatedToken ) {\n\t\tthis.path = path;\n\t}\n\n\ttoString():string {\n\t\treturn `!${ this.path }`;\n\t}\n}"],"sourceRoot":"../../src"}