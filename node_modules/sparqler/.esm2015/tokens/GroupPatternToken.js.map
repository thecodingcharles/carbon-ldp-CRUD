{"version":3,"sources":["tokens/GroupPatternToken.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,uBAAuB,EAAE,MAAM,YAAY,CAAC;AASrD,MAAM,OAAO,iBAAiB;IAK7B;QAJA,UAAK,GAAkB,cAAc,CAAC;QAKrC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACpB,CAAC;IAGD,UAAU,CAAE,GAAG,QAAuB;QACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,GAAG,QAAQ,CAAE,CAAC;QAClC,OAAO,IAAI,CAAC;IACb,CAAC;IAGD,QAAQ,CAAE,MAAc;QACvB,OAAO,uBAAuB,CAAE;YAC/B,MAAM;YACN,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;YAC/B,eAAe,EAAE,GAAG;YACpB,MAAM,EAAE,IAAI,CAAC,QAAQ;SACrB,CAAE,CAAC;IACL,CAAC;CACD","file":"GroupPatternToken.js","sourcesContent":["import { PatternToken } from \"./PatternToken\";\nimport { getTokenContainerString } from \"./printing\";\nimport { TokenNode } from \"./TokenNode\";\n\n\n/**\n * The token of the for grouping pattern statements.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rGroupGraphPattern}\n */\nexport class GroupPatternToken implements TokenNode {\n\ttoken:\"groupPattern\" = \"groupPattern\";\n\n\treadonly patterns:PatternToken[];\n\n\tconstructor() {\n\t\tthis.patterns = [];\n\t}\n\n\n\taddPattern( ...patterns:PatternToken[] ):this {\n\t\tthis.patterns.push( ...patterns );\n\t\treturn this;\n\t}\n\n\n\ttoString( spaces?:number ):string {\n\t\treturn getTokenContainerString( {\n\t\t\tspaces,\n\t\t\ttags: { open: \"{\", close: \"}\" },\n\t\t\ttokensSeparator: \".\",\n\t\t\ttokens: this.patterns,\n\t\t} );\n\t}\n}\n"],"sourceRoot":"../../src"}