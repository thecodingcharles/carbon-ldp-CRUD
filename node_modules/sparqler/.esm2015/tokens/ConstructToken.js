import { SharedQueryClauseToken } from "./SharedQueryClauseToken";
import { getSeparator, getTokenContainerString } from "./printing";
export class ConstructToken extends SharedQueryClauseToken {
    constructor() {
        super();
        this.token = "construct";
        this.triples = [];
    }
    addTriple(...triple) {
        this.triples.push(...triple);
        return this;
    }
    toString(spaces) {
        const triples = getTokenContainerString({
            spaces,
            tags: { open: "{", close: "}" },
            tokensSeparator: ".",
            tokens: this.triples,
        });
        const separator = getSeparator(spaces);
        let query = `CONSTRUCT ` +
            triples + separator +
            this.where.toString(spaces);
        if (this.modifiers.length)
            query += separator + this.modifiers.join(separator);
        return query;
    }
}

//# sourceMappingURL=ConstructToken.js.map
