export const INDENTATION_SPACES = 4;
export function getSeparator(spaces) {
    if (spaces === void 0)
        return " ";
    return "\n";
}
export function getIndentation(spaces, extra) {
    if (spaces === void 0)
        return "";
    if (extra)
        spaces += extra;
    return " ".repeat(spaces);
}
export function addSpaces(spaces, extra) {
    if (spaces === void 0)
        return spaces;
    return spaces + extra;
}
export function getTokenContainerString({ spaces, tags, tokensSeparator, tokens }) {
    if (!tokens.length)
        return tags.open + tags.close;
    const generalSeparator = getSeparator(spaces);
    const tokensSpaces = addSpaces(spaces, INDENTATION_SPACES);
    const strArrayTokens = tokens.map((token, index, array) => {
        const strToken = token.toString(tokensSpaces);
        if (!tokensSeparator || index === array.length - 1)
            return strToken;
        if (tokensSeparator === "." && token.token !== "subject")
            return strToken;
        return strToken + tokensSeparator;
    });
    if (strArrayTokens.length === 1 && !strArrayTokens[0].includes("\n"))
        return tags.open + " " + strArrayTokens + " " + tags.close;
    const tokensIndent = getIndentation(tokensSpaces);
    const strTokens = strArrayTokens
        .map(x => tokensIndent + x)
        .join(generalSeparator);
    const indent = getIndentation(spaces);
    return tags.open +
        generalSeparator + strTokens + generalSeparator +
        indent + tags.close;
}

//# sourceMappingURL=printing.js.map
