{"version":3,"sources":["tokens/RDFLiteralToken.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAQ9C,MAAM,OAAO,eAAgB,SAAQ,YAAY;IAOhD,YAAa,KAAY,EAAE,cAAwC;QAClE,KAAK,CAAE,KAAK,CAAE,CAAC;QAEf,IAAI,CAAE,cAAc;YAAG,OAAO;QAG9B,IAAI,cAAc,CAAC,KAAK,KAAK,UAAU,EAAG;YACzC,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;SAC/B;aAAM;YACN,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;SAC3B;IACF,CAAC;IAED,QAAQ,CAAE,MAAc;QACvB,MAAM,KAAK,GAAU,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEtC,IAAI,IAAI,CAAC,QAAQ;YAAG,OAAO,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjD,IAAI,IAAI,CAAC,IAAI;YAAG,OAAO,GAAI,KAAM,KAAM,IAAI,CAAC,IAAK,EAAE,CAAC;QAEpD,OAAO,KAAK,CAAC;IACd,CAAC;CAED","file":"RDFLiteralToken.js","sourcesContent":["import { IRIToken } from \"./IRIToken\";\nimport { LanguageToken } from \"./LanguageToken\";\nimport { LiteralToken } from \"./LiteralToken\";\n\n\n/**\n * The token of the RDF Literal term.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rRDFLiteral}\n */\nexport class RDFLiteralToken extends LiteralToken {\n\treadonly value!:string;\n\treadonly type?:IRIToken;\n\treadonly language?:LanguageToken;\n\n\tconstructor( value:string, type?:IRIToken );\n\tconstructor( value:string, language?:LanguageToken );\n\tconstructor( value:string, typeOrLanguage?:IRIToken | LanguageToken ) {\n\t\tsuper( value );\n\n\t\tif( ! typeOrLanguage ) return;\n\n\n\t\tif( typeOrLanguage.token === \"language\" ) {\n\t\t\tthis.language = typeOrLanguage;\n\t\t} else {\n\t\t\tthis.type = typeOrLanguage;\n\t\t}\n\t}\n\n\ttoString( spaces?:number ):string {\n\t\tconst value:string = super.toString();\n\n\t\tif( this.language ) return value + this.language;\n\t\tif( this.type ) return `${ value }^^${ this.type }`;\n\n\t\treturn value;\n\t}\n\n}\n"],"sourceRoot":"../../src"}