import { getIndentation, getSeparator, INDENTATION_SPACES } from "./printing";
export class ValuesToken {
    constructor() {
        this.token = "values";
        this.variables = [];
        this.values = [];
    }
    addVariables(...variables) {
        this.variables.push(...variables);
        return this;
    }
    addValues(...values) {
        this.values.push(values);
        return this;
    }
    toString(spaces) {
        const variables = this._getVariablesStr();
        const values = this._getValuesStr(spaces);
        return `VALUES ${variables} ${values}`;
    }
    _getVariablesStr() {
        if (!this.variables.length)
            return "()";
        const variables = this.variables.join(" ");
        if (this.variables.length === 1)
            return variables;
        return `( ${variables} )`;
    }
    _getValuesStr(spaces) {
        if (!this.values.length)
            return "{}";
        if (this.variables.length === 1) {
            const values = this.values
                .filter(x => x.length)
                .map(x => x[0])
                .join(" ");
            if (!values)
                return "{}";
            return "{ " + values + " }";
        }
        const subIndent = getIndentation(spaces, INDENTATION_SPACES);
        const separator = getSeparator(spaces);
        const indent = getIndentation(spaces);
        return "{" + separator +
            this.values
                .map(values => {
                const valuesStr = values.length ?
                    `( ${values.join(" ")} )` : "()";
                return subIndent + valuesStr;
            })
                .join(separator) + separator +
            indent + "}";
    }
}

//# sourceMappingURL=ValuesToken.js.map
