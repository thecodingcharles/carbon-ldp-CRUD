{"version":3,"sources":["tokens/PropertyToken.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,cAAc,EAAE,YAAY,EAAE,MAAM,YAAY,CAAC;AAWrE,MAAM,OAAO,aAAa;IAMzB,YAAa,IAA8B;QALlC,UAAK,GAAc,UAAU,CAAC;QAMtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACnB,CAAC;IAGD,SAAS,CAAE,GAAG,MAAoB;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,GAAG,MAAM,CAAE,CAAC;QAC/B,OAAO,IAAI,CAAC;IACb,CAAC;IAGD,QAAQ,CAAE,MAAc;QACvB,MAAM,SAAS,GAAU,YAAY,CAAE,MAAM,CAAE,CAAC;QAEhD,MAAM,IAAI,GAAU,GAAI,IAAI,CAAC,IAAK,EAAE,CAAC;QAGrC,MAAM,YAAY,GAAsB,SAAS,CAAE,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;QAC7E,MAAM,YAAY,GAAU,cAAc,CAAE,YAAY,CAAE,CAAC;QAC3D,MAAM,OAAO,GAAU,IAAI,CAAC,OAAO;aACjC,GAAG,CAAE,MAAM,CAAC,EAAE;YACd,IAAI,MAAM,CAAC,KAAK,KAAK,YAAY,IAAI,MAAM,CAAC,KAAK,KAAK,mBAAmB;gBACxE,OAAO,MAAM,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;YAElC,OAAO,MAAM,CAAC,QAAQ,CAAE,YAAY,CAAE,CAAA;QACvC,CAAC,CAAE;aACF,IAAI,CAAE,GAAG,GAAG,SAAS,GAAG,YAAY,CAAE,CAAC;QAEzC,OAAO,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC;IAC7B,CAAC;CACD","file":"PropertyToken.js","sourcesContent":["import { ObjectToken } from \"./ObjectToken\";\nimport { PathToken } from \"./PathToken\";\nimport { addSpaces, getIndentation, getSeparator } from \"./printing\";\nimport { TokenNode } from \"./TokenNode\";\nimport { VariableToken } from \"./VariableToken\";\n\n\n/**\n * The token for defining a property statement.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rPropertyListNotEmpty}\n * @see {@link https://www.w3.org/TR/sparql11-query/#rPropertyListPathNotEmpty}\n */\nexport class PropertyToken implements TokenNode {\n\treadonly token:\"property\" = \"property\";\n\n\treadonly verb:VariableToken | PathToken;\n\treadonly objects:ObjectToken[];\n\n\tconstructor( verb:VariableToken | PathToken ) {\n\t\tthis.verb = verb;\n\t\tthis.objects = [];\n\t}\n\n\n\taddObject( ...object:ObjectToken[] ):this {\n\t\tthis.objects.push( ...object );\n\t\treturn this;\n\t}\n\n\n\ttoString( spaces?:number ):string {\n\t\tconst separator:string = getSeparator( spaces );\n\n\t\tconst verb:string = `${ this.verb }`;\n\n\t\t// Extra spaces until object\n\t\tconst objectSpaces:number | undefined = addSpaces( spaces, verb.length + 1 );\n\t\tconst objectIndent:string = getIndentation( objectSpaces );\n\t\tconst objects:string = this.objects\n\t\t\t.map( object => {\n\t\t\t\tif( object.token === \"collection\" || object.token === \"blankNodeProperty\" )\n\t\t\t\t\treturn object.toString( spaces );\n\n\t\t\t\treturn object.toString( objectSpaces )\n\t\t\t} )\n\t\t\t.join( \",\" + separator + objectIndent );\n\n\t\treturn verb + \" \" + objects;\n\t}\n}\n"],"sourceRoot":"../../src"}