{"version":3,"sources":["tokens/UnionPatternToken.ts"],"names":[],"mappings":"AASA,MAAM,OAAO,iBAAiB;IAK7B;QAJS,UAAK,GAAkB,cAAc,CAAC;QAK9C,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IACzB,CAAC;IAGD,QAAQ,CAAE,MAAc;QACvB,OAAO,IAAI;aACT,aAAa;aACb,GAAG,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAE;aAChC,IAAI,CAAE,SAAS,CAAE,CACjB;IACH,CAAC;CACD","file":"UnionPatternToken.js","sourcesContent":["import { GroupPatternToken } from \"./GroupPatternToken\";\nimport { TokenNode } from \"./TokenNode\";\n\n\n/**\n * The token of the `UNION` statement.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rGroupOrUnionGraphPattern}\n */\nexport class UnionPatternToken implements TokenNode {\n\treadonly token:\"unionPattern\" = \"unionPattern\";\n\n\treadonly groupPatterns:GroupPatternToken[];\n\n\tconstructor() {\n\t\tthis.groupPatterns = [];\n\t}\n\n\n\ttoString( spaces?:number ):string {\n\t\treturn this\n\t\t\t.groupPatterns\n\t\t\t.map( x => x.toString( spaces ) )\n\t\t\t.join( ` UNION ` )\n\t\t\t;\n\t}\n}\n"],"sourceRoot":"../../src"}