{"version":3,"sources":["patterns/paths/utils.ts"],"names":[],"mappings":";;AAqBA,SAAgB,gBAAgB,CAAuB,SAAwB,EAAE,QAAiE;IACjJ,IAAI,QAAQ,KAAK,GAAG;QACnB,OAAO,QAAQ,CAAC;IAEjB,IAAI,OAAO,QAAQ,KAAK,QAAQ;QAC/B,OAAO,SAAS,CAAC,WAAW,CAAC,OAAO,CAAE,QAAQ,EAAE,IAAI,CAAE,CAAC;IAExD,IAAI,OAAO,IAAI,QAAQ;QACtB,OAAO,QAAa,CAAC;IAEtB,IAAI,YAAY,IAAI,QAAQ;QAC3B,OAAO,QAAQ,CAAC,UAAU,EAAE,CAAC;IAE9B,OAAO,QAAQ,CAAC,OAAO,EAAE,CAAC;AAC3B,CAAC;AAdD,4CAcC","file":"utils.js","sourcesContent":["import { Container } from \"../../data/Container\";\n\nimport { IRIToken } from \"../../tokens/IRIToken\";\nimport { PathToken } from \"../../tokens/PathToken\";\nimport { VariableToken } from \"../../tokens/VariableToken\";\n\nimport { Resource } from \"../triplePatterns/Resource\";\nimport { Variable } from \"../triplePatterns/Variable\";\n\nimport { Path } from \"./Path\";\n\n\n/**\n * Obtain the token representation from the property provided.\n *\n * @param container The general container with the {@link IRIResolver}\n * that will be used to resolve a string property.\n * @param property The property to obtain its token.\n */\nexport function getPropertyToken<T extends PathToken>( container:Container<any>, property:Resource | \"a\" | string | Path<T> | PathToken ):IRIToken | \"a\" | T;\nexport function getPropertyToken<T extends PathToken>( container:Container<any>, property:Variable | Resource | \"a\" | string | Path<T> ):VariableToken | IRIToken | \"a\" | T;\nexport function getPropertyToken<T extends PathToken>( container:Container<any>, property:Variable | Resource | \"a\" | string | Path<T> | PathToken ):VariableToken | IRIToken | \"a\" | T {\n\tif( property === \"a\" )\n\t\treturn property;\n\n\tif( typeof property === \"string\" )\n\t\treturn container.iriResolver.resolve( property, true );\n\n\tif( \"token\" in property )\n\t\treturn property as T;\n\n\tif( \"getSubject\" in property )\n\t\treturn property.getSubject();\n\n\treturn property.getPath();\n}"],"sourceRoot":"../../../src"}