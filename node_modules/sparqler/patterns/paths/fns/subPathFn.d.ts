import { PathInNegatedToken } from "../../../tokens/PathInNegatedToken";
import { PathToken } from "../../../tokens/PathToken";
import { SubPathInNegatedToken } from "../../../tokens/SubPathInNegatedToken";
import { SubPathToken } from "../../../tokens/SubPathToken";
import { Resource } from "../../triplePatterns/Resource";
import { DeniableFluentPath } from "../DeniableFluentPath";
import { FluentPath } from "../FluentPath";
import { FluentPathContainer } from "../FluentPathContainer";
import { Path } from "../Path";
export declare type SubPathFn<T extends PathToken = PathToken> = (path?: Resource | "a" | string | Path<PathToken>) => (T extends PathInNegatedToken ? DeniableFluentPath<SubPathToken<T>> : FluentPath<SubPathToken<T>>) & DeniableFluentPath<SubPathInNegatedToken>;
export declare function getSubPathFn<T extends PathToken>(container: FluentPathContainer<undefined | PathToken>): SubPathFn<T>;
