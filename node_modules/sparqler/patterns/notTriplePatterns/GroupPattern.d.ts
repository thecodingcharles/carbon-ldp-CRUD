import { Container } from "../../data/Container";
import { GroupPatternToken } from "../../tokens/GroupPatternToken";
import { Pattern } from "../Pattern";
import { NotTriplePattern } from "./NotTriplePattern";
import { UnionPattern } from "./UnionPattern";
/**
 * Wrapper for easier usage of SPARQL group patterns.
 */
export interface GroupPattern extends NotTriplePattern<GroupPatternToken> {
    union(patterns: Pattern | Pattern[]): UnionPattern;
}
/**
 * Constant with utils for {@link GroupPattern} objects.
 */
export declare const GroupPattern: {
    /**
     * Factory function that allows to crete a {@link GroupPattern}
     * from the {@param object} provided.
     *
     * @param container The related container with the data for the
     * {@link GroupPattern} statement.
     * @param object The base base from where to create the
     * {@link GroupPattern} statement.
     *
     * @return The {@link GroupPattern} statement created from the
     * {@param object} provided.
     */
    createFrom<C extends Container<GroupPatternToken>, O extends object>(container: C, object: O): GroupPattern;
};
