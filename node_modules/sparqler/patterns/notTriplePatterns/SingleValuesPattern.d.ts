import { Container } from "../../data/Container";
import { ValuesToken } from "../../tokens/ValuesToken";
import { SupportedNativeTypes } from "../SupportedNativeTypes";
import { Literal } from "../triplePatterns/Literal";
import { Resource } from "../triplePatterns/Resource";
import { Undefined } from "../Undefined";
import { NotTriplePattern } from "./NotTriplePattern";
/**
 * Wrapper for easier usage of SPARQL VALUES patterns that have
 * a single variable.
 */
export interface SingleValuesPattern extends NotTriplePattern<ValuesToken> {
    has(value: SupportedNativeTypes | Resource | Literal | Undefined): SingleValuesPatternMore;
}
/**
 * Wrapper for add more values to a {@link SingleValuesPattern}.
 */
export interface SingleValuesPatternMore extends NotTriplePattern<ValuesToken> {
    and(value: SupportedNativeTypes | Resource | Literal | Undefined): SingleValuesPatternMore;
}
/**
 * Constant with utils for {@link SingleValuesPattern} objects.
 */
export declare const SingleValuesPattern: {
    /**
     * Factory function that allows to crete a {@link SingleValuesPattern}
     * from the {@param object} provided.
     *
     * @param container The related container with the data for the
     * {@link SingleValuesPattern} statement.
     * @param object The base base from where to create the
     * {@link SingleValuesPattern} statement.
     *
     * @return The {@link SingleValuesPattern} statement created from the
     * {@param object} provided.
     */
    createFrom<C extends Container<ValuesToken>, O extends object>(container: C, object: O): SingleValuesPattern;
};
/**
 * Constant with utils for {@link SingleValuesPatternMore} objects.
 */
export declare const SingleValuesPatternMore: {
    /**
     * Factory function that allows to crete a {@link SingleValuesPatternMore}
     * from the {@param object} provided.
     *
     * @param container The related container with the data for the
     * {@link SingleValuesPatternMore} statement.
     * @param object The base base from where to create the
     * {@link SingleValuesPatternMore} statement.
     *
     * @return The {@link SingleValuesPatternMore} statement created from the
     * {@param object} provided.
     */
    createFrom<C extends Container<ValuesToken>, O extends object>(container: C, object: O): SingleValuesPatternMore;
};
