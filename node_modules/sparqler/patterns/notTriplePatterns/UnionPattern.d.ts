import { Container } from "../../data/Container";
import { UnionPatternToken } from "../../tokens/UnionPatternToken";
import { Pattern } from "../Pattern";
import { NotTriplePattern } from "./NotTriplePattern";
/**
 * Wrapper for easier usage of SPARQL UNION patterns.
 */
export interface UnionPattern extends NotTriplePattern<UnionPatternToken> {
    and(patterns: Pattern | Pattern[]): UnionPattern;
}
/**
 * Constant with utils for {@link UnionPattern} objects.
 */
export declare const UnionPattern: {
    /**
     * Factory function that allows to crete a {@link UnionPattern}
     * from the {@param object} provided.
     *
     * @param container The related container with the data for the
     * {@link UnionPattern} statement.
     * @param object The base base from where to create the
     * {@link UnionPattern} statement.
     *
     * @return The {@link UnionPattern} statement created from the
     * {@param object} provided.
     */
    createFrom<C extends Container<UnionPatternToken>, O extends object>(container: C, object: O): UnionPattern;
};
