import { Container } from "../../data/Container";
import { GroupPatternToken } from "../../tokens/GroupPatternToken";
import { UnionPatternToken } from "../../tokens/UnionPatternToken";
import { NotTriplePattern } from "./NotTriplePattern";
import { UnionPattern } from "./UnionPattern";
function getUnionFn(container) {
    return function (patterns) {
        var _a;
        patterns = Array.isArray(patterns) ? patterns : [patterns];
        var newGroupToken = new GroupPatternToken();
        (_a = newGroupToken.patterns).push.apply(_a, patterns.map(function (x) { return x.getPattern(); }));
        var unionToken = new UnionPatternToken();
        unionToken.groupPatterns.push(container.targetToken, newGroupToken);
        var newContainer = new Container({
            iriResolver: container.iriResolver,
            targetToken: unionToken,
        });
        return UnionPattern.createFrom(newContainer, {});
    };
}
export var GroupPattern = {
    createFrom: function (container, object) {
        return NotTriplePattern.createFrom(container, Object.assign(object, {
            union: getUnionFn(container),
        }));
    }
};

//# sourceMappingURL=GroupPattern.js.map
