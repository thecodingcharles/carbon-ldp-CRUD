import { cloneElement } from "../../data/utils";
import { convertValue } from "../utils";
import { NotTriplePattern } from "./NotTriplePattern";
function getHasFn(container) {
    return function () {
        var values = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            values[_i] = arguments[_i];
        }
        var parsedValues = container.targetToken.values.slice();
        parsedValues.push(values.map(convertValue));
        var targetToken = cloneElement(container.targetToken, { values: parsedValues });
        var newContainer = cloneElement(container, { targetToken: targetToken });
        return MultipleValuesPatternMore.createFrom(newContainer, {});
    };
}
export var MultipleValuesPattern = {
    createFrom: function (container, object) {
        return NotTriplePattern.createFrom(container, Object.assign(object, {
            has: getHasFn(container),
        }));
    },
};
export var MultipleValuesPatternMore = {
    createFrom: function (container, object) {
        return NotTriplePattern.createFrom(container, Object.assign(object, {
            and: getHasFn(container),
        }));
    },
};

//# sourceMappingURL=MultipleValuesPattern.js.map
