import * as tslib_1 from "tslib";
import { PathNegatedToken } from "../../../tokens/PathNegatedToken";
import { FluentPathContainer } from "../FluentPathContainer";
import { getPropertyToken } from "../utils";
import { _getTokenWrapper } from "./utils";
var _getInNegatedToken = _getTokenWrapper("pathAlternative");
export function getNegatedFn(container) {
    return function (path) {
        var token = container.targetToken
            ? container.targetToken
            : getPropertyToken(container, path);
        var inNegatedToken = _getInNegatedToken(token);
        var targetToken = new PathNegatedToken(inNegatedToken);
        var newContainer = new FluentPathContainer(tslib_1.__assign({}, container, { targetToken: targetToken }));
        return container.fluentPathFactory(newContainer, {});
    };
}

//# sourceMappingURL=negatedFn.js.map
