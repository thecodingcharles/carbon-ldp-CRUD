import * as tslib_1 from "tslib";
import { PathModToken } from "../../../tokens/PathModToken";
import { FluentPathContainer } from "../FluentPathContainer";
import { getPropertyToken } from "../utils";
import { _getTokenWrapper } from "./utils";
var _getInModToken = _getTokenWrapper("pathAlternative", "pathSequence", "pathInverse", "pathMod");
export function getModFn(container, mod) {
    return function (path) {
        var token = container.targetToken
            ? container.targetToken
            : getPropertyToken(container, path);
        var inModToken = _getInModToken(token);
        var targetToken = new PathModToken(inModToken, mod);
        var newContainer = new FluentPathContainer(tslib_1.__assign({}, container, { targetToken: targetToken }));
        return container.fluentPathFactory(newContainer, {});
    };
}

//# sourceMappingURL=modFn.js.map
