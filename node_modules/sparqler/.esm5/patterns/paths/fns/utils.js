import { SharedSubPathToken } from "../../../tokens/SharedSubPathToken";
export function _getTokenWrapper() {
    var symbols = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        symbols[_i] = arguments[_i];
    }
    return function (token) {
        if (token === "a")
            return token;
        if (symbols.indexOf(token.token) !== -1)
            return new SharedSubPathToken(token);
        return token;
    };
}
export function _isBasePrimitive(token) {
    return token === "a"
        || token.token === "iri"
        || token.token === "prefixedName";
}
export function _isPathInNegatedToken(token) {
    return _isBasePrimitive(token)
        || (token.token === "pathInverse"
            && _isBasePrimitive(token.path));
}

//# sourceMappingURL=utils.js.map
