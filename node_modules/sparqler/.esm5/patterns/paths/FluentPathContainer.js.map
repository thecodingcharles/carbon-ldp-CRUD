{"version":3,"sources":["patterns/paths/FluentPathContainer.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAiB,MAAM,sBAAsB,CAAC;AAoChE;IAA0E,+CAAY;IAKrF,6BAAa,IAA+B;;QAA5C,YACC,kBAAO,IAAI,CAAE,SAMb;QAJA,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChD,KAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,CAAC;QAEhE,IAAI,eAAe,mBAAmB;YAAG,MAAM,CAAC,MAAM,CAAE,KAAI,CAAE,CAAC;;IAChE,CAAC;IACF,0BAAC;AAAD,CAbA,AAaC,CAbyE,SAAS,GAalF","file":"FluentPathContainer.js","sourcesContent":["import { Container, ContainerData } from \"../../data/Container\";\n\nimport { PathAlternativeToken } from \"../../tokens/PathAlternativeToken\";\nimport { PathInNegatedToken } from \"../../tokens/PathInNegatedToken\";\nimport { PathToken } from \"../../tokens/PathToken\";\nimport { SubPathInNegatedToken } from \"../../tokens/SubPathInNegatedToken\";\n\nimport { DeniableFluentPath } from \"./DeniableFluentPath\";\nimport { FluentPath } from \"./FluentPath\";\n\n\n/**\n * Interface that describe the necessary data for the creation\n * of a {@link FluentPathContainer}.\n */\nexport interface FluentPathContainerData<T extends PathToken | undefined> extends ContainerData<T> {\n\t/**\n\t * @see FluentPathContainer.fluentPathFactory\n\t */\n\tfluentPathFactory:<W extends PathToken, O extends object>( container:FluentPathContainer<W>, object:O ) => O & FluentPath<W>;\n\n\t/**\n\t * @see FluentPathContainer.deniableFluentPathFactory\n\t */\n\tdeniableFluentPathFactory:<W extends PathInNegatedToken | SubPathInNegatedToken | PathAlternativeToken<PathInNegatedToken>, O extends object>( container:FluentPathContainer<W>, object:O ) => O & DeniableFluentPath<W>;\n}\n\n\n/**\n * Extension of the {@link Container} class that adds the factory\n * for construct FluentPath.\n *\n * The factory is provided from the container to avoid circular\n * dependency when imported directly in the fluent functions of the\n * paths builder and objects.\n */\nexport class FluentPathContainer<T extends PathToken | undefined> extends Container<T> implements FluentPathContainerData<T> {\n\n\treadonly fluentPathFactory:<W extends PathToken, O extends object>( container:FluentPathContainer<W>, object:O ) => O & FluentPath<W>;\n\treadonly deniableFluentPathFactory:<W extends PathInNegatedToken | SubPathInNegatedToken | PathAlternativeToken<PathInNegatedToken>, O extends object>( container:FluentPathContainer<W>, object:O ) => O & DeniableFluentPath<W>;\n\n\tconstructor( data:FluentPathContainerData<T> ) {\n\t\tsuper( data );\n\n\t\tthis.fluentPathFactory = data.fluentPathFactory;\n\t\tthis.deniableFluentPathFactory = data.deniableFluentPathFactory;\n\n\t\tif( new.target === FluentPathContainer ) Object.freeze( this );\n\t}\n}\n"],"sourceRoot":"../../../src"}