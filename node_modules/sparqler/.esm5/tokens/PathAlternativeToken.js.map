{"version":3,"sources":["tokens/PathAlternativeToken.ts"],"names":[],"mappings":"AAQA;IAIC;QAHS,UAAK,GAAqB,iBAAiB,CAAC;QAIpD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACjB,CAAC;IAGD,sCAAO,GAAP,UAAS,IAAM;QACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;QAExB,OAAO,IAAI,CAAC;IACb,CAAC;IAGD,uCAAQ,GAAR;QACC,OAAO,IAAI,CAAC,KAAK;aACf,IAAI,CAAE,GAAG,CAAE,CAAC;IACf,CAAC;IACF,2BAAC;AAAD,CApBA,AAoBC,IAAA","file":"PathAlternativeToken.js","sourcesContent":["import { PathInAlternativeToken } from \"./PathInAlternativeToken\";\n\n\n/**\n * Token for the alternative paths statement.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rPathAlternative}\n */\nexport class PathAlternativeToken<T extends PathInAlternativeToken = PathInAlternativeToken> {\n\treadonly token:\"pathAlternative\" = \"pathAlternative\";\n\treadonly paths:T[];\n\n\tconstructor() {\n\t\tthis.paths = [];\n\t}\n\n\n\taddPath( path:T ):this {\n\t\tthis.paths.push( path );\n\n\t\treturn this;\n\t}\n\n\n\ttoString():string {\n\t\treturn this.paths\n\t\t\t.join( \"|\" );\n\t}\n}\n"],"sourceRoot":"../../src"}