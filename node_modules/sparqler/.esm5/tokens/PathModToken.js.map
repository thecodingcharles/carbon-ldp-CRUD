{"version":3,"sources":["tokens/PathModToken.ts"],"names":[],"mappings":"AASA;IAKC,sBAAa,IAAqB,EAAE,GAAmB;QAJ9C,UAAK,GAAa,SAAS,CAAC;QAKpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IAChB,CAAC;IAED,+BAAQ,GAAR;QACC,OAAO,KAAI,IAAI,CAAC,IAAI,GAAK,IAAI,CAAC,GAAM,CAAC;IACtC,CAAC;IACF,mBAAC;AAAD,CAbA,AAaC,IAAA","file":"PathModToken.js","sourcesContent":["import { PathPrimaryToken } from \"./PathPrimaryToken\";\nimport { TokenNode } from \"./TokenNode\";\n\n\n/**\n * Token for the primary path with an specific mod.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rPathMod}\n */\nexport class PathModToken implements TokenNode {\n\treadonly token:\"pathMod\" = \"pathMod\";\n\treadonly path:PathPrimaryToken;\n\treadonly mod:\"?\" | \"*\" | \"+\";\n\n\tconstructor( path:PathPrimaryToken, mod:\"?\" | \"*\" | \"+\" ) {\n\t\tthis.path = path;\n\t\tthis.mod = mod;\n\t}\n\n\ttoString():string {\n\t\treturn `${ this.path }${ this.mod }`;\n\t}\n}\n"],"sourceRoot":"../../src"}