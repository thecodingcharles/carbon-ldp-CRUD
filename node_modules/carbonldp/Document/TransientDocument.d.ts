import { Context } from "../Context/Context";
import { DocumentsRegistry } from "../DocumentsRegistry/DocumentsRegistry";
import { TransientFragment } from "../Fragment/TransientFragment";
import { ModelDecorator } from "../Model/ModelDecorator";
import { ModelFactoryOptional } from "../Model/ModelFactoryOptional";
import { ModelPrototype } from "../Model/ModelPrototype";
import { ModelTypeGuard } from "../Model/ModelTypeGuard";
import { Pointer } from "../Pointer/Pointer";
import { RDFDocument } from "../RDF/Document";
import { $Registry } from "../Registry/Registry";
import { Resource } from "../Resource/Resource";
import { BaseDocument } from "./BaseDocument";
export interface TransientDocument extends Resource, $Registry<TransientFragment> {
    $registry: DocumentsRegistry | undefined;
    hasMemberRelation?: Pointer;
    isMemberOfRelation?: Pointer;
    insertedContentRelation?: Pointer;
    defaultInteractionModel?: Pointer;
    $hasFragment(id: string): boolean;
    $getFragment<T extends object>(id: string): (T & TransientFragment) | null;
    $getFragments(): TransientFragment[];
    $createFragment<T extends object>(object: T, id?: string): T & TransientFragment;
    $createFragment(id?: string): TransientFragment;
    $removeFragment(idOrFragment: string | TransientFragment): boolean;
    $_normalize(): void;
    $_getLocalID(id: string): string;
    toJSON(contextOrKey?: Context | string): RDFDocument;
}
export declare type OverriddenMembers = "$registry" | "$_getLocalID" | "$getPointer" | "toJSON";
export declare type TransientDocumentFactory = ModelPrototype<TransientDocument, Resource & $Registry<TransientFragment>, OverriddenMembers> & ModelDecorator<TransientDocument, BaseDocument> & ModelFactoryOptional<TransientDocument, BaseDocument> & ModelTypeGuard<TransientDocument>;
export declare const TransientDocument: TransientDocumentFactory;
