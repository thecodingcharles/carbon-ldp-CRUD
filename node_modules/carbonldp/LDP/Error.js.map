{"version":3,"sources":["LDP/Error.ts"],"names":[],"mappings":";;AAIA,uCAAsC;AACtC,2CAA0C;AAkC1C,IAAM,MAAM,GAAgB;IAC3B,WAAW,EAAE;QACZ,KAAK,EAAE,KAAC,CAAC,SAAS;QAClB,OAAO,EAAE,SAAG,CAAC,MAAM;KACnB;IACD,cAAc,EAAE;QACf,KAAK,EAAE,KAAC,CAAC,YAAY;QACrB,WAAW,EAAE,IAAI;KACjB;IACD,iBAAiB,EAAE;QAClB,KAAK,EAAE,KAAC,CAAC,eAAe;QACxB,OAAO,EAAE,KAAK;KACd;CACD,CAAC;AAKW,QAAA,KAAK,GAAgB;IACjC,IAAI,EAAE,KAAC,CAAC,KAAK;IACb,MAAM,QAAA;CACN,CAAC","file":"Error.js","sourcesContent":["import { ObjectSchema } from \"../ObjectSchema/ObjectSchema\";\n\nimport { Resource } from \"../Resource/Resource\";\n\nimport { C } from \"../Vocabularies/C\";\nimport { XSD } from \"../Vocabularies/XSD\";\n\nimport { Map } from \"./Map\";\n\n\n/**\n * Model that represents a `c:Error`.\n * This model is returned by the server when an error occurs.\n */\nexport interface Error extends Resource {\n\t/**\n\t * Code that indicates the type of error ocurred.\n\t */\n\terrorCode:string;\n\t/**\n\t * Message that explains the error.\n\t */\n\terrorMessage:string;\n\t/**\n\t * `c:Map` that contains the specific elements that generated the error.\n\t */\n\terrorParameters:Map<string, any>;\n}\n\n\n/**\n * Factory, decorator and utils for {@link Error}.\n */\n// TODO: Change to type-alias\nexport interface ErrorFactory {\n\tTYPE:string;\n\tSCHEMA:ObjectSchema;\n}\n\nconst SCHEMA:ObjectSchema = {\n\t\"errorCode\": {\n\t\t\"@id\": C.errorCode,\n\t\t\"@type\": XSD.string,\n\t},\n\t\"errorMessage\": {\n\t\t\"@id\": C.errorMessage,\n\t\t\"@language\": \"en\",\n\t},\n\t\"errorParameters\": {\n\t\t\"@id\": C.errorParameters,\n\t\t\"@type\": \"@id\",\n\t},\n};\n\n/**\n * Constant that implements {@link ErrorFactory}.\n */\nexport const Error:ErrorFactory = {\n\tTYPE: C.Error,\n\tSCHEMA,\n};\n"],"sourceRoot":"../../src"}