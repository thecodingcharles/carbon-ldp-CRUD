{"version":3,"sources":["LDP/DocumentMetadata.ts"],"names":[],"mappings":";;AAQA,uCAAsC;AA+BtC,IAAM,MAAM,GAAgB;IAC3B,iBAAiB,EAAE;QAClB,KAAK,EAAE,KAAC,CAAC,eAAe;QACxB,OAAO,EAAE,KAAK;KACd;IACD,WAAW,EAAE;QACZ,KAAK,EAAE,KAAC,CAAC,SAAS;QAClB,OAAO,EAAE,KAAK;KACd;CACD,CAAC;AAKW,QAAA,gBAAgB,GAA2B;IACvD,IAAI,EAAE,KAAC,CAAC,gBAAgB;IACxB,MAAM,QAAA;CACN,CAAC","file":"DocumentMetadata.js","sourcesContent":["import { Document } from \"../Document/Document\";\n\nimport { ModelSchema } from \"../Model/ModelSchema\";\n\nimport { ObjectSchema } from \"../ObjectSchema/ObjectSchema\";\n\nimport { Pointer } from \"../Pointer/Pointer\";\n\nimport { C } from \"../Vocabularies/C\";\n\nimport { Map } from \"./Map\";\nimport { VolatileResource } from \"./VolatileResource\";\n\n\n/**\n * Model that represents a `c:DocumentMetadata`.\n * This model contains volatile information about an specific resource.\n */\nexport interface DocumentMetadata extends VolatileResource {\n\t/**\n\t * Resource the metadata refers to.\n\t */\n\trelatedDocument:Document;\n\t/**\n\t * `c:Map` that contains the changed IDs when persisting BNodes.\n\t */\n\tbNodesMap:Map<Pointer, Pointer>;\n}\n\n\n/**\n * Factory, decorator and utils for {@link DocumentMetadata}.\n */\n// TODO: Change to type-alias\nexport interface DocumentMetadataFactory extends ModelSchema {\n\tTYPE:C[ \"DocumentMetadata\" ];\n\tSCHEMA:ObjectSchema;\n}\n\nconst SCHEMA:ObjectSchema = {\n\t\"relatedDocument\": {\n\t\t\"@id\": C.relatedDocument,\n\t\t\"@type\": \"@id\",\n\t},\n\t\"bNodesMap\": {\n\t\t\"@id\": C.bNodesMap,\n\t\t\"@type\": \"@id\",\n\t},\n};\n\n/**\n * Constant that implements {@link DocumentMetadataFactory}.\n */\nexport const DocumentMetadata:DocumentMetadataFactory = {\n\tTYPE: C.DocumentMetadata,\n\tSCHEMA,\n};\n"],"sourceRoot":"../../src"}