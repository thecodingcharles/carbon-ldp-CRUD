"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tokens_1 = require("sparqler/tokens");
var Utils_1 = require("../Utils");
var XSD_1 = require("../Vocabularies/XSD");
var QueryValue = (function () {
    function QueryValue(queryContainer, value) {
        this._value = value;
        this._queryContainer = queryContainer;
        if (Utils_1.isDate(value)) {
            this.withType(XSD_1.XSD.dateTime);
        }
        else {
            this._literal = new tokens_1.LiteralToken(value);
        }
    }
    QueryValue.prototype.withType = function (type) {
        if (XSD_1.XSD.hasOwnProperty(type))
            type = XSD_1.XSD[type];
        var value = this._queryContainer.serializeLiteral(type, this._value);
        var typeToken = this._queryContainer.compactIRI(type);
        this._literal = new tokens_1.RDFLiteralToken(value, typeToken);
        return this;
    };
    QueryValue.prototype.withLanguage = function (language) {
        var value = this._queryContainer.serializeLiteral(XSD_1.XSD.string, this._value);
        var languageToken = new tokens_1.LanguageToken(language);
        this._literal = new tokens_1.RDFLiteralToken(value, languageToken);
        return this;
    };
    QueryValue.prototype.getToken = function () {
        return this._literal;
    };
    QueryValue.prototype.toString = function () {
        return "" + this._literal;
    };
    return QueryValue;
}());
exports.QueryValue = QueryValue;

//# sourceMappingURL=QueryValue.js.map
