import { IRIToken, PatternToken, SubjectToken, SubSelectToken } from "sparqler/tokens";
import { QueryContainer } from "./QueryContainer";
import { QueryContainerPropertyType } from "./QueryContainerPropertyType";
import { QueryDocumentsOrder } from "./QueryDocumentsOrder";
import { QueryProperty } from "./QueryProperty";
export interface QueryContainerPropertyData {
    queryContainer: QueryContainer;
    containerIRI: IRIToken;
    containerPropertyType: QueryContainerPropertyType;
}
export declare class QueryContainerProperty extends QueryProperty {
    readonly parent: undefined;
    readonly containerIRI: IRIToken;
    readonly containerPropertyType: QueryContainerPropertyType;
    order?: QueryDocumentsOrder;
    protected _limit?: number;
    protected _offset?: number;
    constructor(data: QueryContainerPropertyData);
    protected __createSelfPattern(): PatternToken | undefined;
    protected __createChildSelfPattern(): PatternToken;
    protected __createMemberSelfPattern(): PatternToken[];
    protected __addLimitTo(subSelect: SubSelectToken): void;
    protected __addOffsetTo(subSelect: SubSelectToken): void;
    protected __addOrderTo(subSelect: SubSelectToken): void;
    protected __createSubPatternsFrom(targetProperty: QueryProperty): PatternToken[];
    protected __addTypesTo(pattern: SubjectToken): void;
    setOrder(order: QueryDocumentsOrder): void;
    setLimit(limit: number): void;
    setOffset(offset: number): void;
}
