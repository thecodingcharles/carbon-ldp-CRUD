{"version":3,"sources":["HTTP/Errors/HTTPError.ts"],"names":[],"mappings":";;;AAAA,4DAA2D;AAO3D;IAA+B,qCAAa;IAa3C,mBAAa,OAAc,EAAE,QAAiB;QAA9C,YACC,kBAAO,OAAO,CAAE,SAEhB;QADA,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;IAC1B,CAAC;IAZD,sBAAW,uBAAU;aAArB,cAAwC,OAAO,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAEtD,sBAAI,2BAAI;aAAR,cAAoB,OAAO,WAAW,CAAC,CAAC,CAAC;;;OAAA;IAW1C,gBAAC;AAAD,CAjBA,AAiBC,CAjB8B,6BAAa,GAiB3C;AAjBY,8BAAS","file":"HTTPError.js","sourcesContent":["import { AbstractError } from \"../../Errors/AbstractError\";\nimport { Response } from \"../Response\";\n\n\n/**\n * Generic error class that defines any type of HTTP Error used in the SDK.\n */\nexport class HTTPError extends AbstractError {\n\t/**\n\t * Status code of the HTTP error.\n\t */\n\tstatic get statusCode():number | null { return null; }\n\n\tget name():string { return \"HTTPError\"; }\n\n\t/**\n\t * Response that was received with the HTTP error.\n\t */\n\tresponse:Response;\n\n\tconstructor( message:string, response:Response ) {\n\t\tsuper( message );\n\t\tthis.response = response;\n\t}\n}\n"],"sourceRoot":"../../../src"}