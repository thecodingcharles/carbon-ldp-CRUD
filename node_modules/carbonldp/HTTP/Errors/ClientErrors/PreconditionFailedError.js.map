{"version":3,"sources":["HTTP/Errors/ClientErrors/PreconditionFailedError.ts"],"names":[],"mappings":";;;AAAA,0CAAyC;AAEzC,IAAM,IAAI,GAAU,yBAAyB,CAAC;AAC9C,IAAM,UAAU,GAAU,GAAG,CAAC;AAK9B;IAA6C,mDAAS;IAAtD;;IAIA,CAAC;IAHA,sBAAW,qCAAU;aAArB,cAAiC,OAAO,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAErD,sBAAI,yCAAI;aAAR,cAAoB,OAAO,IAAI,CAAC,CAAC,CAAC;;;OAAA;IACnC,8BAAC;AAAD,CAJA,AAIC,CAJ4C,qBAAS,GAIrD;AAJY,0DAAuB","file":"PreconditionFailedError.js","sourcesContent":["import { HTTPError } from \"../HTTPError\";\n\nconst name:string = \"PreconditionFailedError\";\nconst statusCode:number = 412;\n\n/**\n * Error class to indicate that the precondition header was resolved to false.\n */\nexport class PreconditionFailedError extends HTTPError {\n\tstatic get statusCode():number { return statusCode; }\n\n\tget name():string { return name; }\n}\n"],"sourceRoot":"../../../../src"}