{"version":3,"sources":["Model/ModelPrototype.ts"],"names":[],"mappings":"","file":"ModelPrototype.js","sourcesContent":["// Workaround for TS2.8 Exclude\nexport type DiffKeys<T, U> = ({ [P in keyof T]:P } & { [P in keyof U]:never } & { [ x:string ]:never })[keyof T];\n\n/**\n * Interface with the property for describing a model prototype.\n * - The `MODEL` generic specifies the interface of the model\n * - The `EXTENDED` has all the interfaces that the model is extending so the prototype has not to re-implements that methods\n * - And the `OVERRIDDEN` one are the names of the methods the prototype must override/re-implement\n */\nexport interface ModelPrototype<MODEL extends object, EXTENDED extends object = {}, OVERRIDDEN extends keyof MODEL = never> {\n\t/**\n\t * The object with the properties/methods to use in the decoration of a model.\n\t */\n\tPROTOTYPE:Pick<MODEL, DiffKeys<MODEL, EXTENDED> | OVERRIDDEN>;\n}\n"],"sourceRoot":"../../src"}