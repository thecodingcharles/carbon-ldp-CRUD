{"version":3,"sources":["Context/DocumentsContext.ts"],"names":[],"mappings":"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","file":"DocumentsContext.js","sourcesContent":["import { Document } from \"../Document/Document\";\n\nimport { DocumentsRegistry } from \"../DocumentsRegistry/DocumentsRegistry\";\nimport { DocumentsRepository } from \"../DocumentsRepository/DocumentsRepository\";\n\nimport { IllegalStateError } from \"../Errors/IllegalStateError\";\n\nimport { MessagingService } from \"../Messaging/MessagingService\";\n\nimport { URI } from \"../RDF/URI\";\n\nimport { isObject, isString, ObjectUtils } from \"../Utils\";\n\nimport { AbstractContext } from \"./AbstractContext\";\nimport { DocumentPaths, DocumentsContextSettings, Paths } from \"./DocumentsContextSettings\";\nimport { GlobalContext } from \"./GlobalContext\";\n\n\n/**\n * Context to manage {@link Document}'s.\n */\nexport class DocumentsContext extends AbstractContext<Document, Document, GlobalContext> {\n\n\tprotected _baseURI:string;\n\n\t/**\n\t * Registry that can only stores {@link Document}'s.\n\t */\n\treadonly registry:DocumentsRegistry;\n\t/**\n\t * Repository to fetch the {@link Document}'s data.\n\t */\n\treadonly repository:DocumentsRepository;\n\t/**\n\t * Messaging service with the raw methods to configure and connect a\n\t * notification broker by Sock.js using the STOMP and AMQP protocols.\n\t */\n\treadonly messaging:MessagingService;\n\n\tprotected _settings?:DocumentsContextSettings;\n\n\n\tprivate static __mergePaths( this:void, target?:Paths, source?:Paths ):Paths | undefined {\n\t\tif( ! source ) return target;\n\t\tif( ! target ) return ObjectUtils.clone( source, { objects: true } );\n\n\t\tfor( const key of Object.keys( source ) ) {\n\t\t\tconst sourcePath:string | DocumentPaths | null = source[ key ];\n\n\t\t\tif( sourcePath === null ) {\n\t\t\t\tdelete target[ key ];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst targetPath:string | DocumentPaths | null = target[ key ];\n\t\t\tif( ! targetPath ) {\n\t\t\t\ttarget[ key ] = isObject( sourcePath ) ?\n\t\t\t\t\tObjectUtils.clone( sourcePath, { objects: true } )! :\n\t\t\t\t\tsourcePath;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( isString( sourcePath ) ) {\n\t\t\t\tif( isObject( targetPath ) ) {\n\t\t\t\t\ttargetPath.slug = sourcePath;\n\t\t\t\t} else {\n\t\t\t\t\ttarget[ key ] = sourcePath;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( sourcePath.slug === void 0 && sourcePath.paths === void 0 ) continue;\n\n\t\t\tconst targetDocPaths:DocumentPaths = isString( targetPath ) ?\n\t\t\t\ttarget[ key ] = { slug: targetPath } : targetPath;\n\n\t\t\tif( sourcePath.slug !== void 0 ) targetDocPaths.slug = sourcePath.slug;\n\t\t\tif( sourcePath.paths !== void 0 ) targetDocPaths.paths = DocumentsContext.__mergePaths( targetDocPaths.paths, sourcePath.paths );\n\t\t}\n\n\t\treturn target;\n\t}\n\n\n\t/**\n\t * Create an instance of the document context with the URL as the base URI.\n\t * @param url URL to be set as the base URI of the context.\n\t */\n\tconstructor( url:string ) {\n\t\tsuper( GlobalContext.instance );\n\t\tthis._baseURI = url;\n\n\n\t\tthis.registry = DocumentsRegistry.createFrom( { context: this } );\n\t\tthis.repository = DocumentsRepository.createFrom( { context: this } );\n\n\t\tthis.messaging = new MessagingService( this );\n\t}\n\n\n\t/**\n\t * Resolves the path provided into an URL using the `path` settings of the context.\n\t * If such path does hasn't been declared an {@link IllegalStateError} will be thrown.\n\t *\n\t * Example:\n\t * The path `system.platform` with the default setting:\n\t *\n\t * ```javascript\n\t * {\n\t *     paths: {\n\t *         system: {\n\t *             slug: \".system/\",\n\t *             paths: { platform: \"platform/\" }\n\t *         }\n\t *     }\n\t * }\n\t * ```\n\t *\n\t * This should resolve to something like `https://example.com/.system/platform/`.\n\t *\n\t * @param path The dot notation string that refers the path declared in the settings\n\t * of the context.\n\t *\n\t * @returns The absolute URI of the path provided.\n\t */\n\t_resolvePath( path:string ):string {\n\t\tconst leftSearchedPaths:string[] = path.split( \".\" );\n\t\tconst currentSearchedPaths:string[] = [];\n\n\t\tlet url:string = \"\";\n\t\tlet documentPaths:DocumentPaths[ \"paths\" ] = this._settings && this._settings.paths;\n\t\twhile( leftSearchedPaths.length ) {\n\t\t\tconst containerKey:string = leftSearchedPaths.shift()!;\n\t\t\tcurrentSearchedPaths.push( containerKey );\n\n\t\t\tconst containerPath:string | DocumentPaths | null = documentPaths ? documentPaths[ containerKey ] : null;\n\t\t\tif( ! containerPath ) throw new IllegalStateError( `The path \"${ currentSearchedPaths.join( \".\" ) }\" hasn't been declared.` );\n\n\t\t\tconst slug:string | undefined = isString( containerPath ) ? containerPath : containerPath.slug;\n\t\t\tif( ! slug ) throw new IllegalStateError( `The path \"${ currentSearchedPaths.join( \".\" ) }\" doesn't have a slug set.` );\n\n\t\t\turl = URI.resolve( url, slug );\n\t\t\tdocumentPaths = isObject( containerPath ) ? containerPath.paths : undefined;\n\t\t}\n\n\t\treturn this.resolve( url );\n\t}\n\n\tprotected _extendPaths( paths:Paths | undefined ):void {\n\t\tthis._settings!.paths = DocumentsContext.__mergePaths( this._settings!.paths, paths );\n\t}\n\n\tprotected _extendsSettings( settings:DocumentsContextSettings ):void {\n\t\tthis._extendPaths( settings.paths );\n\n\t\tdelete settings.paths;\n\t\tObjectUtils.extend( this._settings!, settings );\n\t}\n\n}\n\n\n"],"sourceRoot":"../../src"}