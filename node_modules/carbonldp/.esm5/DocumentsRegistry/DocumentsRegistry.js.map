{"version":3,"sources":["DocumentsRegistry/DocumentsRegistry.ts"],"names":[],"mappings":";AAEA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAEhD,OAAO,EAAE,oBAAoB,EAAE,MAAM,gCAAgC,CAAC;AAGtE,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AAErE,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAIzD,OAAO,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAmCjC,MAAM,CAAC,IAAM,iBAAiB,GAA4B;IACzD,SAAS,EAAE;QACV,QAAQ,EAAR,UAAkC,EAAS;YAC1C,OAAO,IAAI,CAAC,UAAU,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;QACpC,CAAC;QAED,WAAW,EAAX,UAAqC,EAAS;YAC7C,IAAI,GAAG,CAAC,WAAW,CAAE,EAAE,CAAE;gBAAG,MAAM,IAAI,oBAAoB,CAAE,OAAI,EAAE,wBAAoB,CAAE,CAAC;YACzF,OAAO,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,EAAE,EAAE,CAAE,CAAC;QAC/D,CAAC;KACD;IAGD,WAAW,EAAX,UAAa,MAAa;QACzB,OAAO,cAAc;aACnB,iBAAiB,CAAE,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IAC5D,CAAC;IAED,QAAQ,EAAR,UAA2C,MAAQ;QAClD,IAAI,iBAAiB,CAAC,WAAW,CAAE,MAAM,CAAE;YAAG,OAAO,MAAM,CAAC;QAE5D,IAAM,IAAI,GAA2B,MAAM,CAAC,MAAM,CAAoD,MAAM,EAAE;YAC7G,gBAAgB,EAAE,QAAQ;SAC1B,CAAE,CAAC;QAEJ,IAAM,MAAM,GAAiC,cAAc;aACzD,gBAAgB,CAAE,IAAI,EAAE,eAAe,CAAE,CAAC;QAE5C,OAAO,cAAc;aACnB,oBAAoB,CAAE,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IAC/D,CAAC;IAGD,MAAM,EAAN,UAA0B,IAA8B;QAEvD,OAAO,iBAAiB,CAAC,UAAU,sBAAO,IAAW,EAAI,CAAC;IAC3D,CAAC;IAED,UAAU,EAAV,UAA8B,MAAgC;QAC7D,IAAM,QAAQ,GAAyB,iBAAiB,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QAC5E,OAAO,eAAe,CAAC,UAAU,CAAE,QAAQ,CAAE,CAAC;IAC/C,CAAC;CACD,CAAC","file":"DocumentsRegistry.js","sourcesContent":["import { DocumentsContext } from \"../Context/DocumentsContext\";\n\nimport { Document } from \"../Document/Document\";\n\nimport { IllegalArgumentError } from \"../Errors/IllegalArgumentError\";\n\nimport { BaseGeneralRegistry } from \"../GeneralRegistry/BaseGeneralRegistry\";\nimport { GeneralRegistry } from \"../GeneralRegistry/GeneralRegistry\";\n\nimport { ModelDecorator } from \"../Model/ModelDecorator\";\nimport { ModelFactory } from \"../Model/ModelFactory\";\nimport { ModelPrototype } from \"../Model/ModelPrototype\";\n\nimport { URI } from \"../RDF/URI\";\n\nimport { BaseDocumentsRegistry } from \"./BaseDocumentsRegistry\";\n\n\n/**\n * Registry that manages {@link Document}'s.\n */\nexport interface DocumentsRegistry extends GeneralRegistry<Document> {\n\t/**\n\t * Context where the registry belongs to.\n\t */\n\treadonly context:DocumentsContext;\n\n\t/**\n\t * Register a document endpoint that already exists in the platform.\n\t * @param id The URI of the document to be registered.\n\t * @returns The shallow document of the endpoint, since this does not makes any request.\n\t */\n\tregister( id:string ):Document;\n}\n\n\n/**\n * Factory, decorator and utils for {@link DocumentsRegistry}.\n */\nexport type DocumentsRegistryFactory =\n\t& ModelPrototype<DocumentsRegistry, GeneralRegistry<Document>, \"_getLocalID\">\n\t& ModelDecorator<DocumentsRegistry, BaseDocumentsRegistry>\n\t& ModelFactory<DocumentsRegistry, BaseDocumentsRegistry>\n\t;\n\n/**\n * Constant that implements {@link DocumentsRegistryFactory}.\n */\nexport const DocumentsRegistry:DocumentsRegistryFactory = {\n\tPROTOTYPE: {\n\t\tregister( this:DocumentsRegistry, id:string ):Document {\n\t\t\treturn this.getPointer( id, true );\n\t\t},\n\n\t\t_getLocalID( this:DocumentsRegistry, id:string ):string {\n\t\t\tif( URI.hasFragment( id ) ) throw new IllegalArgumentError( `\"${id}\" is out of scope.` );\n\t\t\treturn GeneralRegistry.PROTOTYPE._getLocalID.call( this, id );\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is DocumentsRegistry {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( DocumentsRegistry.PROTOTYPE, object );\n\t},\n\n\tdecorate<T extends BaseDocumentsRegistry>( object:T ):T & DocumentsRegistry {\n\t\tif( DocumentsRegistry.isDecorated( object ) ) return object;\n\n\t\tconst base:T & BaseGeneralRegistry = Object.assign<T, Pick<BaseGeneralRegistry, \"__modelDecorator\">>( object, {\n\t\t\t__modelDecorator: Document,\n\t\t} );\n\n\t\tconst target:T & GeneralRegistry<Document> = ModelDecorator\n\t\t\t.decorateMultiple( base, GeneralRegistry );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( DocumentsRegistry.PROTOTYPE, target );\n\t},\n\n\n\tcreate<T extends object>( data:T & BaseDocumentsRegistry ):T & DocumentsRegistry {\n\t\t// FIXME\n\t\treturn DocumentsRegistry.createFrom( { ...data as any } );\n\t},\n\n\tcreateFrom<T extends object>( object:T & BaseDocumentsRegistry ):T & DocumentsRegistry {\n\t\tconst registry:T & DocumentsRegistry = DocumentsRegistry.decorate( object );\n\t\treturn GeneralRegistry.createFrom( registry );\n\t},\n};\n"],"sourceRoot":"../../src"}