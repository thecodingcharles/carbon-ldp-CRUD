{"version":3,"sources":["CarbonLDP.ts"],"names":[],"mappings":"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","file":"CarbonLDP.js","sourcesContent":["import { hasProtocol } from \"sparqler/iri\";\n\nimport { AccessPoint } from \"./AccessPoint/AccessPoint\";\nimport { TransientAccessPoint } from \"./AccessPoint/TransientAccessPoint\";\n\nimport { CarbonLDPSettings } from \"./CarbonLDPSettings\";\n\nimport { AbstractContext } from \"./Context/AbstractContext\";\nimport { DocumentsContext } from \"./Context/DocumentsContext\";\nimport { DocumentsContextSettings } from \"./Context/DocumentsContextSettings\";\nimport { GlobalContext } from \"./Context/GlobalContext\";\n\nimport { Document } from \"./Document/Document\";\n\nimport * as Errors from \"./Errors\";\nimport { IllegalArgumentError } from \"./Errors/IllegalArgumentError\";\n\nimport { Fragment } from \"./Fragment/Fragment\";\nimport { TransientFragment } from \"./Fragment/TransientFragment\";\n\nimport { FreeResources } from \"./FreeResources/FreeResources\";\n\nimport * as HTTP from \"./HTTP\";\nimport * as JSONLD from \"./JSONLD\";\nimport * as LDP from \"./LDP\";\nimport * as LDPatch from \"./LDPatch\";\nimport * as Messaging from \"./Messaging\";\n\nimport { ContainerType } from \"./ObjectSchema/ContainerType\";\nimport { DigestedObjectSchema } from \"./ObjectSchema/DigestedObjectSchema\";\nimport { DigestedObjectSchemaProperty } from \"./ObjectSchema/DigestedObjectSchemaProperty\";\nimport { ObjectSchemaDigester } from \"./ObjectSchema/ObjectSchemaDigester\";\nimport { ObjectSchemaUtils } from \"./ObjectSchema/ObjectSchemaUtils\";\nimport { PointerType } from \"./ObjectSchema/PointerType\";\n\nimport { Pointer } from \"./Pointer/Pointer\";\n\nimport * as RDF from \"./RDF\";\n\nimport { Resource } from \"./Resource/Resource\";\n\nimport * as SHACL from \"./SHACL\";\nimport * as SPARQL from \"./SPARQL\";\nimport * as System from \"./System\";\nimport * as Utils from \"./Utils\";\nimport * as Vocabularies from \"./Vocabularies\";\n\n\n/**\n * The main class of the SDK.\n * Create an instance with the information of the platform to\n * communicate.\n *\n * The class contains, as static members, the references to all the\n * reexported submodules in the SDK.\n */\nexport class CarbonLDP extends DocumentsContext {\n\n\tstatic AbstractContext:typeof AbstractContext = AbstractContext;\n\tstatic AccessPoint:typeof AccessPoint = AccessPoint;\n\tstatic TransientAccessPoint:typeof TransientAccessPoint = TransientAccessPoint;\n\tstatic Errors:typeof Errors = Errors;\n\tstatic FreeResources:typeof FreeResources = FreeResources;\n\tstatic HTTP:typeof HTTP = HTTP;\n\tstatic JSONLD:typeof JSONLD = JSONLD;\n\tstatic LDP:typeof LDP = LDP;\n\tstatic LDPatch:typeof LDPatch = LDPatch;\n\tstatic Messaging:typeof Messaging = Messaging;\n\tstatic Vocabularies:typeof Vocabularies = Vocabularies;\n\tstatic ObjectSchemaUtils:typeof ObjectSchemaUtils = ObjectSchemaUtils;\n\tstatic ObjectSchemaDigester:typeof ObjectSchemaDigester = ObjectSchemaDigester;\n\tstatic DigestedObjectSchemaProperty:typeof DigestedObjectSchemaProperty = DigestedObjectSchemaProperty;\n\tstatic PointerType:typeof PointerType = PointerType;\n\tstatic ContainerType:typeof ContainerType = ContainerType;\n\tstatic DigestedObjectSchema:typeof DigestedObjectSchema = DigestedObjectSchema;\n\tstatic Document:typeof Document = Document;\n\tstatic Fragment:typeof Fragment = Fragment;\n\tstatic TransientFragment:typeof TransientFragment = TransientFragment;\n\tstatic Pointer:typeof Pointer = Pointer;\n\tstatic RDF:typeof RDF = RDF;\n\tstatic Resource:typeof Resource = Resource;\n\tstatic GlobalContext:typeof GlobalContext = GlobalContext;\n\tstatic SHACL:typeof SHACL = SHACL;\n\tstatic SPARQL:typeof SPARQL = SPARQL;\n\tstatic System:typeof System = System;\n\tstatic Utils:typeof Utils = Utils;\n\n\n\t/**\n\t * Version of the SDK.\n\t */\n\tstatic get version():string { return \"{{VERSION}}\"; }\n\n\t/**\n\t * @see {@link CarbonLDP.version}\n\t */\n\tget version():string { return CarbonLDP.version; }\n\n\t/**\n\t * The root document of the platform.\n\t */\n\treadonly documents:Document;\n\n\t/**\n\t * Creates the instance of the SDK with the URL of the platform\n\t * to communicate.\n\t *\n\t * @param url The URL of the of the platform.\n\t */\n\tconstructor( url:string );\n\t/**\n\t * Creates the instance of the SDK with all the configurable\n\t * settings of the SDK.\n\t *\n\t * @param settings Object to fully configure the instance.\n\t */\n\tconstructor( settings:CarbonLDPSettings );\n\tconstructor( urlOrSettings:string | CarbonLDPSettings ) {\n\t\tsuper( __getURLFrom( urlOrSettings ) );\n\n\t\tthis._settings = {\n\t\t\tvocabulary: \"vocabularies/main/#\",\n\t\t\tpaths: {\n\t\t\t\tsystem: {\n\t\t\t\t\tslug: \".system/\",\n\t\t\t\t\tpaths: {\n\t\t\t\t\t\tplatform: \"platform/\",\n\t\t\t\t\t\tcredentials: \"credentials/\",\n\t\t\t\t\t\troles: \"roles/\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tusers: {\n\t\t\t\t\tslug: \"users/\",\n\t\t\t\t\tpaths: {\n\t\t\t\t\t\tme: \"me/\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\tthis._extendsSettings( __getSettingsFrom( urlOrSettings ) );\n\n\t\t// Root document\n\t\tthis.documents = this.registry.getPointer( this._baseURI, true );\n\t}\n\n\t/**\n\t * Retrieves the metadata document of the platform.\n\t */\n\tgetPlatformMetadata():Promise<System.PlatformMetadata> {\n\t\treturn Utils.promiseMethod( () => {\n\t\t\tconst uri:string = this._resolvePath( \"system.platform\" );\n\t\t\treturn this.documents.$get<System.PlatformMetadata>( uri );\n\t\t} );\n\t}\n\n}\n\n\nfunction __getURLFrom( this:void, urlOrSettings:string | CarbonLDPSettings ):string {\n\treturn Utils.isString( urlOrSettings ) ?\n\t\t__getURLFromString( urlOrSettings ) :\n\t\t__getURLFromSettings( urlOrSettings )\n\t\t;\n}\n\nfunction __getURLFromString( this:void, url:string ):string {\n\tif( !RDF.URI.hasProtocol( url ) )\n\t\tthrow new IllegalArgumentError( `The URL must contain a valid protocol: \"http://\", \"https://\".` );\n\n\tif( url.endsWith( \"/\" ) ) return url;\n\treturn url + \"/\";\n}\n\nfunction __getURLFromSettings( this:void, settings:CarbonLDPSettings ):string {\n\tif( !Utils.isString( settings.host ) )\n\t\tthrow new IllegalArgumentError( `The settings object must contains a valid host string.` );\n\n\tif( hasProtocol( settings.host ) )\n\t\tthrow new IllegalArgumentError( `The host must not contain a protocol.` );\n\n\tif( settings.host.includes( \":\" ) )\n\t\tthrow new IllegalArgumentError( `The host must not contain a port.` );\n\n\tconst protocol:string = settings.ssl === false ? \"http://\" : \"https://\";\n\tconst host:string = settings.host.endsWith( \"/\" ) ? settings.host.slice( 0, - 1 ) : settings.host;\n\tconst url:string = `${ protocol }${ host }/`;\n\n\tif( !Utils.isNumber( settings.port ) ) return url;\n\treturn url.slice( 0, - 1 ) + `:${ settings.port }/`;\n}\n\n\nfunction __getSettingsFrom( this:void, urlOrSettings:string | CarbonLDPSettings ):DocumentsContextSettings {\n\tif( Utils.isString( urlOrSettings ) ) return {};\n\treturn Object.assign( {}, urlOrSettings, { ssl: null, host: null, port: null } );\n}\n"],"sourceRoot":"../src"}