{"version":3,"sources":["Fragment/Fragment.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAIzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,oCAAoC,CAAC;AAOtE,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AA4IxD,MAAM,CAAC,IAAM,QAAQ,GAAmB;IACvC,SAAS,EAAE;QACV,IAAI,WAAW;YACd,OAAO,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QACD,IAAI,WAAW,CAAiB,QAAiB;YAChD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC3B,CAAC;QAED,IAAI,UAAU;YACb,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;QAClC,CAAC;QACD,IAAI,UAAU,CAAiB,MAAc,IAAI,CAAC;KAClD;IAGD,WAAW,EAAX,UAAa,MAAa;QACzB,OAAO,cAAc;aACnB,iBAAiB,CAAE,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAE,CAC/C;IACH,CAAC;IAED,QAAQ,EAAR,UAA4C,MAAQ;QACnD,IAAI,QAAQ,CAAC,WAAW,CAAE,MAAM,CAAE;YAAG,OAAO,MAAM,CAAC;QAGnD,IAAM,MAAM,GAAW,MAAM,CAAC,MAAM,CAAE,MAAM,EAAE;YAC7C,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,WAAW,EAAE,MAAM,CAAC,SAAS;SAC7B,CAAE,CAAC;QAEJ,IAAM,MAAM,GAAkD,cAAc;aAC1E,gBAAgB,CAAE,MAAM,EAAE,iBAAiB,EAAE,gBAAgB,CAAE,CAAC;QAElE,OAAO,cAAc;aACnB,oBAAoB,CAAE,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IACtD,CAAC;IAED,MAAM,EAAE,iBAAiB,CAAC,MAAM;IAChC,UAAU,EAAE,iBAAiB,CAAC,UAAU;CACxC,CAAC","file":"Fragment.js","sourcesContent":["import { Document } from \"../Document/Document\";\n\nimport { GETOptions, RequestOptions } from \"../HTTP/Request\";\n\nimport { ModelDecorator } from \"../Model/ModelDecorator\";\nimport { ModelFactory } from \"../Model/ModelFactory\";\nimport { ModelPrototype } from \"../Model/ModelPrototype\";\n\nimport { QueryablePointer } from \"../QueryDocuments/QueryablePointer\";\nimport { QueryDocumentBuilder } from \"../QueryDocuments/QueryDocumentBuilder\";\n\nimport { BaseResolvablePointer } from \"../Repository/BaseResolvablePointer\";\n\nimport { BaseResolvableFragment } from \"./BaseResolvableFragment\";\nimport { BaseTransientFragment } from \"./BaseTransientFragment\";\nimport { TransientFragment } from \"./TransientFragment\";\n\n\n/**\n * Model that represents a fragment of a persisted `c:Document`.\n */\nexport interface Fragment extends TransientFragment, QueryablePointer {\n\t/**\n\t * The document the fragment belongs to.\n\t */\n\t$document:Document;\n\t/**\n\t * Registry where the fragment belongs to.\n\t */\n\t$registry:Document;\n\t/**\n\t * Repository where the fragment can make requests.\n\t */\n\t$repository:Document;\n\n\n\t/**\n\t * Accessor to the {@link Document.$get()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$get()}\n\t */\n\t$get<T extends object>( queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Accessor to the {@link Document.$get()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$get()}\n\t */\n\t$get<T extends object>( requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Accessor to the {@link Document.$get()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$get()}\n\t */\n\t$get<T extends object>( uri:string, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Accessor to the {@link Document.$get()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$get()}\n\t */\n\t$get<T extends object>( uri:string, requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\n\t/**\n\t * Accessor to the {@link Document.$resolve()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$resolve()}\n\t */\n\t$resolve<T extends object>( requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & this & Document>;\n\t/**\n\t * Accessor to the {@link Document.$resolve()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$resolve()}\n\t */\n\t$resolve<T extends object>( queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & this & Document>;\n\t/**\n\t * Accessor to the {@link Document.$resolve()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$resolve()}\n\t */\n\t$resolve<T extends object>( document:Document, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Accessor to the {@link Document.$resolve()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$resolve()}\n\t */\n\t$resolve<T extends object>( document:Document, requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\n\n\t/**\n\t * Accessor to the {@link Document.$exists()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$exists()}\n\t */\n\t$exists( requestOptions?:RequestOptions ):Promise<boolean>;\n\t/**\n\t * Accessor to the {@link Document.$exists()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$exists()}\n\t */\n\t$exists( uri:string, requestOptions?:RequestOptions ):Promise<boolean>;\n\n\n\t/**\n\t * Accessor to the {@link Document.$refresh()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$refresh()}\n\t */\n\t$refresh<T extends object>( requestOptions?:RequestOptions ):Promise<T & this & Document>;\n\t/**\n\t * Accessor to the {@link Document.$refresh()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$refresh()}\n\t */\n\t$refresh<T extends object>( document:Document, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\t/**\n\t * Accessor to the {@link Document.$save()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$save()}\n\t */\n\t$save<T extends object>( requestOptions?:RequestOptions ):Promise<T & this & Document>;\n\t/**\n\t * Accessor to the {@link Document.$save()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$save()}\n\t */\n\t$save<T extends object>( document:Document, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\t/**\n\t * Accessor to the {@link Document.$saveAndRefresh()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$saveAndRefresh()}\n\t */\n\t$saveAndRefresh<T extends object>( requestOptions?:RequestOptions ):Promise<T & this & Document>;\n\t/**\n\t * Accessor to the {@link Document.$saveAndRefresh()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$saveAndRefresh()}\n\t */\n\t$saveAndRefresh<T extends object>( document:Document, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\n\t/**\n\t * Accessor to the {@link Document.$delete()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$delete()}\n\t */\n\t$delete( requestOptions?:RequestOptions ):Promise<void>;\n\t/**\n\t * Accessor to the {@link Document.$delete()} method of the document where the fragment belongs to.\n\t * @see {@link Document.$delete()}\n\t */\n\t$delete( uri:string, requestOptions?:RequestOptions ):Promise<void>;\n}\n\n\nexport type OverriddenMembers =\n\t| \"$repository\"\n\t| \"$_resolved\"\n\t;\n\n/**\n * Factory, decorator and utils for {@link Fragment}.\n */\nexport type FragmentFactory =\n\t& ModelPrototype<Fragment, TransientFragment & QueryablePointer, OverriddenMembers>\n\t& ModelDecorator<Fragment, BaseResolvableFragment>\n\t& ModelFactory<TransientFragment, BaseTransientFragment>\n\t;\n\n/**\n * Constant that implements {@link FragmentFactory}.\n */\nexport const Fragment:FragmentFactory = {\n\tPROTOTYPE: {\n\t\tget $repository( this:Fragment ):Document {\n\t\t\treturn this.$registry;\n\t\t},\n\t\tset $repository( this:Fragment, document:Document ) {\n\t\t\tthis.$registry = document;\n\t\t},\n\n\t\tget $_resolved( this:Fragment ):boolean {\n\t\t\treturn this.$document.$_resolved;\n\t\t},\n\t\tset $_resolved( this:Fragment, _value:boolean ) {},\n\t},\n\n\n\tisDecorated( object:object ):object is Fragment {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( Fragment.PROTOTYPE, object )\n\t\t\t;\n\t},\n\n\tdecorate<T extends BaseResolvableFragment>( object:T ):T & Fragment {\n\t\tif( Fragment.isDecorated( object ) ) return object;\n\n\t\ttype ForcedT = T & { $document:Document } & BaseResolvablePointer;\n\t\tconst forced:ForcedT = Object.assign( object, {\n\t\t\t$document: object.$registry,\n\t\t\t$repository: object.$registry,\n\t\t} );\n\n\t\tconst target:ForcedT & TransientFragment & QueryablePointer = ModelDecorator\n\t\t\t.decorateMultiple( forced, TransientFragment, QueryablePointer );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( Fragment.PROTOTYPE, target );\n\t},\n\n\tcreate: TransientFragment.create,\n\tcreateFrom: TransientFragment.createFrom,\n};\n"],"sourceRoot":"../../src"}