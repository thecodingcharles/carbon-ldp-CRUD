{"version":3,"sources":["LDP/VolatileResource.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAEhD,OAAO,EAAE,CAAC,EAAE,MAAM,mBAAmB,CAAC;AA4BtC,MAAM,CAAC,IAAM,gBAAgB,GAA2B;IACvD,IAAI,EAAE,CAAC,CAAC,gBAAgB;IAExB,EAAE,EAAF,UAAI,KAAS;QACZ,OAAO,QAAQ,CAAC,EAAE,CAAE,KAAK,CAAE;eACvB,KAAK,CAAC,QAAQ,CAAE,gBAAgB,CAAC,IAAI,CAAE,CAAC;IAC7C,CAAC;IAED,MAAM,EAAN,UAA0B,IAAO;QAChC,IAAM,IAAI,GAAK,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAE,CAAC;QACzC,OAAO,gBAAgB,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;IAC5C,CAAC;IAED,UAAU,EAAV,UAA8B,MAAQ;QACrC,IAAM,QAAQ,GAAgB,QAAQ,CAAC,UAAU,CAAE,MAAM,CAAE,CAAC;QAC5D,QAAQ,CAAC,QAAQ,CAAE,gBAAgB,CAAC,IAAI,CAAE,CAAC;QAE3C,OAAO,QAAQ,CAAC;IACjB,CAAC;CACD,CAAC","file":"VolatileResource.js","sourcesContent":["import { ModelFactory } from \"../Model/ModelFactory\";\n\nimport { Resource } from \"../Resource/Resource\";\n\nimport { C } from \"../Vocabularies/C\";\n\n\n/**\n * Model that represents a `c:VolatileResource`.\n * This model represents a free resource that was dynamically generated.\n */\nexport interface VolatileResource extends Resource {\n}\n\n\n// TODO: Change to type-alias\n/**\n * Factory, decorator and utils for {@link VolatileResource}.\n */\nexport interface VolatileResourceFactory extends ModelFactory<VolatileResource> {\n\tTYPE:C[ \"VolatileResource\" ];\n\n\tis( value:any ):value is VolatileResource;\n\n\tcreate<T extends object>( data?:T ):T & VolatileResource;\n\n\tcreateFrom<T extends object>( object:T ):T & VolatileResource;\n}\n\n/**\n * Constant that implements {@link VolatileResourceFactory}.\n */\nexport const VolatileResource:VolatileResourceFactory = {\n\tTYPE: C.VolatileResource,\n\n\tis( value:any ):value is VolatileResource {\n\t\treturn Resource.is( value )\n\t\t\t&& value.$hasType( VolatileResource.TYPE );\n\t},\n\n\tcreate<T extends object>( data?:T ):T & VolatileResource {\n\t\tconst copy:T = Object.assign( {}, data );\n\t\treturn VolatileResource.createFrom( copy );\n\t},\n\n\tcreateFrom<T extends object>( object:T ):T & VolatileResource {\n\t\tconst resource:T & Resource = Resource.createFrom( object );\n\t\tresource.$addType( VolatileResource.TYPE );\n\n\t\treturn resource;\n\t},\n};\n"],"sourceRoot":"../../src"}