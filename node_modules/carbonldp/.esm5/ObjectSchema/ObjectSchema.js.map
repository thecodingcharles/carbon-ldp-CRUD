{"version":3,"sources":["ObjectSchema/ObjectSchema.ts"],"names":[],"mappings":"","file":"ObjectSchema.js","sourcesContent":["import { ObjectSchemaProperty } from \"./ObjectSchemaProperty\";\n\n/**\n * Interface that represents an schema based in the [JSON-LD contexts](https://www.w3.org/TR/json-ld/#the-context).\n *\n * This is used to convert from the JSON-LD stored in the server to the resources used in the SDK and viceversa.\n */\nexport interface ObjectSchema {\n\t/**\n\t * An absolute URI that is used to resolve relative URIs.\n\t * If it's set to `null`, this will invalidate the usage of a previous `@base` value.\n\t */\n\t\"@base\"?:string | null;\n\t/**\n\t * An absolute URI that is used to as the common prefix for all the relative properties.\n\t * If it's set to `null`, this will invalidate the usage of a previous `@vocab` value.\n\t */\n\t\"@vocab\"?:string | null;\n\t/**\n\t * [Not Supported] This element is ignored.\n\t */\n\t\"@index\"?:object;\n\t/**\n\t * The default language of the string properties.\n\t */\n\t\"@language\"?:string | null;\n\t/**\n\t * [Not Supported] This element is ignored.\n\t */\n\t\"@reverse\"?:object;\n\n\t/**\n\t * This index can be interpreted in two forms: prefix or property.\n\t *\n\t * ### Prefix\n\t * - When the value is as string.\n\t * The key is taken the prefix name and the string value must be an absolute URI.\n\t *\n\t * ### Property\n\t * - When the value is of type {@link ObjectSchemaProperty}.\n\t * The key is taken as the property name and the {@link ObjectSchemaProperty} must be a valid definition.\n\t */\n\t[ name:string ]:string | ObjectSchemaProperty | undefined | null;\n}\n"],"sourceRoot":"../../src"}