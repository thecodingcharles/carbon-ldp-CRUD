import { ObjectSchemaUtils } from "../ObjectSchema/ObjectSchemaUtils";
export function _getRootPath(path) {
    var root = path
        .split(".")
        .slice(0, 1)[0];
    return root;
}
export function _getPathProperty(element, path) {
    if (element === void 0 || !path)
        return element;
    var _a = path.split("."), propName = _a[0], restParts = _a.slice(1);
    var property = element[propName];
    var restPath = restParts.join(".");
    return _getPathProperty(property, restPath);
}
export function _areDifferentType(a, b) {
    if (typeof a !== typeof b)
        return true;
    if (typeof a === "object")
        return a instanceof Date !== b instanceof Date;
    return false;
}
export function _getBestType(type1, type2) {
    if (type2 <= type1)
        return type1;
    return type2;
}
export function _getMatchingDefinition(generalSchema, targetSchema, propertyName, propertyURI) {
    if (!targetSchema.properties.has(propertyName))
        return;
    var definition = ObjectSchemaUtils
        ._resolveProperty(generalSchema, targetSchema.properties.get(propertyName));
    if (propertyURI === void 0 || propertyURI === definition.uri)
        return definition;
}

//# sourceMappingURL=Utils.js.map
