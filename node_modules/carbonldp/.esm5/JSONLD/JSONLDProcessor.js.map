{"version":3,"sources":["JSONLD/JSONLDProcessor.ts"],"names":[],"mappings":"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","file":"JSONLDProcessor.js","sourcesContent":["import { InvalidJSONLDSyntaxError } from \"../Errors/InvalidJSONLDSyntaxError\";\nimport { NotImplementedError } from \"../Errors/NotImplementedError\";\n\nimport { Header } from \"../HTTP/Header\";\nimport { JSONParser } from \"../HTTP/JSONParser\";\nimport { RequestOptions, RequestService, RequestUtils } from \"../HTTP/Request\";\nimport { Response } from \"../HTTP/Response\";\n\nimport { ContainerType } from \"../ObjectSchema/ContainerType\";\nimport { DigestedObjectSchema } from \"../ObjectSchema/DigestedObjectSchema\";\nimport { DigestedObjectSchemaProperty } from \"../ObjectSchema/DigestedObjectSchemaProperty\";\nimport { ObjectSchemaDigester } from \"../ObjectSchema/ObjectSchemaDigester\";\nimport { PointerType } from \"../ObjectSchema/PointerType\";\n\nimport { RDFList } from \"../RDF/List\";\nimport { URI } from \"../RDF/URI\";\n\nimport * as Utils from \"./../Utils\";\n\n\nconst MAX_CONTEXT_URLS:number = 10;\nconst LINK_HEADER_REL:string = \"http://www.w3.org/ns/json-ld#context\";\n\n/**\n * Service that has methods to process JSON-LD objects.\n */\nexport class JSONLDProcessor {\n\n\t/**\n\t * Expands a compact JSON-LD object.\n\t * This expansion understands local or remotes `@context` entities.\n\t * @param input The JSON-LD object to expand.\n\t */\n\tstatic expand( input:object ):Promise<object[]> {\n\t\t// Find and resolve context URLs\n\t\treturn JSONLDProcessor.__retrieveContexts( input, <{ [ index:string ]:boolean }>Object.create( null ), \"\" ).then( () => {\n\t\t\t// Expand the document\n\t\t\tlet expanded:any = JSONLDProcessor.__process( new DigestedObjectSchema(), input );\n\n\t\t\t// Optimize @graph\n\t\t\tif( Utils.isObject( expanded ) && \"@graph\" in expanded && Object.keys( expanded ).length === 1 ) {\n\t\t\t\texpanded = expanded[ \"@graph\" ];\n\t\t\t} else if( expanded === null ) {\n\t\t\t\texpanded = [];\n\t\t\t}\n\n\t\t\t// Normalize to an array\n\t\t\tif( ! Utils.isArray( expanded ) ) expanded = [ expanded ];\n\n\t\t\treturn expanded;\n\t\t} );\n\t}\n\n\tprivate static __getTargetFromLinkHeader( header:Header ):string | undefined {\n\t\tlet rLinkHeader:RegExp = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\n\t\tfor( let value of header.values ) {\n\t\t\tlet match:string[] | null = value.toString().match( rLinkHeader );\n\t\t\tif( ! match ) continue;\n\n\t\t\tlet target:string = match[ 1 ];\n\t\t\tlet params:string = match[ 2 ];\n\t\t\tlet rParams:RegExp = /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n\n\t\t\tlet result:{ [ key:string ]:string } = {};\n\t\t\twhile( true ) {\n\t\t\t\tmatch = rParams.exec( params );\n\t\t\t\tif( ! match ) break;\n\n\t\t\t\tresult[ match[ 1 ] ] = (match[ 2 ] === undefined) ? match[ 3 ] : match[ 2 ];\n\t\t\t}\n\t\t\tif( result[ \"rel\" ] === LINK_HEADER_REL ) return target;\n\t\t}\n\t}\n\n\tprivate static __findContextURLs( input:Object, contexts:{ [ index:string ]:any }, base:string, replace:boolean = false ):boolean {\n\t\tlet previousContexts:number = Object.keys( contexts ).length;\n\n\t\tif( Utils.isArray( input ) ) {\n\t\t\tfor( let element of (<Array<Object>>input) ) {\n\t\t\t\tJSONLDProcessor.__findContextURLs( element, contexts, base );\n\t\t\t}\n\t\t} else if( Utils.isPlainObject( input ) ) {\n\t\t\tfor( let key in input ) {\n\t\t\t\tif( \"@context\" !== key ) {\n\t\t\t\t\tJSONLDProcessor.__findContextURLs( input[ key ], contexts, base );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet urlOrArrayOrContext:string | Array<string | object> | object = input[ key ];\n\t\t\t\tif( Utils.isArray( urlOrArrayOrContext ) ) {\n\t\t\t\t\tlet contextArray:Array<string | object> = urlOrArrayOrContext;\n\t\t\t\t\tfor( let index:number = 0, length:number = contextArray.length; index < length; ++ index ) {\n\t\t\t\t\t\tlet urlOrContext:string | object | null = contextArray[ index ];\n\t\t\t\t\t\tif( ! Utils.isString( urlOrContext ) ) continue;\n\n\t\t\t\t\t\tlet url:string = <string>urlOrContext;\n\t\t\t\t\t\turl = URI.resolve( base, url );\n\t\t\t\t\t\tif( replace ) {\n\t\t\t\t\t\t\tif( Utils.isArray( contexts[ url ] ) ) {\n\t\t\t\t\t\t\t\tcontextArray.splice( index, 1, ...[].concat( contexts[ url ] ) );\n\t\t\t\t\t\t\t\tindex += (<Array<any>>contexts[ url ]).length - 1;\n\t\t\t\t\t\t\t\tlength = contextArray.length;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontextArray[ index ] = contexts[ url ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if( ! (url in contexts) ) {\n\t\t\t\t\t\t\tcontexts[ url ] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if( Utils.isString( urlOrArrayOrContext ) ) {\n\t\t\t\t\tlet url:string = <string>urlOrArrayOrContext;\n\t\t\t\t\turl = URI.resolve( base, url );\n\t\t\t\t\tif( replace ) {\n\t\t\t\t\t\tinput[ key ] = contexts[ url ];\n\t\t\t\t\t} else if( ! (url in contexts) ) {\n\t\t\t\t\t\tcontexts[ url ] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn previousContexts < Object.keys( contexts ).length;\n\t}\n\n\tprivate static __retrieveContexts( input:Object, contextsRequested:{ [ index:string ]:boolean }, base:string ):Promise<void> {\n\t\tif( Object.keys( contextsRequested ).length > MAX_CONTEXT_URLS ) return Promise.reject<void>( new InvalidJSONLDSyntaxError( \"Maximum number of @context URLs exceeded.\" ) );\n\n\t\tlet contextToResolved:{ [ index:string ]:Object } = Object.create( null );\n\t\tif( ! JSONLDProcessor.__findContextURLs( input, contextToResolved, base ) ) return Promise.resolve();\n\n\t\tfunction resolved( url:string, promise:Promise<[ any, Response ]> ):Promise<void> {\n\t\t\treturn promise.then( ( [ object, response ]:[ any, Response ] ) => {\n\t\t\t\tlet _contextsRequested:{ [ index:string ]:boolean } = Utils.ObjectUtils.clone<{ [ index:string ]:boolean }>( contextsRequested )!;\n\t\t\t\t_contextsRequested[ url ] = true;\n\n\t\t\t\tlet contextWrapper:Object = { \"@context\": {} };\n\n\t\t\t\tlet header:Header | null = response.getHeader( \"Content-Type\" );\n\t\t\t\tif( ! header || ! header.toString().includes( \"application/ld+json\" ) ) {\n\t\t\t\t\tlet link:string | undefined;\n\n\t\t\t\t\theader = response.getHeader( \"Link\" );\n\t\t\t\t\tif( header ) link = JSONLDProcessor.__getTargetFromLinkHeader( header );\n\n\t\t\t\t\tif( link ) contextWrapper[ \"@context\" ] = link;\n\t\t\t\t} else {\n\t\t\t\t\tcontextWrapper[ \"@context\" ] = \"@context\" in object ? object[ \"@context\" ] : {};\n\t\t\t\t}\n\n\t\t\t\tcontextToResolved[ url ] = contextWrapper[ \"@context\" ];\n\n\t\t\t\treturn JSONLDProcessor.__retrieveContexts( contextWrapper, _contextsRequested, url );\n\t\t\t} );\n\t\t}\n\n\t\tlet promises:Promise<void>[] = [];\n\t\tfor( let url in contextToResolved ) {\n\t\t\tif( url in contextsRequested ) return Promise.reject<void>( new InvalidJSONLDSyntaxError( \"Cyclical @context URLs detected.\" ) );\n\n\t\t\tlet requestOptions:RequestOptions = { sendCredentialsOnCORS: false };\n\t\t\tRequestUtils.setAcceptHeader( \"application/ld+json, application/json\", requestOptions );\n\n\t\t\tlet promise:Promise<[ any, Response ]> = RequestService\n\t\t\t\t.get( url, requestOptions, new JSONParser() )\n\t\t\t\t.catch( ( response:Response ) =>\n\t\t\t\t\tPromise.reject( new InvalidJSONLDSyntaxError( `Unable to resolve context from \"${ url }\". Status code: ${ response.status }` ) )\n\t\t\t\t);\n\t\t\tpromises.push( resolved( url, promise ) );\n\t\t}\n\n\t\treturn Promise.all<void>( promises ).then( () => {\n\t\t\tJSONLDProcessor.__findContextURLs( input, contextToResolved, base, true );\n\t\t} );\n\t}\n\n\tprivate static __isKeyword( value?:string | null ):boolean {\n\t\tif( ! Utils.isString( value ) ) return false;\n\n\t\tswitch( value ) {\n\t\t\tcase \"@base\":\n\t\t\tcase \"@context\":\n\t\t\tcase \"@container\":\n\t\t\tcase \"@default\":\n\t\t\tcase \"@embed\":\n\t\t\tcase \"@explicit\":\n\t\t\tcase \"@graph\":\n\t\t\tcase \"@id\":\n\t\t\tcase \"@index\":\n\t\t\tcase \"@language\":\n\t\t\tcase \"@list\":\n\t\t\tcase \"@omitDefault\":\n\t\t\tcase \"@preserve\":\n\t\t\tcase \"@requireAll\":\n\t\t\tcase \"@reverse\":\n\t\t\tcase \"@set\":\n\t\t\tcase \"@type\":\n\t\t\tcase \"@value\":\n\t\t\tcase \"@vocab\":\n\t\t\t\treturn true;\n\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate static __isValidType( value:any ):boolean {\n\t\tif( Utils.isString( value ) ) return true;\n\n\t\tif( ! Utils.isArray( value ) ) return false;\n\n\t\tfor( let element of (<Array<any>>value) ) {\n\t\t\tif( ! Utils.isString( element ) ) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate static __expandURI( schema:DigestedObjectSchema, uri:string, relativeTo?:{ vocab?:boolean, base?:boolean } ):string {\n\t\tif( JSONLDProcessor.__isKeyword( uri ) ) return uri;\n\t\treturn schema.resolveURI( uri, relativeTo );\n\t}\n\n\tprivate static __expandLanguageMap( languageMap:any ):any {\n\t\tlet expandedLanguage:Array<Object> = [];\n\n\t\tlet keys:string[] = Object.keys( languageMap ).sort();\n\t\tfor( let key of keys ) {\n\t\t\tlet values:Array<any> = languageMap[ key ];\n\t\t\tif( ! Utils.isArray( values ) ) values = [ values ];\n\n\t\t\tfor( let item of values ) {\n\t\t\t\tif( item === null ) continue;\n\t\t\t\tif( ! Utils.isString( item ) ) throw new InvalidJSONLDSyntaxError( \"Language map values must be strings.\" );\n\n\t\t\t\texpandedLanguage.push( {\n\t\t\t\t\t\"@value\": item,\n\t\t\t\t\t\"@language\": key.toLowerCase(),\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\treturn expandedLanguage;\n\t}\n\n\tprivate static __getContainer( context:DigestedObjectSchema, property?:string | null ):ContainerType | null {\n\t\tif( ! property || ! context.properties.has( property ) )\n\t\t\treturn null;\n\n\t\treturn context.properties.get( property )!.containerType;\n\t}\n\n\tprivate static __expandValue( context:DigestedObjectSchema, value:any | null, propertyName?:string | null ):any {\n\t\tif( value === null || ! Utils.isDefined( value ) ) return null;\n\n\t\tif( propertyName === \"@id\" ) {\n\t\t\treturn JSONLDProcessor.__expandURI( context, value, { base: true } );\n\t\t} else if( propertyName === \"@type\" ) {\n\t\t\treturn JSONLDProcessor.__expandURI( context, value, { vocab: true, base: true } );\n\t\t}\n\n\t\tconst definition:DigestedObjectSchemaProperty = propertyName && context.properties.has( propertyName )\n\t\t\t? context.properties.get( propertyName )!\n\t\t\t: new DigestedObjectSchemaProperty();\n\n\t\tif( definition.literal === false || (propertyName === \"@graph\" && Utils.isString( value )) ) {\n\t\t\tlet options:{ base:boolean, vocab?:boolean } = { base: true };\n\t\t\tif( definition.pointerType === PointerType.VOCAB ) options.vocab = true;\n\n\t\t\treturn { \"@id\": JSONLDProcessor.__expandURI( context, value, options ) };\n\t\t}\n\n\t\tif( JSONLDProcessor.__isKeyword( propertyName ) ) return value;\n\n\t\tlet expandedValue:Object = {};\n\t\tif( definition.literalType ) {\n\t\t\texpandedValue[ \"@type\" ] = context.resolveURI( definition.literalType, { vocab: true, base: true } );\n\t\t} else if( Utils.isString( value ) ) {\n\t\t\tlet language:string | null | undefined = Utils.isDefined( definition.language ) ? definition.language : context.language;\n\t\t\tif( language ) expandedValue[ \"@language\" ] = language;\n\t\t}\n\n\t\t// Normalize to string unknowns types\n\t\tif( [ \"boolean\", \"number\", \"string\" ].indexOf( typeof value ) === - 1 ) value = value.toString();\n\t\texpandedValue[ \"@value\" ] = value;\n\n\t\treturn expandedValue;\n\t}\n\n\tprivate static __process( context:DigestedObjectSchema, element:object | null, activeProperty?:string | null, insideList?:boolean ):object | null {\n\t\tif( element === null || ! Utils.isDefined( element ) ) return null;\n\n\t\t// Expand an element according to the context\n\t\tif( ! Utils.isArray( element ) && ! Utils.isObject( element ) ) {\n\t\t\tif( ! insideList && (activeProperty === null || activeProperty === \"@graph\") ) return null;\n\t\t\treturn JSONLDProcessor.__expandValue( context, element, activeProperty );\n\t\t}\n\n\t\t// Recursively expand the array\n\t\tif( Utils.isArray( element ) ) {\n\t\t\tlet container:ContainerType | null = JSONLDProcessor.__getContainer( context, activeProperty );\n\t\t\tinsideList = insideList || container === ContainerType.LIST;\n\n\t\t\tconst expanded:object[] = [];\n\t\t\tfor( let item of element as any[] ) {\n\t\t\t\tlet expandedItem:any = JSONLDProcessor.__process( context, item, activeProperty );\n\t\t\t\tif( expandedItem === null ) continue;\n\n\t\t\t\tif( insideList && (Utils.isArray( expandedItem ) || RDFList.is( expandedItem )) ) throw new InvalidJSONLDSyntaxError( \"Lists of lists are not permitted.\" );\n\n\t\t\t\tif( ! Utils.isArray( expandedItem ) ) expandedItem = [ expandedItem ];\n\t\t\t\texpanded.push( ...expandedItem );\n\t\t\t}\n\t\t\treturn expanded;\n\t\t}\n\n\t\t// Expand current context\n\t\tif( \"@context\" in element ) {\n\t\t\tcontext = ObjectSchemaDigester\n\t\t\t\t.combineDigestedObjectSchemas( [\n\t\t\t\t\tcontext,\n\t\t\t\t\tObjectSchemaDigester.digestSchema( element[ \"@context\" ] ),\n\t\t\t\t] );\n\t\t}\n\n\t\t// Recursively expand the object\n\t\tlet expandedElement:object | null = {};\n\t\tlet keys:string[] = Object.keys( element );\n\t\tfor( let key of keys ) {\n\t\t\tif( key === \"@context\" ) continue;\n\n\t\t\tlet uri:string = JSONLDProcessor.__expandURI( context, key, { vocab: true } );\n\t\t\tif( ! uri || ! (URI.isAbsolute( uri ) || URI.isBNodeID( uri ) || JSONLDProcessor.__isKeyword( uri )) ) continue;\n\n\t\t\tlet value:any = element[ key ];\n\n\t\t\t// Validate value\n\t\t\tif( JSONLDProcessor.__isKeyword( uri ) ) {\n\t\t\t\tif( uri === \"@id\" && ! Utils.isString( value ) ) throw new InvalidJSONLDSyntaxError( `\"@id\" value must a string.` );\n\t\t\t\tif( uri === \"@type\" && ! JSONLDProcessor.__isValidType( value ) ) throw new InvalidJSONLDSyntaxError( `\"@type\" value must a string, an array of strings.` );\n\t\t\t\tif( uri === \"@graph\" && ! (Utils.isObject( value ) || Utils.isArray( value )) ) throw new InvalidJSONLDSyntaxError( `\"@graph\" value must not be an object or an array.` );\n\t\t\t\tif( uri === \"@value\" && (Utils.isObject( value ) || Utils.isArray( value )) ) throw new InvalidJSONLDSyntaxError( `\"@value\" value must not be an object or an array.` );\n\t\t\t\tif( uri === \"@language\" ) {\n\t\t\t\t\tif( value === null ) continue;\n\t\t\t\t\tif( ! Utils.isString( value ) ) throw new InvalidJSONLDSyntaxError( `\"@language\" value must be a string.` );\n\t\t\t\t\tvalue = (<string>value).toLowerCase();\n\t\t\t\t}\n\n\t\t\t\tif( uri === \"@index\" && ! Utils.isString( value ) ) throw new InvalidJSONLDSyntaxError( `\"@index\" value must be a string.` );\n\t\t\t\tif( uri === \"@reverse\" && ! Utils.isObject( value ) ) throw new InvalidJSONLDSyntaxError( `\"@reverse\" value must be an object.` );\n\t\t\t\t// TODO: Not supported\n\t\t\t\tif( uri === \"@index\" || uri === \"@reverse\" ) throw new NotImplementedError( `The SDK does not support \"@index\" and \"@reverse\" tags.` );\n\t\t\t}\n\n\t\t\tlet expandedValue:any;\n\t\t\tlet container:ContainerType | null = JSONLDProcessor.__getContainer( context, key );\n\t\t\tif( container === ContainerType.LANGUAGE && Utils.isObject( value ) ) {\n\t\t\t\texpandedValue = JSONLDProcessor.__expandLanguageMap( value );\n\t\t\t} else {\n\t\t\t\tlet nextActiveProperty:string | null | undefined = key;\n\n\t\t\t\tlet isList:boolean = uri === \"@list\";\n\t\t\t\tif( isList || uri === \"@set\" ) {\n\t\t\t\t\tnextActiveProperty = activeProperty;\n\t\t\t\t\tif( isList && activeProperty === \"@graph\" ) nextActiveProperty = null;\n\t\t\t\t}\n\n\t\t\t\texpandedValue = JSONLDProcessor.__process( context, value, nextActiveProperty, isList );\n\t\t\t}\n\n\t\t\t// Drop null values if is not a \"@value\" property\n\t\t\tif( expandedValue === null && uri !== \"@value\" ) continue;\n\n\t\t\tif( uri !== \"@list\" && ! RDFList.is( expandedValue ) && container === ContainerType.LIST ) {\n\t\t\t\tif( ! Utils.isArray( expandedValue ) ) expandedValue = [ expandedValue ];\n\t\t\t\texpandedValue = { \"@list\": expandedValue };\n\t\t\t}\n\n\t\t\tlet useArray:boolean = [ \"@type\", \"@id\", \"@value\", \"@language\" ].indexOf( uri ) === - 1;\n\t\t\tJSONLDProcessor.__addValue( expandedElement, uri, expandedValue, { propertyIsArray: useArray } );\n\t\t}\n\n\t\tif( \"@value\" in expandedElement ) {\n\t\t\tif( expandedElement[ \"@value\" ] === null ) expandedElement = null;\n\t\t} else if( \"@type\" in expandedElement ) {\n\t\t\tif( ! Utils.isArray( expandedElement[ \"@type\" ] ) ) expandedElement[ \"@type\" ] = [ expandedElement[ \"@type\" ] ];\n\t\t} else if( \"@set\" in expandedElement ) {\n\t\t\texpandedElement = expandedElement[ \"@set\" ];\n\t\t}\n\n\t\treturn expandedElement;\n\t}\n\n\tprivate static __addValue( element:Object, propertyName:string, value:any, options:{ propertyIsArray:boolean } ):void {\n\t\tif( Utils.isArray( value ) ) {\n\t\t\tlet values:Array<any> = value;\n\t\t\tif( values.length === 0 && options.propertyIsArray && ! Utils.hasProperty( element, propertyName ) ) element[ propertyName ] = [];\n\t\t\tfor( let item of values ) {\n\t\t\t\tJSONLDProcessor.__addValue( element, propertyName, item, options );\n\t\t\t}\n\n\t\t} else if( propertyName in element ) {\n\t\t\tif( ! JSONLDProcessor.__hasValue( element, propertyName, value ) ) {\n\t\t\t\tlet items:Array<any> = element[ propertyName ];\n\t\t\t\tif( ! Utils.isArray( items ) ) items = element[ propertyName ] = [ items ];\n\t\t\t\titems.push( value );\n\t\t\t}\n\t\t} else {\n\t\t\telement[ propertyName ] = options.propertyIsArray ? [ value ] : value;\n\t\t}\n\t}\n\n\tprivate static __hasProperty( element:Object, propertyName:string ):boolean {\n\t\tif( propertyName in element ) {\n\t\t\tlet item:any = element[ propertyName ];\n\t\t\treturn ! Utils.isArray( item ) || (<Array<any>>item).length > 0;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static __compareValues( value1:any, value2:any ):boolean {\n\t\tif( value1 === value2 ) return true;\n\n\t\tif( Utils.isObject( value1 ) && Utils.isObject( value2 ) ) {\n\n\t\t\tif( \"@value\" in value1\n\t\t\t\t&& value1[ \"@value\" ] === value2[ \"@value\" ]\n\t\t\t\t&& value1[ \"@type\" ] === value2[ \"@type\" ]\n\t\t\t\t&& value1[ \"@language\" ] === value2[ \"@language\" ]\n\t\t\t\t&& value1[ \"@index\" ] === value2[ \"@index\" ] )\n\t\t\t\treturn true;\n\n\t\t\tif( \"@id\" in value1 )\n\t\t\t\treturn value1[ \"@id\" ] === value2[ \"@id\" ];\n\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate static __hasValue( element:Object, propertyName:string, value:any ):boolean {\n\t\tif( JSONLDProcessor.__hasProperty( element, propertyName ) ) {\n\t\t\tlet item:any = element[ propertyName ];\n\t\t\tlet isList:boolean = RDFList.is( item );\n\n\t\t\tif( isList || Utils.isArray( item ) ) {\n\t\t\t\tlet items:any[] = isList ? item[ \"@list\" ] : item;\n\n\t\t\t\tfor( let entry of items ) {\n\t\t\t\t\tif( JSONLDProcessor.__compareValues( entry, value ) ) return true;\n\t\t\t\t}\n\t\t\t} else if( ! Utils.isArray( value ) ) {\n\t\t\t\treturn JSONLDProcessor.__compareValues( item, value );\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n}\n"],"sourceRoot":"../../src"}