import * as tslib_1 from "tslib";
import { IllegalArgumentError } from "../Errors/IllegalArgumentError";
import { ModelDecorator } from "../Model/ModelDecorator";
import { Repository } from "../Repository/Repository";
export var GeneralRepository = {
    PROTOTYPE: {
        get context() {
            throw new IllegalArgumentError("Property \"context\" is required.");
        },
    },
    isDecorated: function (object) {
        return ModelDecorator
            .hasPropertiesFrom(GeneralRepository.PROTOTYPE, object);
    },
    decorate: function (object) {
        if (GeneralRepository.isDecorated(object))
            return object;
        var target = ModelDecorator
            .decorateMultiple(object, Repository);
        return ModelDecorator
            .definePropertiesFrom(GeneralRepository.PROTOTYPE, target);
    },
    create: function (data) {
        return GeneralRepository.createFrom(tslib_1.__assign({}, data));
    },
    createFrom: function (object) {
        return GeneralRepository.decorate(object);
    },
};

//# sourceMappingURL=GeneralRepository.js.map
