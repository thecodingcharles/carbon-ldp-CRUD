{"version":3,"sources":["SHACL/ValidationReport.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAE,GAAG,EAAE,MAAM,qBAAqB,CAAC;AAmC1C,IAAM,MAAM,GAAgB;IAC3B,UAAU,EAAE;QACX,KAAK,EAAE,KAAK,CAAC,QAAQ;QACrB,OAAO,EAAE,GAAG,CAAC,OAAO;KACpB;IACD,SAAS,EAAE;QACV,KAAK,EAAE,KAAK,CAAC,MAAM;QACnB,OAAO,EAAE,KAAK;QACd,YAAY,EAAE,MAAM;KACpB;IACD,uBAAuB,EAAE;QACxB,KAAK,EAAE,KAAK,CAAC,qBAAqB;QAClC,OAAO,EAAE,GAAG,CAAC,OAAO;KACpB;CACD,CAAC;AAKF,MAAM,CAAC,IAAM,gBAAgB,GAA2B;IACvD,IAAI,EAAE,KAAK,CAAC,gBAAgB;IAC5B,MAAM,QAAA;CACN,CAAC","file":"ValidationReport.js","sourcesContent":["import { ObjectSchema } from \"../ObjectSchema/ObjectSchema\";\n\nimport { SHACL } from \"../Vocabularies/SHACL\";\nimport { XSD } from \"../Vocabularies/XSD\";\n\nimport { ValidationResult } from \"./ValidationResult\";\n\n\n/**\n * Model that represents a `shacl:ValidationReport`.\n * This model contains the results of a validation process.\n */\nexport interface ValidationReport {\n\t/**\n\t * Indicates if the validation conforms the given shape.\n\t * If that's the case, no results data will be returned.\n\t */\n\tconforms:boolean;\n\t/**\n\t * The results of a failure validation process.\n\t */\n\tresults?:ValidationResult[];\n\t/**\n\t * The `shapesGraphWellFormed` of a failure validation process.\n\t */\n\tshapesGraphWellFormed?:boolean;\n}\n\n\n// TODO: Change to type-alias\n/**\n * Factory and utils for {@link ValidationReport}.\n */\nexport interface ValidationReportFactory {\n\tTYPE:string;\n\tSCHEMA:ObjectSchema;\n}\n\nconst SCHEMA:ObjectSchema = {\n\t\"conforms\": {\n\t\t\"@id\": SHACL.conforms,\n\t\t\"@type\": XSD.boolean,\n\t},\n\t\"results\": {\n\t\t\"@id\": SHACL.result,\n\t\t\"@type\": \"@id\",\n\t\t\"@container\": \"@set\",\n\t},\n\t\"shapesGraphWellFormed\": {\n\t\t\"@id\": SHACL.shapesGraphWellFormed,\n\t\t\"@type\": XSD.boolean,\n\t},\n};\n\n/**\n * Constant that implements {@link ValidationReport}.\n */\nexport const ValidationReport:ValidationReportFactory = {\n\tTYPE: SHACL.ValidationReport,\n\tSCHEMA,\n};\n"],"sourceRoot":"../../src"}