{"version":3,"sources":["DocumentsRepository/Traits/QueryableDocumentsRepositoryTrait.ts"],"names":[],"mappings":"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","file":"QueryableDocumentsRepositoryTrait.js","sourcesContent":["import { ConstructToken, IRIRefToken, PropertyToken, QueryToken, SubjectToken } from \"sparqler/tokens\";\n\nimport { Document } from \"../../Document/Document\";\n\nimport { IllegalArgumentError } from \"../../Errors/IllegalArgumentError\";\nimport { IllegalStateError } from \"../../Errors/IllegalStateError\";\n\nimport { FreeResources } from \"../../FreeResources/FreeResources\";\n\nimport { GETOptions, RequestOptions, RequestUtils } from \"../../HTTP/Request\";\n\nimport { JSONLDParser } from \"../../JSONLD/JSONLDParser\";\n\nimport { ModelDecorator } from \"../../Model/ModelDecorator\";\nimport { ModelPrototype } from \"../../Model/ModelPrototype\";\n\nimport { Pointer } from \"../../Pointer/Pointer\";\nimport { QueryablePointer } from \"../../QueryDocuments/QueryablePointer\";\n\nimport { QueryableProperty } from \"../../QueryDocuments/QueryableProperty\";\nimport { QueryContainer } from \"../../QueryDocuments/QueryContainer\";\nimport { QueryContainerPropertyType } from \"../../QueryDocuments/QueryContainerPropertyType\";\nimport { QueryDocumentBuilder } from \"../../QueryDocuments/QueryDocumentBuilder\";\nimport { QueryDocumentsBuilder } from \"../../QueryDocuments/QueryDocumentsBuilder\";\nimport { QueryMetadata } from \"../../QueryDocuments/QueryMetadata\";\nimport { QueryProperty } from \"../../QueryDocuments/QueryProperty\";\nimport { QueryPropertyType } from \"../../QueryDocuments/QueryPropertyType\";\nimport { QueryResultCompacter } from \"../../QueryDocuments/QueryResultCompacter\";\nimport { _areDifferentType, _getPathProperty } from \"../../QueryDocuments/Utils\";\n\nimport { RDFDocument } from \"../../RDF/Document\";\nimport { RDFNode } from \"../../RDF/Node\";\nimport { URI } from \"../../RDF/URI\";\n\nimport { SPARQLService } from \"../../SPARQL/SPARQLService\";\n\nimport { isBoolean, isDate, isFunction, isNumber, isString, UUIDUtils } from \"../../Utils\";\n\nimport { C } from \"../../Vocabularies/C\";\n\nimport { BaseDocumentsRepository } from \"../BaseDocumentsRepository\";\nimport { _getErrorResponseParserFn } from \"../Utils\";\n\nimport { LDPDocumentsRepositoryTrait } from \"./LDPDocumentsRepositoryTrait\";\n\n\n/**\n * Trait of a {@link DocumentsRepository} with methods for advanced reading requests.\n */\nexport interface QueryableDocumentsRepositoryTrait extends LDPDocumentsRepositoryTrait {\n\t/**\n\t * Retrieves the properties of the document of the URI specified set by the query function.\n\t * @param uri URI of the document to be retrieved.\n\t * @param queryBuilderFn Function that specify the structure of the document to be retrieved.\n\t */\n\tget<T extends object>( uri:string, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Retrieves the entire document of the URI specified or only the properties set by the query function when provided.\n\t * @param uri URI of the document to be retrieved.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the document to be retrieved.\n\t */\n\tget<T extends object>( uri:string, requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Retrieves the properties set by the query function, of the documents specified.\n\t * @param uris URIs of the documents to be retrieved.\n\t * @param queryBuilderFn Function that specify the structure of the documents to be retrieved.\n\t */\n\tget<T extends object>( uris:string[], queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieves the entire documents of the URIs specified or only the properties set by the query function when provided.\n\t * @param uris URIs of the documents to be retrieved.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the documents to be retrieved.\n\t */\n\tget<T extends object>( uris:string[], requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<(T & Document)[]>;\n\n\t/**\n\t * Resolves the properties of the document of the URI specified set by the query function.\n\t * @param document Document to be resolved.\n\t * @param queryBuilderFn Function that specify the structure of the document to be resolved.\n\t */\n\tresolve<T extends object>( document:Document, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Resolves the entire document of the URI specified or only the properties set by the query function when provided.\n\t * @param document Document to be resolved.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the document to be resolved.\n\t */\n\tresolve<T extends object>( document:Document, requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\n\n\t/**\n\t * Refreshes with the latest data of the specified document.\n\t * If the document was retrieved partially, only the partial properties will be refreshed.\n\t * @param document The document to be refreshed.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\trefresh<T extends object>( document:Document, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\t/**\n\t * Saves the changes of the specified document and retrieves its latest changes.\n\t * If the document was retrieved partially, only the partial properties will be refreshed.\n\t * @param document The resource to saved and refreshed.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tsaveAndRefresh<T extends object>( document:Document, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\n\t/**\n\t * Retrieves the entire children of the document of the specified URI or only the properties set by the query function.\n\t * @param uri URI of the document to retrieve its children.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the children to be retrieved.\n\t */\n\tgetChildren<T extends object>( uri:string, requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieved the entire children of the document of the specified URI or only the properties set by the query function.\n\t * @param uri URI of the document to retrieve its children.\n\t * @param queryBuilderFn Function that specify the structure of the children to be retrieved.\n\t */\n\tgetChildren<T extends object>( uri:string, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\n\t/**\n\t * Retrieves the entire members of the document of the specified URI or only the properties set by the query function.\n\t * @param uri URI of the document to retrieve its members.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the members to be retrieved.\n\t */\n\tgetMembers<T extends object>( uri:string, requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieved the entire members of the document of the specified URI or only the properties set by the query function.\n\t * @param uri URI of the document to retrieve its members.\n\t * @param queryBuilderFn Function that specify the structure of the members to be retrieved.\n\t */\n\tgetMembers<T extends object>( uri:string, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\n\t/**\n\t * Retrieves the shallow children of the document of the specified URI.\n\t * @param uri URI of the document to retrieve its shallow children.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tlistChildren<T extends object>( uri:string, requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\n\t/**\n\t * Retrieves the shallow members of the document of the specified URI\n\t * @param uri URI of the document to retrieve its shallow members.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tlistMembers<T extends object>( uri:string, requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n}\n\n\ntype QueryBuilderFn = Function & (( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder);\ntype QueryDocsBuilderFn = Function & (( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder);\n\ntype QueryData = { queryBuilderFn?:QueryBuilderFn | QueryDocsBuilderFn, rootType?:QueryPropertyType };\ntype QueryContainerData = QueryData & { containerPropertyType:QueryContainerPropertyType };\n\n\nfunction __executeQueryBuilder( queryContainer:QueryContainer, queryData:QueryData ):void {\n\tconst queryBuilder:QueryDocumentBuilder | QueryDocumentsBuilder = \"containerPropertyType\" in queryContainer._queryProperty\n\t\t? new QueryDocumentsBuilder( queryContainer, queryContainer._queryProperty )\n\t\t: new QueryDocumentBuilder( queryContainer, queryContainer._queryProperty );\n\n\tif( queryData.rootType !== void 0 ) queryContainer._queryProperty\n\t\t.setType( queryData.rootType );\n\n\tif( queryData.queryBuilderFn && queryData.queryBuilderFn.call( void 0, queryBuilder ) !== queryBuilder )\n\t\tthrow new IllegalArgumentError( \"The provided query builder was not returned\" );\n}\n\nfunction __sortQueryDocuments<T extends Document>( queryContainer:QueryContainer, documents:T[] ):T[] {\n\tif( ! (\"order\" in queryContainer._queryProperty) || ! queryContainer._queryProperty.order ) return documents;\n\n\tconst { path, flow } = queryContainer._queryProperty.order;\n\tconst inverter:number = flow === \"DESC\" ? - 1 : 1;\n\n\treturn documents.sort( ( a:any, b:any ) => {\n\t\ta = _getPathProperty( a, path );\n\t\tb = _getPathProperty( b, path );\n\n\t\tconst aValue:any = Pointer.is( a ) ? a.$id : a;\n\t\tconst bValue:any = Pointer.is( b ) ? b.$id : b;\n\n\t\tif( aValue === bValue ) return 0;\n\n\t\tif( aValue === void 0 ) return - 1 * inverter;\n\t\tif( bValue === void 0 ) return inverter;\n\n\t\tif( ! _areDifferentType( a, b ) ) {\n\t\t\tif( Pointer.is( a ) ) {\n\t\t\t\tconst aIsBNode:boolean = URI.isBNodeID( aValue );\n\t\t\t\tconst bIsBNode:boolean = URI.isBNodeID( bValue );\n\n\t\t\t\tif( aIsBNode && ! bIsBNode ) return - 1 * inverter;\n\t\t\t\tif( bIsBNode && ! aIsBNode ) return inverter;\n\t\t\t}\n\t\t} else {\n\t\t\tif( Pointer.is( a ) ) return - 1 * inverter;\n\t\t\tif( Pointer.is( b ) ) return inverter;\n\n\t\t\tif( isNumber( a ) ) return - 1 * inverter;\n\t\t\tif( isNumber( b ) ) return inverter;\n\n\t\t\tif( isDate( a ) ) return - 1 * inverter;\n\t\t\tif( isDate( b ) ) return inverter;\n\n\t\t\tif( isBoolean( a ) ) return - 1 * inverter;\n\t\t\tif( isBoolean( b ) ) return inverter;\n\n\t\t\tif( isString( a ) ) return - 1 * inverter;\n\t\t\tif( isString( b ) ) return inverter;\n\t\t}\n\n\t\tif( aValue < bValue ) return - 1 * inverter;\n\t\tif( aValue > bValue ) return inverter;\n\n\t\treturn 0;\n\t} );\n}\n\n\nfunction __requestQueryDocuments<T extends object>( this:void, repository:QueryableDocumentsRepositoryTrait, url:string, requestOptions:RequestOptions, queryContainer:QueryContainer ):Promise<(T & Document)[]> {\n\tconst construct:ConstructToken = new ConstructToken()\n\t\t.addTriple(\n\t\t\t// Add QueryMetadata of the target elements\n\t\t\tnew SubjectToken( new IRIRefToken( `cldp-sdk://metadata-${ UUIDUtils.generate() }` ) )\n\t\t\t\t.addProperty( new PropertyToken( \"a\" )\n\t\t\t\t\t.addObject( queryContainer.compactIRI( C.VolatileResource ) )\n\t\t\t\t\t.addObject( queryContainer.compactIRI( C.QueryMetadata ) )\n\t\t\t\t)\n\t\t\t\t.addProperty( new PropertyToken( queryContainer.compactIRI( C.target ) )\n\t\t\t\t\t.addObject( queryContainer._queryProperty.identifier )\n\t\t\t\t)\n\t\t)\n\t\t// Add construct and search patterns\n\t\t.addTriple( ...queryContainer._queryProperty.getConstructPatterns() )\n\t\t.addPattern( ...queryContainer._queryProperty.getSearchPatterns() )\n\t;\n\n\t// Add the used prefixes\n\tconst query:QueryToken = new QueryToken( construct )\n\t\t.addPrologues( ...queryContainer.getPrologues() );\n\n\t// Header to convert the triples into quads\n\tRequestUtils.setRetrievalPreferences( { include: [ C.PreferResultsContexts ] }, requestOptions );\n\n\treturn SPARQLService\n\t\t.executeRawCONSTRUCTQuery( url, query.toString(), requestOptions )\n\t\t.then( ( [ strConstruct ] ) => strConstruct )\n\t\t.then( ( jsonldString ) => {\n\t\t\treturn new JSONLDParser().parse( jsonldString );\n\t\t} )\n\t\t.then<(T & Document)[]>( ( rdfNodes:object[] ) => {\n\t\t\tconst freeNodes:RDFNode[] = RDFDocument.getFreeNodes( rdfNodes );\n\n\t\t\tconst freeResources:FreeResources = FreeResources\n\t\t\t\t.parseFreeNodes( repository.context.registry, freeNodes );\n\n\t\t\tconst targetDocuments:string[] = freeResources\n\t\t\t\t.getPointers( true )\n\t\t\t\t.filter( QueryMetadata.is )\n\t\t\t\t.map( x => x.targets )\n\t\t\t\t.reduce( ( targets, x ) => targets.concat( x ), [] )\n\t\t\t\t.map( x => x.$id )\n\t\t\t;\n\n\t\t\tconst rdfDocuments:RDFDocument[] = rdfNodes\n\t\t\t\t.filter( RDFDocument.is );\n\n\t\t\treturn new QueryResultCompacter( repository.context.registry, queryContainer )\n\t\t\t\t.compactDocuments<T & Document>( rdfDocuments, targetDocuments );\n\t\t} )\n\t\t.then( documents => __sortQueryDocuments( queryContainer, documents ) )\n\t\t.catch( _getErrorResponseParserFn( repository.context.registry ) )\n\t\t;\n}\n\n\nfunction __requestRelations<T extends object>( repository:QueryableDocumentsRepositoryTrait, uri:string, requestOptions:RequestOptions, queryData:QueryContainerData ):Promise<(T & Document)[]> {\n\tif( ! repository.context.registry.inScope( uri, true ) )\n\t\treturn Promise.reject( new IllegalArgumentError( `\"${ uri }\" is out of scope.` ) );\n\n\tconst url:string = repository.context\n\t\t.getObjectSchema()\n\t\t.resolveURI( uri, { base: true } );\n\n\tconst queryContainer:QueryContainer = new QueryContainer( repository.context, {\n\t\tcontainerPropertyType: queryData.containerPropertyType,\n\t\turi: url,\n\t} );\n\n\t__executeQueryBuilder( queryContainer, queryData );\n\n\treturn __requestQueryDocuments<T>( repository, url, requestOptions, queryContainer );\n}\n\nfunction __requestDocuments<T extends object>( repository:QueryableDocumentsRepositoryTrait, uris:string[], requestOptions:RequestOptions, queryData:QueryData ):Promise<(T & Document)[]> {\n\tfor( const uri of uris ) {\n\t\tif( ! repository.context.registry.inScope( uri, true ) )\n\t\t\treturn Promise.reject( new IllegalArgumentError( `\"${ uri }\" is out of scope.` ) );\n\t}\n\n\tconst urls:string[] = uris.map( uri => repository.context\n\t\t.getObjectSchema()\n\t\t.resolveURI( uri, { base: true } )\n\t);\n\n\tconst queryContainer:QueryContainer = new QueryContainer( repository.context, {\n\t\turis: urls,\n\t} );\n\n\t__executeQueryBuilder( queryContainer, queryData );\n\n\tconst url:string = urls.length === 1 ? urls[ 0 ] : repository.context.baseURI;\n\tRequestUtils.setRetrievalPreferences( { include: [ C.PreferDocumentChecksums ] }, requestOptions );\n\n\treturn __requestQueryDocuments<T>( repository, url, requestOptions, queryContainer );\n}\n\n\nfunction __getQueryable<T extends object>( repository:QueryableDocumentsRepositoryTrait, uri:string, requestOptions:RequestOptions, queryBuilderFn?:QueryBuilderFn ):Promise<T & Document> {\n\treturn __requestDocuments<T>( repository, [ uri ], requestOptions, { queryBuilderFn } )\n\t\t.then( ( documents ) => documents[ 0 ] );\n}\n\n\nfunction __addRefreshProperties( parentProperty:QueryProperty, queryableProperty:QueryableProperty ):void {\n\tqueryableProperty.subProperties.forEach( ( subProperty, propertyName ) => {\n\t\tconst queryProperty:QueryProperty = parentProperty._addSubProperty( propertyName, subProperty );\n\t\t__addRefreshProperties( queryProperty, subProperty );\n\t} );\n}\n\nfunction __refreshQueryable<T extends object>( this:void, repository:QueryableDocumentsRepositoryTrait, document:Document, requestOptions:RequestOptions = {} ):Promise<T & Document> {\n\tif( ! repository.context.registry.inScope( document.$id, true ) )\n\t\treturn Promise.reject( new IllegalArgumentError( `\"${ document.$id }\" is out of scope.` ) );\n\n\tconst url:string = repository.context\n\t\t.getObjectSchema()\n\t\t.resolveURI( document.$id, { base: true } );\n\n\n\tconst queryContainer:QueryContainer = new QueryContainer( repository.context, { uris: [ url ] } );\n\t__addRefreshProperties( queryContainer._queryProperty, document.$_queryableMetadata! );\n\n\tRequestUtils.setRetrievalPreferences( { include: [ C.PreferDocumentChecksums ] }, requestOptions );\n\n\treturn __requestQueryDocuments<T>( repository, url, requestOptions, queryContainer )\n\t\t.then( ( documents ) => documents[ 0 ] );\n}\n\n\nexport type OverriddenMembers =\n\t| \"get\"\n\t| \"resolve\"\n\t| \"refresh\"\n\t| \"saveAndRefresh\"\n\t;\n\n/**\n * Factory, decorator and utils for {@link QueryableDocumentsRepositoryTrait}.\n */\nexport type QueryableDocumentsRepositoryTraitFactory =\n\t& ModelPrototype<QueryableDocumentsRepositoryTrait, LDPDocumentsRepositoryTrait, OverriddenMembers>\n\t& ModelDecorator<QueryableDocumentsRepositoryTrait, BaseDocumentsRepository>\n\t;\n\n/**\n * Constant that implements {@link QueryableDocumentsRepositoryTraitFactory}.\n */\nexport const QueryableDocumentsRepositoryTrait:QueryableDocumentsRepositoryTraitFactory = {\n\tPROTOTYPE: {\n\t\tget<T extends object>( this:QueryableDocumentsRepositoryTrait, uriOrURIs:string | string[], requestOptionsOrQueryBuilderFn?:GETOptions | QueryBuilderFn, queryBuilderFn?:QueryBuilderFn ):Promise<(T & Document) | (T & Document)[]> {\n\t\t\tconst requestOptions:GETOptions = typeof requestOptionsOrQueryBuilderFn === \"object\" ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : {};\n\n\t\t\tqueryBuilderFn = isFunction( requestOptionsOrQueryBuilderFn ) ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : queryBuilderFn;\n\n\t\t\tif( typeof uriOrURIs !== \"string\" ) {\n\t\t\t\treturn __requestDocuments<T>( this, uriOrURIs, requestOptions, {\n\t\t\t\t\trootType: queryBuilderFn ? void 0 : QueryPropertyType.FULL,\n\t\t\t\t\tqueryBuilderFn,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tconst uri:string = uriOrURIs;\n\t\t\tconst target:Document | undefined = this.context.registry.hasPointer( uri ) ?\n\t\t\t\tthis.context.registry.getPointer( uri, true ) :\n\t\t\t\tvoid 0;\n\n\t\t\tif( queryBuilderFn ) {\n\t\t\t\tconst types:string[] = target ? target.types : [];\n\t\t\t\treturn __getQueryable( this, uri, requestOptions, _ => {\n\t\t\t\t\ttypes.forEach( type => _.withType( type ) );\n\t\t\t\t\treturn queryBuilderFn!.call( void 0, _ );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif( target && target.$isQueried() ) requestOptions.ensureLatest = true;\n\t\t\treturn LDPDocumentsRepositoryTrait.PROTOTYPE\n\t\t\t\t.get.call<LDPDocumentsRepositoryTrait, [ string, RequestOptions?], Promise<T & Document>>( this, uri, requestOptions )\n\t\t\t\t.then<T & Document>( document => {\n\t\t\t\t\tif( ! document.$_queryableMetadata )\n\t\t\t\t\t\treturn document;\n\n\t\t\t\t\t// Remove possible query metadata\n\n\t\t\t\t\tconst resources:QueryablePointer[] = document.$getFragments();\n\t\t\t\t\tresources.push( document );\n\n\t\t\t\t\tresources.forEach( resource => {\n\t\t\t\t\t\tresource.$_queryableMetadata = void 0;\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn document;\n\t\t\t\t} );\n\t\t},\n\n\t\tresolve<T extends object>( this:QueryableDocumentsRepositoryTrait, document:Document, requestOptionsOrQueryBuilderFn?:RequestOptions | QueryBuilderFn, queryBuilderFn?:QueryBuilderFn ):Promise<T & Document> {\n\t\t\treturn this.get( document.$id, requestOptionsOrQueryBuilderFn as RequestOptions, queryBuilderFn );\n\t\t},\n\n\n\t\trefresh<T extends object>( this:QueryableDocumentsRepositoryTrait, document:Document, requestOptions?:RequestOptions ):Promise<T & Document> {\n\t\t\tif( ! document.$isQueried() ) return LDPDocumentsRepositoryTrait.PROTOTYPE\n\t\t\t\t.refresh.call<LDPDocumentsRepositoryTrait, [ Document, RequestOptions?], Promise<T & Document>>( this, document, requestOptions );\n\n\t\t\treturn __refreshQueryable<T>( this, document, requestOptions );\n\t\t},\n\n\t\tsaveAndRefresh<T extends object>( this:QueryableDocumentsRepositoryTrait, document:Document, requestOptions?:RequestOptions ):Promise<T & Document> {\n\t\t\tif( ! document.$_queryableMetadata ) return LDPDocumentsRepositoryTrait.PROTOTYPE\n\t\t\t\t.saveAndRefresh.call<LDPDocumentsRepositoryTrait, [ Document, RequestOptions?], Promise<T & Document>>( this, document, requestOptions );\n\n\t\t\tif( document.$eTag === null ) return Promise.reject( new IllegalStateError( `The document \"${ document.$id }\" is locally outdated and cannot be saved.` ) );\n\n\t\t\tconst cloneOptions:RequestOptions = RequestUtils.cloneOptions( requestOptions || {} );\n\t\t\treturn this.save<T & Document>( document, cloneOptions )\n\t\t\t\t.then<T & Document>( doc => {\n\t\t\t\t\treturn __refreshQueryable( this, doc, requestOptions );\n\t\t\t\t} );\n\t\t},\n\n\n\t\tgetChildren<T extends object>( this:QueryableDocumentsRepositoryTrait, uri:string, requestOptionsOrQueryBuilderFn?:RequestOptions | QueryDocsBuilderFn, queryBuilderFn?:QueryDocsBuilderFn ):Promise<(T & Document)[]> {\n\t\t\tconst requestOptions:RequestOptions = typeof requestOptionsOrQueryBuilderFn === \"object\" ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : {};\n\n\t\t\tqueryBuilderFn = isFunction( requestOptionsOrQueryBuilderFn ) ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : queryBuilderFn;\n\n\t\t\tRequestUtils.setRetrievalPreferences( { include: [ C.PreferDocumentChecksums ] }, requestOptions );\n\n\t\t\treturn __requestRelations<T>( this, uri, requestOptions, {\n\t\t\t\trootType: queryBuilderFn ? void 0 : QueryPropertyType.FULL,\n\t\t\t\tcontainerPropertyType: QueryContainerPropertyType.CHILD,\n\t\t\t\tqueryBuilderFn,\n\t\t\t} );\n\t\t},\n\n\t\tgetMembers<T extends object>( this:QueryableDocumentsRepositoryTrait, uri:string, requestOptionsOrQueryBuilderFn?:RequestOptions | QueryDocsBuilderFn, queryBuilderFn?:QueryDocsBuilderFn ):Promise<(T & Document)[]> {\n\t\t\tconst requestOptions:RequestOptions = typeof requestOptionsOrQueryBuilderFn === \"object\" ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : {};\n\n\t\t\tqueryBuilderFn = isFunction( requestOptionsOrQueryBuilderFn ) ?\n\t\t\t\trequestOptionsOrQueryBuilderFn : queryBuilderFn;\n\n\t\t\tRequestUtils.setRetrievalPreferences( { include: [ C.PreferDocumentChecksums ] }, requestOptions );\n\n\t\t\treturn __requestRelations<T>( this, uri, requestOptions, {\n\t\t\t\trootType: queryBuilderFn ? void 0 : QueryPropertyType.FULL,\n\t\t\t\tcontainerPropertyType: QueryContainerPropertyType.MEMBER,\n\t\t\t\tqueryBuilderFn,\n\t\t\t} );\n\t\t},\n\n\t\tlistChildren<T extends object>( this:QueryableDocumentsRepositoryTrait, uri:string, requestOptions:RequestOptions = {} ):Promise<(T & Document)[]> {\n\t\t\treturn __requestRelations<T>( this, uri, requestOptions, {\n\t\t\t\tcontainerPropertyType: QueryContainerPropertyType.CHILD,\n\t\t\t\trootType: QueryPropertyType.EMPTY,\n\t\t\t} );\n\t\t},\n\n\t\tlistMembers<T extends object>( this:QueryableDocumentsRepositoryTrait, uri:string, requestOptions:RequestOptions = {} ):Promise<(T & Document)[]> {\n\t\t\treturn __requestRelations<T>( this, uri, requestOptions, {\n\t\t\t\trootType: QueryPropertyType.EMPTY,\n\t\t\t\tcontainerPropertyType: QueryContainerPropertyType.MEMBER,\n\t\t\t} );\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is QueryableDocumentsRepositoryTrait {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( QueryableDocumentsRepositoryTrait.PROTOTYPE, object );\n\t},\n\n\tdecorate<T extends BaseDocumentsRepository>( object:T ):T & QueryableDocumentsRepositoryTrait {\n\t\tif( QueryableDocumentsRepositoryTrait.isDecorated( object ) ) return object;\n\n\t\tconst target:T & LDPDocumentsRepositoryTrait = ModelDecorator\n\t\t\t.decorateMultiple( object, LDPDocumentsRepositoryTrait );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( QueryableDocumentsRepositoryTrait.PROTOTYPE, target );\n\t},\n};\n"],"sourceRoot":"../../../src"}