{"version":3,"sources":["Pointer/PointerLibrary.ts"],"names":[],"mappings":"AA6CA,MAAM,UAAU,WAAW,CAAE,cAA+C,EAAE,EAAS;IACtF,OAAO,KAAK,IAAI,cAAc,CAAC,CAAC;QAC/B,cAAc,CAAC,WAAW,CAAE,EAAE,CAAE,CAAC,CAAC;QAClC,cAAc,CAAC,UAAU,CAAE,EAAE,CAAE,CAAC;AAClC,CAAC","file":"PointerLibrary.js","sourcesContent":["import { Pointer } from \"./Pointer\";\n\n\n/**\n * Interface with methods to manage pointers.\n */\nexport interface PointerLibrary {\n\t/**\n\t * Returns true if the service has a pointer referenced by the URI provided.\n\t * @param id The URI of the pointer to check.\n\t */\n\thasPointer( id:string ):boolean;\n\n\t/**\n\t * Returns the pointer referenced by the URI provided.\n\t * If none exists, an empty new pointer will be created.\n\t * @param id The URI of the pointer to get/create.\n\t */\n\tgetPointer( id:string ):Pointer;\n}\n\n/**\n * Interface with methods to manage pointers in models.\n */\nexport interface $PointerLibrary extends Pointer {\n\t/**\n\t * Returns true if the model has a pointer referenced by the URI provided.\n\t * @param id The URI of the pointer to check.\n\t */\n\t$hasPointer( id:string ):boolean;\n\n\t/**\n\t * Returns the pointer referenced by the URI provided.\n\t * If none exists, an empty new pointer will be created.\n\t * @param id The URI of the pointer to get/create.\n\t */\n\t$getPointer( id:string ):Pointer;\n}\n\n\n/**\n * Returns the pointer references by the URI provided using the specified pointer library.\n * @param pointerLibrary Any type of pointer library from where to get the requested pointer.\n * @param id The URI of the pointer to get/create.\n */\nexport function _getPointer( pointerLibrary:PointerLibrary | $PointerLibrary, id:string ):Pointer {\n\treturn \"$id\" in pointerLibrary ?\n\t\tpointerLibrary.$getPointer( id ) :\n\t\tpointerLibrary.getPointer( id );\n}\n"],"sourceRoot":"../../src"}