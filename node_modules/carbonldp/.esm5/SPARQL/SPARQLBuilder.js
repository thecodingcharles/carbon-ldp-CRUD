import * as tslib_1 from "tslib";
import { SPARQLER } from "sparqler";
import { FinishClause } from "sparqler/clauses";
function getFinishSelectFactory(resource, entryPoint) {
    return function (container, object) {
        var finishClause = FinishClause.createFrom(container, object);
        return Object.assign(finishClause, {
            execute: function () { return resource.executeSELECTQuery(entryPoint, finishClause.toCompactString()); },
        });
    };
}
function getFinishAskFactory(resource, entryPoint) {
    return function (container, object) {
        var finishClause = FinishClause.createFrom(container, object);
        return Object.assign(finishClause, {
            execute: function () { return resource.executeASKQuery(entryPoint, finishClause.toCompactString()); },
        });
    };
}
var SPARQLBuilder = (function (_super) {
    tslib_1.__extends(SPARQLBuilder, _super);
    function SPARQLBuilder(repository, entryPoint) {
        var _this = this;
        var finishSelectFactory = getFinishSelectFactory(repository, entryPoint);
        var finishAskFactory = getFinishAskFactory(repository, entryPoint);
        _this = _super.call(this, finishSelectFactory, finishAskFactory) || this;
        return _this;
    }
    return SPARQLBuilder;
}(SPARQLER));
export { SPARQLBuilder };

//# sourceMappingURL=SPARQLBuilder.js.map
