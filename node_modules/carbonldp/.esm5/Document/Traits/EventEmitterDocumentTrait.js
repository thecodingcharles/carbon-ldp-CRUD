import { Event } from "../../Messaging/Event";
import { ModelDecorator } from "../../Model/ModelDecorator";
import { URI } from "../../RDF/URI";
import { ResolvablePointer } from "../../Repository/ResolvablePointer";
import { isFunction, isObject, isString } from "../../Utils";
import { TransientDocument } from "../TransientDocument";
function __parseParams(resource, uriPatternOROnEvent, onEventOrOnError, onError) {
    var uriPattern = isString(uriPatternOROnEvent) ?
        URI.resolve(resource.$id, uriPatternOROnEvent) : resource.$id;
    var onEvent = isFunction(uriPatternOROnEvent) ?
        uriPatternOROnEvent : onEventOrOnError;
    if (onEvent !== onEventOrOnError)
        onError = onEventOrOnError;
    return { uriPattern: uriPattern, onEvent: onEvent, onError: onError };
}
export var EventEmitterDocumentTrait = {
    PROTOTYPE: {
        $on: function (event, uriPatternOROnEvent, onEventOrOnError, onError) {
            var _a = __parseParams(this, uriPatternOROnEvent, onEventOrOnError, onError), uriPattern = _a.uriPattern, onEvent = _a.onEvent, $onError = _a.onError;
            return this.$repository.on(event, uriPattern, onEvent, $onError);
        },
        $off: function (event, uriPatternOROnEvent, onEventOrOnError, onError) {
            var _a = __parseParams(this, uriPatternOROnEvent, onEventOrOnError, onError), uriPattern = _a.uriPattern, onEvent = _a.onEvent, $onError = _a.onError;
            return this.$repository.off(event, uriPattern, onEvent, $onError);
        },
        $one: function (event, uriPatternOROnEvent, onEventOrOnError, onError) {
            var _a = __parseParams(this, uriPatternOROnEvent, onEventOrOnError, onError), uriPattern = _a.uriPattern, onEvent = _a.onEvent, $onError = _a.onError;
            return this.$repository.one(event, uriPattern, onEvent, $onError);
        },
        $onChildCreated: function (uriPatternOROnEvent, onEventOrOnError, onError) {
            return this.$on(Event.CHILD_CREATED, uriPatternOROnEvent, onEventOrOnError, onError);
        },
        $onDocumentModified: function (uriPatternOROnEvent, onEventOrOnError, onError) {
            return this.$on(Event.DOCUMENT_MODIFIED, uriPatternOROnEvent, onEventOrOnError, onError);
        },
        $onDocumentDeleted: function (uriPatternOROnEvent, onEventOrOnError, onError) {
            return this.$on(Event.DOCUMENT_DELETED, uriPatternOROnEvent, onEventOrOnError, onError);
        },
        $onMemberAdded: function (uriPatternOROnEvent, onEventOrOnError, onError) {
            return this.$on(Event.MEMBER_ADDED, uriPatternOROnEvent, onEventOrOnError, onError);
        },
        $onMemberRemoved: function (uriPatternOROnEvent, onEventOrOnError, onError) {
            return this.$on(Event.MEMBER_REMOVED, uriPatternOROnEvent, onEventOrOnError, onError);
        },
    },
    isDecorated: function (object) {
        return isObject(object)
            && ModelDecorator
                .hasPropertiesFrom(EventEmitterDocumentTrait.PROTOTYPE, object);
    },
    decorate: function (object) {
        if (EventEmitterDocumentTrait.isDecorated(object))
            return object;
        var resource = ModelDecorator
            .decorateMultiple(object, TransientDocument, ResolvablePointer);
        return ModelDecorator
            .definePropertiesFrom(EventEmitterDocumentTrait.PROTOTYPE, resource);
    },
};

//# sourceMappingURL=EventEmitterDocumentTrait.js.map
