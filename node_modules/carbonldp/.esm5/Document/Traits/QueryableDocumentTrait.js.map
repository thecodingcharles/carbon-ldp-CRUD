{"version":3,"sources":["Document/Traits/QueryableDocumentTrait.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAIlE,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAG5D,OAAO,EAAE,gBAAgB,EAAE,MAAM,uCAAuC,CAAC;AAIzE,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAEpC,OAAO,EAAE,iBAAiB,EAAE,MAAM,oCAAoC,CAAC;AAGvE,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAiLtD,MAAM,CAAC,IAAM,sBAAsB,GAAiC;IACnE,SAAS,EAAE;QACV,IAAI,EAAJ,UAAmC,IAAmB;YAAtD,iBAMC;YANuD,cAAa;iBAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;gBAAb,6BAAa;;;YACpE,IAAI,CAAE,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE;gBAC1B,OAAO,CAAA,KAAA,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAA,CAAC,IAAI,YAAE,IAAI,EAAE,IAAI,SAAK,IAAI,GAAG;YAErE,IAAM,YAAY,GAAY,IAAI,CAAC,GAAG,CAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,OAAO,CAAE,KAAI,CAAC,GAAG,EAAE,GAAG,CAAE,EAA5B,CAA4B,CAAE,CAAC;YAC9E,OAAO,CAAA,KAAA,IAAI,CAAC,WAAW,CAAA,CAAC,GAAG,YAAE,YAAY,SAAK,IAAI,GAAG;QACtD,CAAC;QAED,YAAY,EAAZ,UAA6D,4BAA0E,EAAE,uBAA4D,EAAE,cAAkC;;YAClO,IAAA,mEAAkF,EAAhF,cAAI,EAAE,gBAA0E,CAAC;YAGzF,OAAO,CAAA,KAAA,IAAI,CAAC,WAAW,CAAA,CAAC,WAAW,YAAE,IAAI,SAAK,KAAK,GAAG;QACvD,CAAC;QAED,WAAW,EAAX,UAA4D,4BAA0E,EAAE,uBAA4D,EAAE,cAAkC;;YACjO,IAAA,mEAAkF,EAAhF,cAAI,EAAE,gBAA0E,CAAC;YAGzF,OAAO,CAAA,KAAA,IAAI,CAAC,WAAW,CAAA,CAAC,UAAU,YAAE,IAAI,SAAK,KAAK,GAAG;QACtD,CAAC;QAGD,aAAa,EAAb,UAA8D,YAAqC,EAAE,cAA8B;;YAC5H,IAAA,mDAAkE,EAAhE,cAAI,EAAE,gBAA0D,CAAC;YAGzE,OAAO,CAAA,KAAA,IAAI,CAAC,WAAW,CAAA,CAAC,YAAY,YAAE,IAAI,SAAK,KAAK,GAAG;QACxD,CAAC;QAED,YAAY,EAAZ,UAA6D,YAAqC,EAAE,cAA8B;;YAC3H,IAAA,mDAAkE,EAAhE,cAAI,EAAE,gBAA0D,CAAC;YAGzE,OAAO,CAAA,KAAA,IAAI,CAAC,WAAW,CAAA,CAAC,WAAW,YAAE,IAAI,SAAK,KAAK,GAAG;QACvD,CAAC;KACD;IAGD,WAAW,EAAX,UAAa,MAAa;QACzB,OAAO,cAAc;aACnB,iBAAiB,CAAE,sBAAsB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IACjE,CAAC;IAED,QAAQ,EAAR,UAAgD,MAAQ;QACvD,IAAI,sBAAsB,CAAC,WAAW,CAAE,MAAM,CAAE;YAAG,OAAO,MAAM,CAAC;QAGjE,IAAM,MAAM,GAAW,MAAiB,CAAC;QAEzC,IAAM,MAAM,GAAiD,cAAc;aACzE,gBAAgB,CAAE,MAAM,EAAE,gBAAgB,EAAE,gBAAgB,CAAE,CAAC;QAEjE,OAAO,cAAc;aACnB,oBAAoB,CAAE,sBAAsB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IACpE,CAAC;CACD,CAAC","file":"QueryableDocumentTrait.js","sourcesContent":["import { QueryableDocumentsRepositoryTrait } from \"../../DocumentsRepository/Traits/QueryableDocumentsRepositoryTrait\";\n\nimport { _parseURIParams } from \"../../DocumentsRepository/Utils\";\n\nimport { GETOptions, RequestOptions } from \"../../HTTP/Request\";\n\nimport { ModelDecorator } from \"../../Model/ModelDecorator\";\nimport { ModelPrototype } from \"../../Model/ModelPrototype\";\n\nimport { QueryablePointer } from \"../../QueryDocuments/QueryablePointer\";\nimport { QueryDocumentBuilder } from \"../../QueryDocuments/QueryDocumentBuilder\";\nimport { QueryDocumentsBuilder } from \"../../QueryDocuments/QueryDocumentsBuilder\";\n\nimport { URI } from \"../../RDF/URI\";\n\nimport { ResolvablePointer } from \"../../Repository/ResolvablePointer\";\n\nimport { Document } from \"../Document\";\nimport { LDPDocumentTrait } from \"./LDPDocumentTrait\";\n\n\n/**\n * Properties for creating a {@link QueryableDocumentTrait}\n */\nexport interface BaseQueryableDocumentTrait {\n\t/**\n\t * Repository trait that will to execute requests of the trait to create.\n\t */\n\t$repository:QueryableDocumentsRepositoryTrait;\n}\n\n/**\n * Trait of a {@link Document} with methods for advanced reading requests.\n */\nexport interface QueryableDocumentTrait extends LDPDocumentTrait, QueryablePointer {\n\t/**\n\t * Repository trait that actually executes the request of the current trait.\n\t */\n\t$repository:QueryableDocumentsRepositoryTrait;\n\n\n\t/**\n\t * Retrieves the specific properties of the current document set by the query function.\n\t * @param queryBuilderFn Function that specify the structure of the document to be retrieved.\n\t */\n\t$get<T extends object>( queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Retrieves the entire current document or only the properties set by the query function when provided.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the document to be retrieved.\n\t */\n\t$get<T extends object>( requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Retrieves the properties of the document of the URI specified set by the query function.\n\t * @param uri URI of the document to be retrieved.\n\t * @param queryBuilderFn Function that specify the structure of the document to be retrieved.\n\t */\n\t$get<T extends object>( uri:string, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Retrieves the entire document of the URI specified or only the properties set by the query function when provided.\n\t * @param uri URI of the document to be retrieved.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the document to be retrieved.\n\t */\n\t$get<T extends object>( uri:string, requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Retrieves the properties set by the query function, of the documents specified.\n\t * @param uris URIs of the documents to be retrieved.\n\t * @param queryBuilderFn Function that specify the structure of the documents to be retrieved.\n\t */\n\t$get<T extends object>( uris:string[], queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieves the entire documents of the URIs specified or only the properties set by the query function when provided.\n\t * @param uris URIs of the documents to be retrieved.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the documents to be retrieved.\n\t */\n\t$get<T extends object>( uris:string[], requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<(T & Document)[]>;\n\n\t/**\n\t * Resolves the specific properties of the current document set by the query function.\n\t * @param queryBuilderFn Function that specify the structure of the document to be resolved.\n\t */\n\t$resolve<T extends object>( queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & this & Document>;\n\t/**\n\t * Resolves the entire current document or only the properties set by the query function when provided.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the document to be resolved.\n\t */\n\t$resolve<T extends object>( requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & this & Document>;\n\t/**\n\t * Resolves the properties of the document of the URI specified set by the query function.\n\t * @param document Document to be resolved.\n\t * @param queryBuilderFn Function that specify the structure of the document to be resolved.\n\t */\n\t$resolve<T extends object>( document:Document, queryBuilderFn:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\t/**\n\t * Resolves the entire document of the URI specified or only the properties set by the query function when provided.\n\t * @param document Document to be resolved.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the document to be resolved.\n\t */\n\t$resolve<T extends object>( document:Document, requestOptions?:GETOptions, queryBuilderFn?:( queryBuilder:QueryDocumentBuilder ) => QueryDocumentBuilder ):Promise<T & Document>;\n\n\n\t/**\n\t * Retrieves the entire children of the current document or only the properties set by the query function.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the children to be retrieved.\n\t */\n\t$getChildren<T extends object>( requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieves the entry children of the current document or only the properties set by the query function.\n\t * @param queryBuilderFn Function that specify the structure of the children to be retrieved.\n\t */\n\t$getChildren<T extends object>( queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieves the entire children of the document of the specified URI or only the properties set by the query function.\n\t * @param uri URI of the document to retrieve its children.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the children to be retrieved.\n\t */\n\t$getChildren<T extends object>( uri:string, requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieved the entire children of the document of the specified URI or only the properties set by the query function.\n\t * @param uri URI of the document to retrieve its children.\n\t * @param queryBuilderFn Function that specify the structure of the children to be retrieved.\n\t */\n\t$getChildren<T extends object>( uri:string, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\n\t/**\n\t * Retrieves the entire members of the current document or only the properties set by the query function.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the members to be retrieved.\n\t */\n\t$getMembers<T extends object>( requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieves the entry members of the current document or only the properties set by the query function.\n\t * @param queryBuilderFn Function that specify the structure of the members to be retrieved.\n\t */\n\t$getMembers<T extends object>( queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieves the entire members of the document of the specified URI or only the properties set by the query function.\n\t * @param uri URI of the document to retrieve its members.\n\t * @param requestOptions Customizable options for the request.\n\t * @param queryBuilderFn Function that specify the structure of the members to be retrieved.\n\t */\n\t$getMembers<T extends object>( uri:string, requestOptions:RequestOptions, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieved the entire members of the document of the specified URI or only the properties set by the query function.\n\t * @param uri URI of the document to retrieve its members.\n\t * @param queryBuilderFn Function that specify the structure of the members to be retrieved.\n\t */\n\t$getMembers<T extends object>( uri:string, queryBuilderFn?:( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder ):Promise<(T & Document)[]>;\n\n\n\t/**\n\t * Retrieves the shallow children of the current document.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\t$listChildren<T extends object>( requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieves the shallow children of the document of the specified URI.\n\t * @param uri URI of the document to retrieve its shallow children.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\t$listChildren<T extends object>( uri:string, requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\n\t/**\n\t * Retrieves the shallow members of the current document.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\t$listMembers<T extends object>( requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\t/**\n\t * Retrieves the shallow members of the document of the specified URI\n\t * @param uri URI of the document to retrieve its shallow members.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\t$listMembers<T extends object>( uri:string, requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n}\n\n\ntype QueryDocsBuilderFn = Function & (( queryBuilder:QueryDocumentsBuilder ) => QueryDocumentsBuilder);\n\n/**\n * Factory, decorator and utils for {@link QueryableDocumentTrait}.\n */\nexport type QueryableDocumentTraitFactory =\n\t& ModelPrototype<QueryableDocumentTrait, LDPDocumentTrait & QueryablePointer, \"$get\">\n\t& ModelDecorator<QueryableDocumentTrait, BaseQueryableDocumentTrait>\n\t;\n\n/**\n * Constant that implements {@link QueryableDocumentTraitFactory}.\n */\nexport const QueryableDocumentTrait:QueryableDocumentTraitFactory = {\n\tPROTOTYPE: {\n\t\t$get( this:QueryableDocumentTrait, uris:any | string[], ...args:any[] ):Promise<any> {\n\t\t\tif( ! Array.isArray( uris ) )\n\t\t\t\treturn ResolvablePointer.PROTOTYPE.$get.call( this, uris, ...args );\n\n\t\t\tconst resolvedURIs:string[] = uris.map( uri => URI.resolve( this.$id, uri ) );\n\t\t\treturn this.$repository.get( resolvedURIs, ...args );\n\t\t},\n\n\t\t$getChildren<T extends object>( this:QueryableDocumentTrait, uriOrQueryBuilderFnOrOptions?:string | QueryDocsBuilderFn | RequestOptions, queryBuilderFnOrOptions?:QueryDocsBuilderFn | RequestOptions, queryBuilderFn?:QueryDocsBuilderFn ):Promise<(T & Document)[]> {\n\t\t\tconst { _uri, _args } = _parseURIParams( this, uriOrQueryBuilderFnOrOptions, arguments );\n\t\t\t// FIXME\n\t\t\t// @ts-ignore\n\t\t\treturn this.$repository.getChildren( _uri, ..._args );\n\t\t},\n\n\t\t$getMembers<T extends object>( this:QueryableDocumentTrait, uriOrQueryBuilderFnOrOptions?:string | QueryDocsBuilderFn | RequestOptions, queryBuilderFnOrOptions?:QueryDocsBuilderFn | RequestOptions, queryBuilderFn?:QueryDocsBuilderFn ):Promise<(T & Document)[]> {\n\t\t\tconst { _uri, _args } = _parseURIParams( this, uriOrQueryBuilderFnOrOptions, arguments );\n\t\t\t// FIXME\n\t\t\t// @ts-ignore\n\t\t\treturn this.$repository.getMembers( _uri, ..._args );\n\t\t},\n\n\n\t\t$listChildren<T extends object>( this:QueryableDocumentTrait, uriOrOptions?:string | RequestOptions, requestOptions?:RequestOptions ):Promise<(T & Document)[]> {\n\t\t\tconst { _uri, _args } = _parseURIParams( this, uriOrOptions, arguments );\n\t\t\t// FIXME\n\t\t\t// @ts-ignore\n\t\t\treturn this.$repository.listChildren( _uri, ..._args );\n\t\t},\n\n\t\t$listMembers<T extends object>( this:QueryableDocumentTrait, uriOrOptions?:string | RequestOptions, requestOptions?:RequestOptions ):Promise<(T & Document)[]> {\n\t\t\tconst { _uri, _args } = _parseURIParams( this, uriOrOptions, arguments );\n\t\t\t// FIXME\n\t\t\t// @ts-ignore\n\t\t\treturn this.$repository.listMembers( _uri, ..._args );\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is QueryableDocumentTrait {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( QueryableDocumentTrait.PROTOTYPE, object );\n\t},\n\n\tdecorate<T extends BaseQueryableDocumentTrait>( object:T ):T & QueryableDocumentTrait {\n\t\tif( QueryableDocumentTrait.isDecorated( object ) ) return object;\n\n\t\ttype ForcedT = T & Pick<QueryableDocumentTrait, \"$get\" | \"$resolve\">;\n\t\tconst forced:ForcedT = object as ForcedT;\n\n\t\tconst target:ForcedT & LDPDocumentTrait & QueryablePointer = ModelDecorator\n\t\t\t.decorateMultiple( forced, LDPDocumentTrait, QueryablePointer );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( QueryableDocumentTrait.PROTOTYPE, target );\n\t},\n};\n"],"sourceRoot":"../../../src"}