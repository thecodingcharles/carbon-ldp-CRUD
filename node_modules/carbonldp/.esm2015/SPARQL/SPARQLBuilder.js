import { SPARQLER } from "sparqler";
import { FinishClause } from "sparqler/clauses";
function getFinishSelectFactory(resource, entryPoint) {
    return (container, object) => {
        const finishClause = FinishClause.createFrom(container, object);
        return Object.assign(finishClause, {
            execute: () => resource.executeSELECTQuery(entryPoint, finishClause.toCompactString()),
        });
    };
}
function getFinishAskFactory(resource, entryPoint) {
    return (container, object) => {
        const finishClause = FinishClause.createFrom(container, object);
        return Object.assign(finishClause, {
            execute: () => resource.executeASKQuery(entryPoint, finishClause.toCompactString()),
        });
    };
}
export class SPARQLBuilder extends SPARQLER {
    constructor(repository, entryPoint) {
        const finishSelectFactory = getFinishSelectFactory(repository, entryPoint);
        const finishAskFactory = getFinishAskFactory(repository, entryPoint);
        super(finishSelectFactory, finishAskFactory);
    }
}

//# sourceMappingURL=SPARQLBuilder.js.map
