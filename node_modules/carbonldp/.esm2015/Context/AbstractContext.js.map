{"version":3,"sources":["Context/AbstractContext.ts"],"names":[],"mappings":"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","file":"AbstractContext.js","sourcesContent":["import { IllegalArgumentError } from \"../Errors/IllegalArgumentError\";\n\nimport { GeneralRegistry } from \"../GeneralRegistry/GeneralRegistry\";\nimport { GeneralRepository } from \"../GeneralRepository/GeneralRepository\";\n\nimport { JSONLDConverter } from \"../JSONLD/JSONLDConverter\";\n\nimport { ModelSchema } from \"../Model/ModelSchema\";\n\nimport { DigestedObjectSchema } from \"../ObjectSchema/DigestedObjectSchema\";\nimport { ObjectSchema } from \"../ObjectSchema/ObjectSchema\";\nimport { ObjectSchemaDigester } from \"../ObjectSchema/ObjectSchemaDigester\";\n\nimport { URI } from \"../RDF/URI\";\n\nimport { RegisteredPointer } from \"../Registry/RegisteredPointer\";\nimport { ResolvablePointer } from \"../Repository/ResolvablePointer\";\n\nimport { isString } from \"../Utils\";\n\nimport { Context } from \"./Context\";\nimport { ContextSettings } from \"./ContextSettings\";\n\n\n/**\n * Abstract class used to define any context of the SDK.\n */\nexport abstract class AbstractContext<REGISTRY extends RegisteredPointer | undefined = RegisteredPointer, REPOSITORY extends ResolvablePointer | undefined = ResolvablePointer, PARENT extends AbstractContext<any, any, any> | undefined = undefined> implements Context<REGISTRY, REPOSITORY> {\n\t/**\n\t * @see {@link Context.registry}\n\t */\n\tabstract readonly registry:REGISTRY extends {} ? GeneralRegistry<REGISTRY> : undefined;\n\t/**\n\t * @see {@link Context.repository}\n\t */\n\tabstract readonly repository:REPOSITORY extends {} ? GeneralRepository<REPOSITORY> : undefined;\n\n\t/**\n\t * @see {@link Context.jsonldConverter}\n\t */\n\treadonly jsonldConverter:JSONLDConverter;\n\n\tprotected abstract _baseURI:string;\n\t/**\n\t * @see {@link Context.baseURI}\n\t */\n\tget baseURI():string { return this._baseURI; }\n\n\tprotected readonly _parentContext:PARENT;\n\t/**\n\t * @see {@link Context.parentContext}\n\t */\n\tget parentContext():PARENT { return this._parentContext; }\n\n\tprotected _settings?:ContextSettings;\n\n\tprotected _generalObjectSchema?:DigestedObjectSchema;\n\tprotected _typeObjectSchemaMap:Map<string, DigestedObjectSchema>;\n\n\n\t/**\n\t * Create the context with an optional associated parent.\n\t * @param parentContext The optional parent context to be associated to the context.\n\t */\n\tconstructor( parentContext:PARENT ) {\n\t\tthis._parentContext = parentContext;\n\t\tthis._typeObjectSchemaMap = new Map<string, DigestedObjectSchema>();\n\n\t\tthis.jsonldConverter = new JSONLDConverter( parentContext && parentContext.jsonldConverter.literalSerializers );\n\t}\n\n\n\t/**\n\t * @see {@link Context.resolve}\n\t */\n\tresolve( relativeURI:string ):string {\n\t\treturn URI.resolve( this.baseURI, relativeURI );\n\t}\n\n\n\t/**\n\t * @see {@link Context.hasObjectSchema}\n\t */\n\thasObjectSchema( type:string ):boolean {\n\t\ttype = this.__resolveTypeURI( type );\n\t\tif( this._typeObjectSchemaMap.has( type ) ) return true;\n\t\treturn !!this.parentContext && this.parentContext.hasObjectSchema( type );\n\t}\n\n\n\t/**\n\t * @see {@link Context.getObjectSchema}\n\t */\n\tgetObjectSchema( type?:string ):DigestedObjectSchema {\n\t\tif( !!type ) {\n\t\t\t// Type specific schema\n\t\t\ttype = this.__resolveTypeURI( type );\n\t\t\tif( this._typeObjectSchemaMap.has( type ) ) return this._typeObjectSchemaMap.get( type )!;\n\t\t\tif( this.parentContext && this.parentContext.hasObjectSchema( type ) ) return this.parentContext.getObjectSchema( type );\n\n\t\t\tthrow new IllegalArgumentError( `\"${ type }\" hasn't an object schema.` );\n\t\t} else {\n\t\t\t// General schema\n\t\t\tconst generalSchema:DigestedObjectSchema = !this._generalObjectSchema ?\n\t\t\t\tthis.parentContext ?\n\t\t\t\t\tthis.parentContext.getObjectSchema() :\n\t\t\t\t\tnew DigestedObjectSchema() :\n\t\t\t\tObjectSchemaDigester\n\t\t\t\t\t.combineDigestedObjectSchemas( [ this._generalObjectSchema ] )\n\t\t\t;\n\n\t\t\tif( generalSchema.vocab === void 0 && this._settings && this._settings.vocabulary )\n\t\t\t\tgeneralSchema.vocab = this.resolve( this._settings.vocabulary );\n\n\t\t\tif( !generalSchema.base )\n\t\t\t\tgeneralSchema.base = this.baseURI;\n\n\t\t\treturn generalSchema;\n\t\t}\n\t}\n\n\n\textendObjectSchema( type:string, objectSchema:ObjectSchema ):this;\n\textendObjectSchema( modelSchemaOrObjectSchema:ModelSchema | ObjectSchema ):this;\n\textendObjectSchema( modelSchemasOrObjectSchemas:(ModelSchema | ObjectSchema)[] ):this;\n\t/**\n\t * @see {@link Context.extendObjectSchema}\n\t */\n\textendObjectSchema( objectSchemaOrTypeOrModelSchema:string | ModelSchema | (ModelSchema | ObjectSchema)[] | ObjectSchema, objectSchema?:ObjectSchema ):this {\n\t\tif( isString( objectSchemaOrTypeOrModelSchema ) ) {\n\t\t\tif( !objectSchema ) throw new IllegalArgumentError( `An object schema is required.` );\n\t\t\treturn this.__extendTypeSchema( objectSchema, objectSchemaOrTypeOrModelSchema );\n\t\t}\n\n\t\tif( ModelSchema.is( objectSchemaOrTypeOrModelSchema ) )\n\t\t\treturn this.__extendTypeSchema( objectSchemaOrTypeOrModelSchema.SCHEMA, objectSchemaOrTypeOrModelSchema.TYPE );\n\n\t\tif( Array.isArray( objectSchemaOrTypeOrModelSchema ) ) {\n\t\t\tobjectSchemaOrTypeOrModelSchema.forEach( this.extendObjectSchema, this );\n\t\t\treturn this;\n\t\t}\n\n\t\treturn this.__extendGeneralSchema( objectSchemaOrTypeOrModelSchema );\n\t}\n\n\n\t/**\n\t * @see {@link Context.clearObjectSchema}\n\t */\n\tclearObjectSchema( type?:string ):void {\n\t\tif( type === void 0 ) {\n\t\t\tthis._generalObjectSchema = this.parentContext ? undefined : new DigestedObjectSchema();\n\t\t} else {\n\t\t\ttype = this.__resolveTypeURI( type );\n\t\t\tthis._typeObjectSchemaMap.delete( type );\n\t\t}\n\t}\n\n\t/**\n\t * Returns all the typed schemas including the ones from the parent contexts.\n\t *\n\t * @param excepts Optional types to exclude in the returning of the stored schemas.\n\t */\n\t_getTypeObjectSchemas( excepts:string[] = [] ):DigestedObjectSchema[] {\n\t\tconst exceptsSet:Set<string> = new Set( excepts );\n\n\t\tconst types:string[] = this\n\t\t\t.__getObjectSchemasTypes()\n\t\t\t.filter( type => !exceptsSet.has( type ) )\n\t\t;\n\n\t\treturn types.map( this.getObjectSchema, this );\n\t}\n\n\tprotected __getObjectSchemasTypes():string[] {\n\t\tconst localTypes:string[] = [];\n\t\tthis._typeObjectSchemaMap\n\t\t\t.forEach( ( _, key ) => localTypes.push( key ) );\n\n\t\tif( !this._parentContext ) return localTypes;\n\n\t\tconst allTypes:string[] = this._parentContext.__getObjectSchemasTypes();\n\t\tfor( const type of localTypes ) {\n\t\t\tif( allTypes.indexOf( type ) !== - 1 ) continue;\n\t\t\tallTypes.push( type );\n\t\t}\n\n\t\treturn allTypes;\n\t}\n\n\n\tprotected __extendGeneralSchema( objectSchema:ObjectSchema ):this {\n\t\tconst digestedSchemaToExtend:DigestedObjectSchema = this.__getInheritGeneralSchema();\n\n\t\tthis._generalObjectSchema = ObjectSchemaDigester._combineSchemas( [\n\t\t\tdigestedSchemaToExtend,\n\t\t\tObjectSchemaDigester.digestSchema( objectSchema ),\n\t\t] );\n\n\t\treturn this;\n\t}\n\n\tprotected __extendTypeSchema( objectSchema:ObjectSchema, type:string ):this {\n\t\ttype = this.__resolveTypeURI( type );\n\t\tconst digestedSchemaToExtend:DigestedObjectSchema = this.__getInheritTypeSchema( type );\n\n\t\tconst extendedDigestedSchema:DigestedObjectSchema = ObjectSchemaDigester\n\t\t\t.combineDigestedObjectSchemas( [\n\t\t\t\tdigestedSchemaToExtend,\n\t\t\t\tObjectSchemaDigester.digestSchema( objectSchema ),\n\t\t\t] );\n\n\t\tthis._typeObjectSchemaMap\n\t\t\t.set( type, extendedDigestedSchema );\n\n\t\treturn this;\n\t}\n\n\n\tprotected __getInheritGeneralSchema():DigestedObjectSchema {\n\t\tif( this._generalObjectSchema )\n\t\t\treturn this._generalObjectSchema;\n\n\t\tif( this.parentContext )\n\t\t\treturn this.parentContext.getObjectSchema();\n\n\t\treturn new DigestedObjectSchema();\n\t}\n\n\tprotected __getInheritTypeSchema( type:string ):DigestedObjectSchema {\n\t\tif( this._typeObjectSchemaMap.has( type ) )\n\t\t\treturn this._typeObjectSchemaMap.get( type )!;\n\n\t\tif( this.parentContext && this.parentContext.hasObjectSchema( type ) )\n\t\t\treturn this.parentContext.getObjectSchema( type );\n\n\t\treturn new DigestedObjectSchema();\n\t}\n\n\n\tprivate __resolveTypeURI( uri:string ):string {\n\t\treturn this.getObjectSchema()\n\t\t\t.resolveURI( uri, { vocab: true } );\n\t}\n}\n"],"sourceRoot":"../../src"}