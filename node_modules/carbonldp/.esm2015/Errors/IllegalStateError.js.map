{"version":3,"sources":["Errors/IllegalStateError.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAKhD,MAAM,OAAO,iBAAkB,SAAQ,aAAa;IACnD,IAAI,IAAI,KAAY,OAAO,mBAAmB,CAAC,CAAC,CAAC;IAEjD,YAAa,UAAiB,EAAE;QAC/B,KAAK,CAAE,OAAO,CAAE,CAAC;IAClB,CAAC;CACD","file":"IllegalStateError.js","sourcesContent":["import { AbstractError } from \"./AbstractError\";\n\n/**\n * Error class to indicate that a task can't be completed because of the lack of pre-required configuration or execution of previous tasks.\n */\nexport class IllegalStateError extends AbstractError {\n\tget name():string { return \"IllegalStateError\"; }\n\n\tconstructor( message:string = \"\" ) {\n\t\tsuper( message );\n\t}\n}\n"],"sourceRoot":"../../src"}