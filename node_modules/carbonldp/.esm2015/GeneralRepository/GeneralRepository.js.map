{"version":3,"sources":["GeneralRepository/GeneralRepository.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,oBAAoB,EAAE,MAAM,gCAAgC,CAAC;AAEtE,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAMzD,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AA6BtD,MAAM,CAAC,MAAM,iBAAiB,GAA4B;IACzD,SAAS,EAAE;QACV,IAAI,OAAO;YACV,MAAM,IAAI,oBAAoB,CAAE,iCAAiC,CAAE,CAAC;QACrE,CAAC;KACD;IAGD,WAAW,CAAE,MAAa;QACzB,OAAO,cAAc;aACnB,iBAAiB,CAAE,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IAC5D,CAAC;IAED,QAAQ,CAAmC,MAAQ;QAClD,IAAI,iBAAiB,CAAC,WAAW,CAAE,MAAM,CAAE;YAAG,OAAO,MAAM,CAAC;QAE5D,MAAM,MAAM,GAAkB,cAAc;aAC1C,gBAAgB,CAAE,MAAM,EAAE,UAAU,CAAE,CAAC;QAEzC,OAAO,cAAc;aACnB,oBAAoB,CAAE,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IAC/D,CAAC;IAGD,MAAM,CAAoB,IAA8B;QACvD,OAAO,iBAAiB,CAAC,UAAU,mBAAO,IAAW,EAAI,CAAC;IAC3D,CAAC;IAED,UAAU,CAAoB,MAAgC;QAC7D,OAAO,iBAAiB,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;IAC7C,CAAC;CACD,CAAC","file":"GeneralRepository.js","sourcesContent":["import { Context } from \"../Context/Context\";\n\nimport { IllegalArgumentError } from \"../Errors/IllegalArgumentError\";\n\nimport { ModelDecorator } from \"../Model/ModelDecorator\";\nimport { ModelFactory } from \"../Model/ModelFactory\";\nimport { ModelPrototype } from \"../Model/ModelPrototype\";\n\nimport { RegisteredPointer } from \"../Registry/RegisteredPointer\";\n\nimport { Repository } from \"../Repository/Repository\";\nimport { ResolvablePointer } from \"../Repository/ResolvablePointer\";\n\nimport { BaseGeneralRepository } from \"./BaseGeneralRepository\";\n\n\n/**\n * Base repository used by {@link Context}.\n */\nexport interface GeneralRepository<MODEL extends ResolvablePointer = ResolvablePointer> extends Repository<MODEL> {\n\t/**\n\t * Context where the repository belongs to.\n\t */\n\tcontext:Context<MODEL & RegisteredPointer, MODEL>;\n}\n\n\n/**\n * Factory, decorator and utils for {@link GeneralRepository}.\n */\nexport type GeneralRepositoryFactory =\n\t& ModelPrototype<GeneralRepository, Repository>\n\t& ModelDecorator<GeneralRepository<any>, BaseGeneralRepository>\n\t& ModelFactory<GeneralRepository, BaseGeneralRepository>\n\t;\n\n/**\n * Constant that implements {@link GeneralRepositoryFactory}.\n */\nexport const GeneralRepository:GeneralRepositoryFactory = {\n\tPROTOTYPE: {\n\t\tget context():Context<ResolvablePointer & RegisteredPointer, ResolvablePointer> {\n\t\t\tthrow new IllegalArgumentError( `Property \"context\" is required.` );\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is GeneralRepository {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( GeneralRepository.PROTOTYPE, object );\n\t},\n\n\tdecorate<T extends BaseGeneralRepository>( object:T ):T & GeneralRepository {\n\t\tif( GeneralRepository.isDecorated( object ) ) return object;\n\n\t\tconst target:T & Repository = ModelDecorator\n\t\t\t.decorateMultiple( object, Repository );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( GeneralRepository.PROTOTYPE, target );\n\t},\n\n\n\tcreate<T extends object>( data:T & BaseGeneralRepository ):T & GeneralRepository {\n\t\treturn GeneralRepository.createFrom( { ...data as any } );\n\t},\n\n\tcreateFrom<T extends object>( object:T & BaseGeneralRepository ):T & GeneralRepository {\n\t\treturn GeneralRepository.decorate( object );\n\t},\n};\n"],"sourceRoot":"../../src"}