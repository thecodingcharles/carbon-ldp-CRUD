{"version":3,"sources":["QueryDocuments/QueryablePointer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAKzD,OAAO,EAAE,iBAAiB,EAAE,MAAM,iCAAiC,CAAC;AAkCpE,MAAM,CAAC,MAAM,gBAAgB,GAA2B;IACvD,SAAS,EAAE;QACV,mBAAmB,EAAE,KAAK,CAAC;QAE3B,UAAU;YACT,OAAO,CAAE,CAAE,IAAI,CAAC,mBAAmB,CAAC;QACrC,CAAC;KACD;IAGD,WAAW,CAAE,MAAa;QACzB,OAAO,cAAc;aACnB,iBAAiB,CAAE,gBAAgB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IAC3D,CAAC;IAED,QAAQ,CAAmC,MAAQ;QAClD,IAAI,gBAAgB,CAAC,WAAW,CAAE,MAAM,CAAE;YAAG,OAAO,MAAM,CAAC;QAE3D,MAAM,MAAM,GAAyB,cAAc;aACjD,gBAAgB,CAAE,MAAM,EAAE,iBAAiB,CAAE,CAAC;QAEhD,OAAO,cAAc;aACnB,oBAAoB,CAAE,gBAAgB,CAAC,SAAS,EAAE,MAAM,CAAE,CAAC;IAC9D,CAAC;IAGD,EAAE,CAAE,KAAS;QACZ,OAAO,iBAAiB,CAAC,EAAE,CAAE,KAAK,CAAE;eAChC,gBAAgB,CAAC,WAAW,CAAE,KAAK,CAAE,CACvC;IACH,CAAC;CACD,CAAC","file":"QueryablePointer.js","sourcesContent":["import { ModelDecorator } from \"../Model/ModelDecorator\";\nimport { ModelPrototype } from \"../Model/ModelPrototype\";\nimport { ModelTypeGuard } from \"../Model/ModelTypeGuard\";\n\nimport { BaseResolvablePointer } from \"../Repository/BaseResolvablePointer\";\nimport { ResolvablePointer } from \"../Repository/ResolvablePointer\";\n\nimport { QueryableProperty } from \"./QueryableProperty\";\n\n\n/**\n * Model of a resource that can be queried or has been queried.\n */\nexport interface QueryablePointer extends ResolvablePointer {\n\t/**\n\t * Metadata with the data to query the resource again.\n\t */\n\t$_queryableMetadata:QueryableProperty | undefined;\n\n\n\t/**\n\t * Returns true if the resource has been queried.\n\t */\n\t$isQueried():boolean;\n}\n\n\n/**\n * Factory, decorator and utils for {@link QueryablePointer}.\n */\nexport type QueryablePointerFactory =\n\t& ModelPrototype<QueryablePointer, ResolvablePointer>\n\t& ModelDecorator<QueryablePointer, BaseResolvablePointer>\n\t& ModelTypeGuard<QueryablePointer>\n\t;\n\n/**\n * Constant that implements {@link QueryablePointerFactory}.\n */\nexport const QueryablePointer:QueryablePointerFactory = {\n\tPROTOTYPE: {\n\t\t$_queryableMetadata: void 0,\n\n\t\t$isQueried( this:QueryablePointer ):boolean {\n\t\t\treturn ! ! this.$_queryableMetadata;\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is QueryablePointer {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( QueryablePointer.PROTOTYPE, object );\n\t},\n\n\tdecorate<T extends BaseResolvablePointer>( object:T ):T & QueryablePointer {\n\t\tif( QueryablePointer.isDecorated( object ) ) return object;\n\n\t\tconst target:T & ResolvablePointer = ModelDecorator\n\t\t\t.decorateMultiple( object, ResolvablePointer );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( QueryablePointer.PROTOTYPE, target );\n\t},\n\n\n\tis( value:any ):value is QueryablePointer {\n\t\treturn ResolvablePointer.is( value )\n\t\t\t&& QueryablePointer.isDecorated( value )\n\t\t\t;\n\t},\n};\n"],"sourceRoot":"../../src"}