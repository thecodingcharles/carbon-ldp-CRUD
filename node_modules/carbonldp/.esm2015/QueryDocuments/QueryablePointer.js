import { ModelDecorator } from "../Model/ModelDecorator";
import { ResolvablePointer } from "../Repository/ResolvablePointer";
export const QueryablePointer = {
    PROTOTYPE: {
        $_queryableMetadata: void 0,
        $isQueried() {
            return !!this.$_queryableMetadata;
        },
    },
    isDecorated(object) {
        return ModelDecorator
            .hasPropertiesFrom(QueryablePointer.PROTOTYPE, object);
    },
    decorate(object) {
        if (QueryablePointer.isDecorated(object))
            return object;
        const target = ModelDecorator
            .decorateMultiple(object, ResolvablePointer);
        return ModelDecorator
            .definePropertiesFrom(QueryablePointer.PROTOTYPE, target);
    },
    is(value) {
        return ResolvablePointer.is(value)
            && QueryablePointer.isDecorated(value);
    },
};

//# sourceMappingURL=QueryablePointer.js.map
