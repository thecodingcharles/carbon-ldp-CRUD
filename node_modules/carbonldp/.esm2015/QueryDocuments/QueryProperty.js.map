{"version":3,"sources":["QueryDocuments/QueryProperty.ts"],"names":[],"mappings":"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","file":"QueryProperty.js","sourcesContent":["import { Path, PathBuilder } from \"sparqler/patterns\";\nimport {\n\tFilterToken,\n\tGraphToken,\n\tIRIToken,\n\tLiteralToken,\n\tOptionalToken,\n\tPathToken,\n\tPatternToken,\n\tPropertyToken,\n\tSubjectToken,\n\tValuesToken,\n\tVariableToken\n} from \"sparqler/tokens\";\n\nimport { IllegalActionError } from \"../Errors/IllegalActionError\";\n\nimport { DigestedObjectSchema } from \"../ObjectSchema/DigestedObjectSchema\";\nimport { DigestedObjectSchemaProperty } from \"../ObjectSchema/DigestedObjectSchemaProperty\";\nimport { ObjectSchemaDigester } from \"../ObjectSchema/ObjectSchemaDigester\";\n\nimport { C } from \"../Vocabularies/C\";\n\nimport { QueryablePropertyData } from \"./QueryablePropertyData\";\nimport { QueryContainer } from \"./QueryContainer\";\nimport { QueryPropertyData } from \"./QueryPropertyData\";\nimport { QueryPropertyType } from \"./QueryPropertyType\";\nimport { QuerySubPropertyData } from \"./QuerySubPropertyData\";\nimport { SubQueryPropertyDefinition } from \"./SubQueryPropertyDefinition\";\nimport { _getBestType, _getMatchingDefinition, _getRootPath } from \"./Utils\";\n\n\n/**\n * Class that represents a property to be query.\n */\nexport class QueryProperty implements QueryablePropertyData {\n\treadonly queryContainer:QueryContainer;\n\t/**\n\t * Parent property if the current property is a sub-property.\n\t */\n\treadonly parent?:QueryProperty;\n\n\t/**\n\t * Name of the query property.\n\t */\n\treadonly name:string;\n\t/**\n\t * Full path name of the property,\n\t * including the paths form the parents.\n\t */\n\treadonly fullName:string;\n\n\t/**\n\t * The variable that represents the property.\n\t */\n\tget variable():VariableToken {\n\t\treturn this.queryContainer\n\t\t\t.getVariable( this.fullName );\n\t}\n\n\t/**\n\t * The identifier that represents the property.\n\t * This value is one used in the final query.\n\t */\n\tget identifier():VariableToken | LiteralToken | IRIToken {\n\t\tif( this.values.length === 1 ) {\n\t\t\treturn this.values[ 0 ];\n\t\t}\n\n\t\treturn this.queryContainer\n\t\t\t.getVariable( this.fullName );\n\t}\n\n\treadonly definition:DigestedObjectSchemaProperty;\n\treadonly pathBuilderFn?:( pathBuilder:PathBuilder ) => Path;\n\n\tpropertyType?:QueryPropertyType;\n\toptional:boolean;\n\n\n\treadonly subProperties:Map<string, QueryProperty>;\n\n\n\treadonly values:(LiteralToken | IRIToken)[];\n\tprotected readonly _types:string[];\n\tprotected readonly _filters:string[];\n\n\tprotected _searchSchema:DigestedObjectSchema | undefined;\n\n\n\tconstructor( data:QueryPropertyData ) {\n\t\tthis.queryContainer = data.queryContainer;\n\t\tthis.parent = data.parent;\n\n\t\tthis.name = data.name;\n\t\tthis.fullName = data.parent\n\t\t\t? data.parent.fullName + \".\" + data.name\n\t\t\t: data.name;\n\n\t\tthis.definition = data.definition;\n\t\tthis.pathBuilderFn = data.pathBuilderFn;\n\n\t\tthis.propertyType = data.propertyType;\n\t\tthis.optional = data.optional === void 0\n\t\t\t? true\n\t\t\t: data.optional;\n\n\t\tthis.subProperties = new Map();\n\n\t\tthis.values = data.values ? data.values : [];\n\t\tthis._types = [];\n\t\tthis._filters = [];\n\t}\n\n\n\t// Sub-properties helpers\n\n\thasProperties():boolean {\n\t\treturn this.subProperties.size !== 0\n\t\t\t|| this._isComplete()\n\t\t\t;\n\t}\n\n\tgetProperty( path?:string, flags?:{ create:true, inherit?:false } ):QueryProperty | undefined {\n\t\tif( ! path ) return this;\n\n\t\tconst rootPath:string = _getRootPath( path );\n\t\tconst property:QueryProperty | undefined = this.subProperties.get( rootPath );\n\n\t\tif( ! property ) {\n\t\t\t// If immediate child and can be created in valid property\n\t\t\tif( rootPath === path && flags && flags.create && this._isComplete() ) {\n\t\t\t\tconst newProperty:QueryProperty = this.addProperty( rootPath, flags );\n\n\t\t\t\tif( this.propertyType === QueryPropertyType.FULL )\n\t\t\t\t\tnewProperty.setType( QueryPropertyType.ALL );\n\n\t\t\t\treturn newProperty;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst restPath:string = path.substr( rootPath.length + 1 );\n\t\treturn property.getProperty( restPath );\n\t}\n\n\taddProperty( propertyName:string, propertyDefinition:SubQueryPropertyDefinition ):QueryProperty {\n\t\tconst definition:DigestedObjectSchemaProperty = this\n\t\t\t.__getDefinition( propertyName, propertyDefinition );\n\n\t\treturn this._addSubProperty( propertyName, {\n\t\t\tdefinition,\n\t\t\tpathBuilderFn: propertyDefinition.path,\n\t\t\toptional: ! propertyDefinition.required,\n\t\t} );\n\t}\n\n\t_addSubProperty( propertyName:string, data:QuerySubPropertyData ):QueryProperty {\n\t\tconst property:QueryProperty = new QueryProperty( {\n\t\t\t...data,\n\t\t\tname: propertyName,\n\t\t\tqueryContainer: this.queryContainer,\n\t\t\tparent: this,\n\t\t} );\n\n\t\tthis.subProperties.set( propertyName, property );\n\n\t\treturn property;\n\t}\n\n\tprotected __getDefinition( propertyName:string, propertyDefinition:SubQueryPropertyDefinition ):DigestedObjectSchemaProperty {\n\t\tconst digestedDefinition:DigestedObjectSchemaProperty = this.queryContainer\n\t\t\t.digestProperty( propertyName, propertyDefinition );\n\n\t\tif( propertyDefinition.inherit === false ) return digestedDefinition;\n\n\t\tconst propertyURI:string | undefined = \"@id\" in propertyDefinition ? digestedDefinition.uri! : void 0;\n\t\tconst inheritDefinition:DigestedObjectSchemaProperty | undefined = this\n\t\t\t.__getInheritDefinition( propertyName, propertyURI );\n\n\t\tif( inheritDefinition ) {\n\t\t\tfor( const key in inheritDefinition ) {\n\t\t\t\tif( digestedDefinition[ key ] !== null && key !== \"uri\" ) continue;\n\t\t\t\tdigestedDefinition[ key ] = inheritDefinition[ key ];\n\t\t\t}\n\t\t}\n\n\t\treturn digestedDefinition;\n\t}\n\n\tprotected __getInheritDefinition( propertyName:string, propertyURI?:string ):DigestedObjectSchemaProperty | undefined {\n\t\tconst searchSchema:DigestedObjectSchema = this._getSearchSchema();\n\t\tconst localDefinition:DigestedObjectSchemaProperty | undefined =\n\t\t\t_getMatchingDefinition( searchSchema, searchSchema, propertyName, propertyURI );\n\n\t\tif( localDefinition ) return localDefinition;\n\n\t\tconst schemas:DigestedObjectSchema[] = this.queryContainer.context\n\t\t\t._getTypeObjectSchemas( this._types );\n\n\t\tfor( const targetSchema of schemas ) {\n\t\t\tconst definition:DigestedObjectSchemaProperty | undefined = _getMatchingDefinition(\n\t\t\t\tsearchSchema,\n\t\t\t\ttargetSchema,\n\t\t\t\tpropertyName,\n\t\t\t\tpropertyURI\n\t\t\t);\n\n\t\t\tif( definition ) return definition;\n\t\t}\n\t}\n\n\t_isComplete():boolean {\n\t\treturn this.propertyType === QueryPropertyType.ALL\n\t\t\t|| this.propertyType === QueryPropertyType.FULL\n\t\t\t;\n\t}\n\n\t_isPartial():boolean {\n\t\treturn this.propertyType === QueryPropertyType.PARTIAL\n\t\t\t|| this.propertyType === QueryPropertyType.ALL\n\t\t\t|| ! ! this.subProperties.size\n\t\t\t;\n\t}\n\n\t_isEmpty():boolean {\n\t\treturn this.propertyType === undefined\n\t\t\t|| this.propertyType === QueryPropertyType.EMPTY;\n\t}\n\n\n\t// Helpers for property specialization\n\n\tsetType( type:QueryPropertyType ):void {\n\t\tthis.propertyType = _getBestType( this.propertyType!, type );\n\t}\n\n\taddType( type:string ):void {\n\t\tconst schema:DigestedObjectSchema = this._getSearchSchema();\n\t\tconst iri:string = schema.resolveURI( type, { vocab: true } );\n\t\tthis._types.push( iri );\n\n\t\tif( ! this.queryContainer.context.hasObjectSchema( iri ) ) return;\n\n\t\tconst typedSchema:DigestedObjectSchema = this.queryContainer.context.getObjectSchema( iri );\n\t\tObjectSchemaDigester._combineSchemas( [ schema, typedSchema ] );\n\t}\n\n\taddValues( values:(LiteralToken | IRIToken)[] ):void {\n\t\tthis.values.push( ...values );\n\t}\n\n\taddFilter( constraint:string ):void {\n\t\tthis._filters.push( constraint );\n\t}\n\n\tsetObligatory( flags?:{ inheritParents:true } ):void {\n\t\tif( ! this.optional ) return;\n\n\t\tthis.optional = false;\n\n\t\tif( flags && flags.inheritParents && this.parent )\n\t\t\tthis.parent.setObligatory( flags );\n\t}\n\n\n\t// Tokens creation helpers\n\n\t_getVariable( name:string ):VariableToken {\n\t\treturn this.queryContainer\n\t\t\t.getVariable( `${ this.fullName }.${ name }` );\n\t}\n\n\tprotected __createIRIToken():IRIToken {\n\t\treturn this\n\t\t\t.queryContainer\n\t\t\t.compactIRI( this.definition.uri! );\n\t}\n\n\tprotected __createPathToken():PathToken | VariableToken {\n\t\tif( ! this.pathBuilderFn )\n\t\t\treturn this.__createIRIToken();\n\n\t\tconst pathBuilder:PathBuilder = PathBuilder\n\t\t\t.createFrom( this.queryContainer, {} );\n\n\t\treturn this.pathBuilderFn\n\t\t\t.call( void 0, pathBuilder )\n\t\t\t.getPath();\n\t}\n\n\t// Context helpers\n\n\tprotected _getContextVariable():VariableToken | IRIToken {\n\t\tif( this.propertyType === QueryPropertyType.FULL )\n\t\t\treturn this.__getSelfToken();\n\n\t\treturn this._getVariable( \"_graph\" );\n\t}\n\n\tprotected _getContextGraph():GraphToken {\n\t\treturn new GraphToken( this._getContextVariable() );\n\t}\n\n\n\t// Self description patterns\n\n\tgetSelfPattern():PatternToken | undefined {\n\t\tconst pattern:PatternToken | undefined = this.__createSelfPattern();\n\t\tif( ! pattern ) return;\n\n\t\tif( ! this.optional ) return pattern;\n\t\treturn new OptionalToken()\n\t\t\t.addPattern( pattern );\n\t}\n\n\tprotected __createSelfPattern():PatternToken | undefined {\n\t\tif( ! this.parent )\n\t\t\tthrow new IllegalActionError( \"Cannot create pattern without a parent.\" );\n\n\t\treturn this\n\t\t\t.__addPropertyTo( new SubjectToken( this.parent.identifier ) );\n\t}\n\n\tprotected __addPropertyTo( subject:SubjectToken ):SubjectToken {\n\t\treturn subject\n\t\t\t.addProperty( new PropertyToken( this.__createPathToken() )\n\t\t\t\t.addObject( this.identifier ) );\n\t}\n\n\n\t// Search patterns\n\n\t/**\n\t * Returns the patterns to be used in the query that specifies the property and its sub-properties.\n\t * If the property is optional the patterns will be wrapped in an optional SPARQL token.\n\t */\n\tgetSearchPatterns():PatternToken[] {\n\t\tconst patterns:PatternToken[] = this\n\t\t\t.__createSearchPatterns();\n\n\t\tif( ! this.optional ) return patterns;\n\t\treturn [ new OptionalToken()\n\t\t\t.addPattern( ...patterns ),\n\t\t];\n\t}\n\n\tprotected __createSearchPatterns():PatternToken[] {\n\t\tconst patterns:PatternToken[] = [];\n\n\t\tconst values:PatternToken | undefined = this.__createValuesPattern();\n\t\tif( values ) patterns.push( values );\n\n\t\t// If self is sub-property and not virtual, add inside graph\n\t\tconst selfTriple:PatternToken | undefined = this.__createSelfPattern();\n\t\tif( selfTriple ) {\n\t\t\tif( this.parent && ! this.pathBuilderFn ) {\n\t\t\t\tpatterns.push( this.parent._getContextGraph()\n\t\t\t\t\t.addPattern( selfTriple ) );\n\t\t\t} else {\n\t\t\t\tpatterns.push( selfTriple );\n\t\t\t}\n\t\t}\n\n\t\tswitch( this.propertyType ) {\n\t\t\tcase QueryPropertyType.EMPTY:\n\t\t\t\tpatterns.push( this.__createTypesSearchPatterns() );\n\t\t\t\tbreak;\n\n\t\t\tcase QueryPropertyType.PARTIAL:\n\t\t\t\tpatterns.push( ...this.__createPartialSearchPatterns() );\n\t\t\t\tbreak;\n\n\t\t\tcase QueryPropertyType.ALL:\n\t\t\t\tpatterns.push( this.__createSearchAllPattern() );\n\t\t\t\tpatterns.push( ...this.__createSubPropertiesPatterns() );\n\t\t\t\tbreak;\n\n\t\t\tcase QueryPropertyType.FULL:\n\t\t\t\tpatterns.push( this.__createSearchGraphPattern() );\n\t\t\t\tpatterns.push( ...this.__createSubPropertiesPatterns() );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconst selfTypeFilter:PatternToken | undefined = this.__createSelfTypeFilter();\n\t\t\t\tif( selfTypeFilter ) patterns.push( selfTypeFilter );\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif( this._filters.length ) {\n\t\t\tconst filters:FilterToken[] = this._filters\n\t\t\t\t.map( constraint => new FilterToken( constraint ) );\n\t\t\tpatterns.push( ...filters );\n\t\t}\n\n\t\treturn patterns;\n\t}\n\n\tprotected __createValuesPattern():ValuesToken | undefined {\n\t\tif( this.values.length <= 1 ) return;\n\n\t\tconst values:ValuesToken = new ValuesToken()\n\t\t\t.addVariables( this.variable );\n\n\t\tthis.values\n\t\t\t.forEach( value => values.addValues( value ) );\n\n\t\treturn values;\n\t}\n\n\tprotected __createSelfTypeFilter():PatternToken | undefined {\n\t\tconst identifier:VariableToken | IRIToken | LiteralToken = this.identifier;\n\n\t\tif( this.definition.literal ) {\n\t\t\tconst literalToken:IRIToken = this.queryContainer\n\t\t\t\t.compactIRI( this.definition.literalType! );\n\n\t\t\tif( identifier.token === \"variable\" )\n\t\t\t\treturn new FilterToken( `datatype( ${ identifier } ) = ${ literalToken }` );\n\t\t}\n\n\t\tif( this.definition.pointerType !== null && identifier.token === \"variable\" )\n\t\t\treturn new FilterToken( `! isLiteral( ${ identifier } )` );\n\t}\n\n\tprotected __createPartialSearchPatterns():PatternToken[] {\n\t\treturn [\n\t\t\tthis.__createTypesSearchPatterns(),\n\t\t\t...this.__createSubPropertiesPatterns(),\n\t\t];\n\t}\n\n\tprotected __createSubPropertiesPatterns():PatternToken[] {\n\t\tconst patterns:PatternToken[] = [];\n\n\t\tthis.subProperties.forEach( subProperty => {\n\t\t\tpatterns.push( ...subProperty.getSearchPatterns() );\n\t\t} );\n\n\t\treturn patterns;\n\t}\n\n\tprotected __createTypesSearchPatterns():PatternToken {\n\t\tconst types:SubjectToken = this.__createTypesPattern();\n\n\t\tconst pattern:PatternToken = this.propertyType === QueryPropertyType.EMPTY\n\t\t\t? types\n\t\t\t: this._getContextGraph()\n\t\t\t\t.addPattern( types );\n\n\t\t// Return optional types\n\t\tif( ! this._types.length )\n\t\t\treturn new OptionalToken()\n\t\t\t\t.addPattern( pattern );\n\n\t\t// Add types to the same subject\n\t\tthis.__addTypesTo( types );\n\n\t\treturn pattern;\n\t}\n\n\tprotected __addTypesTo( pattern:SubjectToken ):void {\n\t\t// Parse string types\n\t\tconst types:IRIToken[] = this\n\t\t\t.__createTypesTokens();\n\n\t\tlet aProperty:PropertyToken | undefined = pattern.properties\n\t\t\t.find( _ => _.verb === \"a\" );\n\n\t\t// Create a predicate if not exists\n\t\tif( ! aProperty ) {\n\t\t\taProperty = new PropertyToken( \"a\" );\n\t\t\tpattern.addProperty( aProperty );\n\t\t}\n\n\t\taProperty.objects\n\t\t\t.unshift( ...types ); // Add them as first matches\n\t}\n\n\tprotected __createTypesTokens():IRIToken[] {\n\t\treturn this._types\n\t\t\t.map( type => this.queryContainer.compactIRI( type ) );\n\t}\n\n\tprotected __createSearchAllPattern():GraphToken {\n\t\tconst pattern:SubjectToken = this.__createAllPattern();\n\n\t\tif( this._types.length )\n\t\t\tthis.__addTypesTo( pattern );\n\n\t\treturn this\n\t\t\t._getContextGraph()\n\t\t\t.addPattern( pattern );\n\t}\n\n\tprotected __createSearchGraphPattern():GraphToken {\n\t\tconst graph:GraphToken = new GraphToken( this.__getSelfToken() );\n\n\t\tif( this._types.length ) {\n\t\t\tconst pattern:SubjectToken = new SubjectToken( this.__getSelfToken() );\n\t\t\tthis.__addTypesTo( pattern );\n\n\t\t\tgraph.addPattern( pattern );\n\t\t}\n\n\t\treturn graph\n\t\t\t.addPattern( this.__createGraphSubPattern() )\n\t\t\t;\n\t}\n\n\n\t// Values that filter the query\n\n\tprotected __getValuedPatterns():PatternToken[] | undefined {\n\t\tif( this.optional ) return;\n\n\t\tconst selfSubject:SubjectToken = new SubjectToken( this.identifier );\n\t\tconst patterns:PatternToken[] = [ selfSubject ];\n\n\t\tconst valuesPattern:PatternToken | undefined = this.__createValuesPattern();\n\t\tif( valuesPattern ) patterns.push( valuesPattern );\n\n\t\tif( this._types.length ) {\n\t\t\tconst typesTokens:IRIToken[] = this\n\t\t\t\t.__createTypesTokens();\n\n\t\t\tselfSubject\n\t\t\t\t.addProperty( new PropertyToken( \"a\" )\n\t\t\t\t\t.addObject( ...typesTokens )\n\t\t\t\t);\n\t\t}\n\n\t\t// Create sub-properties patterns\n\t\tthis.subProperties.forEach( subProperty => {\n\t\t\tconst subPatterns:PatternToken[] | undefined = subProperty\n\t\t\t\t.__getValuedPatterns();\n\n\t\t\tif( subPatterns ) {\n\t\t\t\tsubProperty.__addPropertyTo( selfSubject );\n\t\t\t\tpatterns.push( ...subPatterns );\n\t\t\t}\n\t\t} );\n\n\t\t// Exclude self if no predicated added\n\t\tif( ! selfSubject.properties.length )\n\t\t\treturn patterns.slice( 1 );\n\n\t\treturn patterns;\n\t}\n\n\n\t// Construct patterns\n\n\t/**\n\t * Returns the patterns to be used in the construct patterns that specifies the property with its sub-properties.\n\t */\n\tgetConstructPatterns():SubjectToken[] {\n\t\tconst patterns:SubjectToken[] = [];\n\n\t\tconst selfPattern:SubjectToken | undefined = this.__createSelfConstructPattern();\n\t\tif( selfPattern ) patterns.push( selfPattern );\n\n\t\tthis.subProperties.forEach( property => {\n\t\t\tconst subPatterns:SubjectToken[] = property\n\t\t\t\t.getConstructPatterns();\n\n\t\t\tpatterns.push( ...subPatterns );\n\t\t} );\n\n\t\treturn patterns;\n\t}\n\n\tprotected __createSelfConstructPattern():SubjectToken | undefined {\n\t\tswitch( this.propertyType ) {\n\t\t\tcase QueryPropertyType.EMPTY:\n\t\t\t\treturn this.__createTypesPattern();\n\n\t\t\tcase QueryPropertyType.PARTIAL:\n\t\t\t\treturn this.__createPartialConstructPattern();\n\n\t\t\tcase QueryPropertyType.ALL:\n\t\t\tcase QueryPropertyType.FULL:\n\t\t\t\treturn this.__createCompleteConstructPattern()\n\t\t\t\t\t.addProperty( new PropertyToken( this.queryContainer.compactIRI( C.document ) )\n\t\t\t\t\t\t.addObject( this._getContextVariable() )\n\t\t\t\t\t);\n\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tprotected __createCompleteConstructPattern():SubjectToken {\n\t\tswitch( this.propertyType ) {\n\t\t\tcase QueryPropertyType.ALL:\n\t\t\t\treturn this.__createAllPattern();\n\n\t\t\tcase QueryPropertyType.FULL:\n\t\t\t\treturn this.__createGraphSubPattern();\n\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalActionError( \"Invalid property type\" );\n\t\t}\n\t}\n\n\tprotected __createPartialConstructPattern():SubjectToken {\n\t\tconst subject:SubjectToken = this.__createTypesPattern()\n\t\t\t.addProperty( new PropertyToken( this.queryContainer.compactIRI( C.document ) )\n\t\t\t\t.addObject( this._getContextVariable() )\n\t\t\t);\n\n\t\tthis.subProperties.forEach( subProperty => {\n\t\t\tsubject.addProperty( new PropertyToken( subProperty.__createIRIToken() )\n\t\t\t\t.addObject( subProperty.identifier )\n\t\t\t);\n\t\t} );\n\n\t\treturn subject;\n\t}\n\n\n\t// Shared Construct & Search patterns\n\n\tprotected __createTypesPattern():SubjectToken {\n\t\treturn new SubjectToken( this.identifier )\n\t\t\t.addProperty( new PropertyToken( \"a\" )\n\t\t\t\t.addObject( this._getVariable( \"types\" ) )\n\t\t\t);\n\t}\n\n\tprotected __createAllPattern():SubjectToken {\n\t\treturn new SubjectToken( this.__getSelfToken() )\n\t\t\t.addProperty( new PropertyToken( this._getVariable( \"_predicate\" ) )\n\t\t\t\t.addObject( this._getVariable( \"_object\" ) )\n\t\t\t);\n\t}\n\n\tprotected __createGraphSubPattern():SubjectToken {\n\t\treturn new SubjectToken( this._getVariable( \"_subject\" ) )\n\t\t\t.addProperty( new PropertyToken( this._getVariable( \"_predicate\" ) )\n\t\t\t\t.addObject( this._getVariable( \"_object\" ) )\n\t\t\t);\n\t}\n\n\n\tprotected __getSelfToken():VariableToken | IRIToken {\n\t\tconst identifier:VariableToken | LiteralToken | IRIToken = this.identifier;\n\n\t\tif( identifier.token === \"literal\" )\n\t\t\tthrow new IllegalActionError( `Property is not a resource.` );\n\n\t\treturn identifier;\n\t}\n\n\n\t// Helper for property result compaction\n\n\t/**\n\t * Returns the specific schema for the property,\n\t * combining with the associated schema of the object provided if isn't a basic partial property.\n\t * @param object The associated resource of the property.\n\t */\n\tgetSchemaFor( object:object ):DigestedObjectSchema {\n\t\tswitch( this.propertyType ) {\n\t\t\tcase void 0:\n\t\t\t\treturn new DigestedObjectSchema();\n\n\t\t\tcase QueryPropertyType.EMPTY:\n\t\t\tcase QueryPropertyType.PARTIAL:\n\t\t\t\treturn this.__createSchema();\n\n\t\t\tdefault:\n\t\t\t\treturn ObjectSchemaDigester._combineSchemas( [\n\t\t\t\t\tthis.queryContainer.context.registry.getSchemaFor( object ),\n\t\t\t\t\tthis.__createSchema(),\n\t\t\t\t] );\n\t\t}\n\t}\n\n\tprotected __createSchema():DigestedObjectSchema {\n\t\tconst schema:DigestedObjectSchema = new DigestedObjectSchema();\n\n\t\tthis.subProperties.forEach( property => {\n\t\t\tschema.properties.set( property.name, property.definition );\n\t\t} );\n\n\t\treturn schema;\n\t}\n\n\n\t// Helper for schema related actions\n\tprotected _getSearchSchema():DigestedObjectSchema {\n\t\tif( this._searchSchema ) return this._searchSchema;\n\t\treturn this._searchSchema = this.queryContainer.getGeneralSchema();\n\t}\n\n}\n"],"sourceRoot":"../../src"}