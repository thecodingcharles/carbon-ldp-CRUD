{"version":3,"sources":["QueryDocuments/QuerySchemaProperty.ts"],"names":[],"mappings":"","file":"QuerySchemaProperty.js","sourcesContent":["import { Path, PathBuilder } from \"sparqler/patterns\";\n\nimport { SubQueryDocumentsBuilder } from \"./QueryDocumentBuilder\";\n\n\n/**\n * Interface that describes an property to retrieve in a query creation.\n */\nexport interface QuerySchemaProperty {\n\t/**\n\t * The URI that the actual property has in the platform.\n\t */\n\t\"@id\"?:string;\n\t/**\n\t * The type of the property value.\n\t *\n\t * If `@id` is used, it will represent a Pointer.\n\t *\n\t * For an literal it will generally expect the absolute XSD type URI, but a relative one can also be assigned.\n\t * e.g. `string` will be interpreted as `http://www.w3.org/2001/XMLSchema#string`.\n\t */\n\t\"@type\"?:\"@id\" | string;\n\t/**\n\t * The only specific language of a string primitive to be retrieved.\n\t */\n\t\"@language\"?:string;\n\t/**\n\t * The container type the property will be interpreted to have.\n\t * - `@set`: An unordered array of element\n\t * - `@list`: An ordered array of elements\n\t * - `@language`: An object map with the language as key and the string content as the value\n\t */\n\t\"@container\"?:\"@set\" | \"@list\" | \"@language\";\n\t/**\n\t * Flag that indicates if the property is required or optional.\n\t */\n\trequired?:boolean;\n\t/**\n\t * Function to build a sub-query to specify sub-properties or when retrieving multiple resources to filter the resources.\n\t * @param queryBuilder The builder from where to construct the sub-query.\n\t */\n\tquery?:( queryBuilder:SubQueryDocumentsBuilder ) => SubQueryDocumentsBuilder;\n\t/**\n\t * Function to build a path to specify an property that may point to data from another document.\n\t * @param pathBuilder The builder from where to construct the path.\n\t */\n\tpath?:( pathBuilder:PathBuilder ) => Path;\n}\n"],"sourceRoot":"../../src"}