{"version":3,"sources":["AccessPoint/AccessPoint.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAIhD,OAAO,EAAE,oBAAoB,EAA+B,MAAM,wBAAwB,CAAC;AAuD3F,MAAM,CAAC,MAAM,WAAW,GAAsB;IAC7C,IAAI,EAAE,oBAAoB,CAAC,IAAI;IAE/B,EAAE,EAAE,CAAE,KAAK,EAAwB,EAAE,CACpC,oBAAoB,CAAC,EAAE,CAAE,KAAK,CAAE;WAC7B,QAAQ,CAAC,EAAE,CAAE,KAAK,CAAE;IAGxB,MAAM,EAAE,oBAAoB,CAAC,MAAM;IACnC,UAAU,EAAE,oBAAoB,CAAC,UAAU;CAC3C,CAAC","file":"AccessPoint.js","sourcesContent":["import { Document } from \"../Document/Document\";\n\nimport { Pointer } from \"../Pointer/Pointer\";\n\nimport { TransientAccessPoint, TransientAccessPointFactory } from \"./TransientAccessPoint\";\n\n\n/**\n * Model that represents a `c:AccessPoint`.\n */\nexport interface AccessPoint extends Document {\n\t/**\n\t * The resource the access point belongs to.\n\t */\n\tmembershipResource?:Document;\n\t/**\n\t * The relation the access point manages.\n\t */\n\thasMemberRelation?:Pointer;\n\t/**\n\t * The optional inverted relation the access point also manages.\n\t */\n\tisMemberOfRelation?:Pointer;\n\t/**\n\t * The inserted content relation the access point have.\n\t */\n\tinsertedContentRelation?:Pointer;\n}\n\n/**\n * Factory, decorator and utils of a {@link AccessPoint} object.\n */\nexport interface AccessPointFactory {\n\t/**\n\t * @see {@link TransientAccessPointFactory.TYPE}\n\t */\n\tTYPE:TransientAccessPointFactory[ \"TYPE\" ];\n\n\t/**\n\t * @see {@link TransientAccessPointFactory.create}\n\t */\n\tcreate:TransientAccessPointFactory[ \"create\" ];\n\n\t/**\n\t * @see {@link TransientAccessPoint.createFrom}\n\t */\n\tcreateFrom:TransientAccessPointFactory[ \"createFrom\" ];\n\n\t/**\n\t * Returns true if the value provided is considered an {@link AccessPoint}.\n\t *\n\t * @param value Element to be checked.\n\t */\n\tis( value:any ):value is AccessPoint;\n}\n\n/**\n * Constant that implements the {@link AccessPointFactory} interface.\n */\nexport const AccessPoint:AccessPointFactory = {\n\tTYPE: TransientAccessPoint.TYPE,\n\n\tis: ( value ):value is AccessPoint =>\n\t\tTransientAccessPoint.is( value )\n\t\t&& Document.is( value )\n\t,\n\n\tcreate: TransientAccessPoint.create,\n\tcreateFrom: TransientAccessPoint.createFrom,\n};\n"],"sourceRoot":"../../src"}