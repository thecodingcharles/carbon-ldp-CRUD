{"version":3,"sources":["LDPatch/DeltaCreator.ts"],"names":[],"mappings":"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","file":"DeltaCreator.js","sourcesContent":["import { isBNodeLabel } from \"sparqler/iri\";\nimport {\n\tBlankNodeToken,\n\tCollectionToken,\n\tIRIRefToken,\n\tIRIToken,\n\tLanguageToken,\n\tLiteralToken,\n\tObjectToken,\n\tPathToken,\n\tPrefixedNameToken,\n\tPropertyToken,\n\tRDFLiteralToken,\n\tSubjectToken,\n} from \"sparqler/tokens\";\n\nimport { Context } from \"../Context/Context\";\n\nimport { _guessXSDType } from \"../JSONLD/Utils\";\n\nimport { ContainerType } from \"../ObjectSchema/ContainerType\";\nimport { DigestedObjectSchema } from \"../ObjectSchema/DigestedObjectSchema\";\nimport { DigestedObjectSchemaProperty } from \"../ObjectSchema/DigestedObjectSchemaProperty\";\nimport { ObjectSchemaDigester } from \"../ObjectSchema/ObjectSchemaDigester\";\nimport { PointerType } from \"../ObjectSchema/PointerType\";\n\nimport { Pointer } from \"../Pointer/Pointer\";\n\nimport { QueryablePointer } from \"../QueryDocuments/QueryablePointer\";\nimport { QueryableProperty } from \"../QueryDocuments/QueryableProperty\";\n\nimport { Resource } from \"../Resource/Resource\";\n\nimport { _isExistingValue, isString } from \"../Utils\";\n\nimport { XSD } from \"../Vocabularies/XSD\";\n\nimport { AddToken, DeleteToken, LDPatchToken, PrefixToken, SliceToken, UpdateListToken } from \"./Tokens\";\n\n\ninterface ArrayDelta {\n\ttoAdd:ObjectToken[];\n\ttoDelete:ObjectToken[];\n}\n\ninterface UpdateDelta {\n\tslice:[ number | undefined, number | undefined ];\n\tobjects:ObjectToken[];\n}\n\nconst typesDefinition:DigestedObjectSchemaProperty = new DigestedObjectSchemaProperty();\ntypesDefinition.literal = false;\ntypesDefinition.pointerType = PointerType.ID;\ntypesDefinition.containerType = ContainerType.SET;\n\n\ntype TargetResource = Partial<Pick<Resource, \"types\"> & Pick<QueryablePointer, \"$_queryableMetadata\">>;\n\n\n/**\n * Creates a LD Patch delta for the resources provided.\n */\nexport class DeltaCreator {\n\n\tprivate prefixesMap:Map<string, PrefixToken>;\n\tprivate context:Context;\n\n\tprivate readonly addToken:AddToken;\n\tprivate readonly deleteToken:DeleteToken;\n\tprivate readonly updateLists:UpdateListToken[];\n\n\t/**\n\t * Creates the instant with the provided context as the addition data source.\n\t * @param context The context of the resources to create its LD Patch delta.\n\t */\n\tconstructor( context:Context ) {\n\t\tthis.prefixesMap = new Map();\n\t\tthis.context = context;\n\n\t\tthis.addToken = new AddToken();\n\t\tthis.deleteToken = new DeleteToken();\n\t\tthis.updateLists = [];\n\t}\n\n\t/**\n\t * Returns the LD Patch string of the resources set in {@link DeltaCreator.addResource()}.\n\t */\n\tgetPatch():string {\n\t\tconst patch:LDPatchToken = new LDPatchToken();\n\n\t\tthis.prefixesMap.forEach( prefix => patch.prologues.push( prefix ) );\n\n\t\tpatch.statements.push( ...this.updateLists );\n\t\tif( this.addToken.triples.length ) patch.statements.push( this.addToken );\n\t\tif( this.deleteToken.triples.length ) patch.statements.push( this.deleteToken );\n\n\t\treturn `${patch}`;\n\t}\n\n\t/**\n\t * Add the resources states ({@param previousResource} and {@param currentResource}) from where to create the delta.\n\t * @param id The URI of the resource been added.\n\t * @param previousResource The previous state of the resource to compare for its delta.\n\t * @param currentResource The current state of the resource to compare for its delta.\n\t */\n\taddResource( id:string, previousResource:object, currentResource:object ):void {\n\t\tconst schema:DigestedObjectSchema = this.__getSchema( id, previousResource, currentResource );\n\n\t\tconst resource:IRIToken | BlankNodeToken = isBNodeLabel( id ) ?\n\t\t\tnew BlankNodeToken( id ) : this.__compactIRI( schema, id );\n\n\t\tconst updateLists:UpdateListToken[] = [];\n\t\tconst addTriples:SubjectToken = new SubjectToken( resource );\n\t\tconst deleteTriples:SubjectToken = new SubjectToken( resource );\n\n\t\tnew Set( [\n\t\t\t\"types\",\n\t\t\t...Object.keys( previousResource ),\n\t\t\t...Object.keys( currentResource ),\n\t\t] ).forEach( propertyName => {\n\t\t\tif( propertyName === \"$id\" ) return;\n\n\t\t\tconst predicateURI:IRIToken | \"a\" = propertyName === \"types\" ?\n\t\t\t\t\"a\" : this._getPropertyIRI( schema, propertyName );\n\n\t\t\tconst definition:DigestedObjectSchemaProperty | undefined = predicateURI === \"a\" ?\n\t\t\t\ttypesDefinition : schema.getProperty( propertyName );\n\n\t\t\tconst oldValue:any = previousResource[ propertyName ];\n\t\t\tconst newValue:any = currentResource[ propertyName ];\n\n\t\t\tif( definition && definition.containerType === ContainerType.LIST && _isExistingValue( oldValue ) ) {\n\t\t\t\tconst listUpdates:UpdateDelta[] = [];\n\n\t\t\t\tif( ! _isExistingValue( newValue ) ) {\n\t\t\t\t\tdeleteTriples.addProperty( new PropertyToken( predicateURI ).addObject( new CollectionToken() ) );\n\t\t\t\t\tlistUpdates.push( { slice: [ 0, void 0 ], objects: [] } );\n\n\t\t\t\t} else {\n\t\t\t\t\tdefinition.containerType = ContainerType.SET;\n\n\t\t\t\t\tlistUpdates.push( ...__getListDelta(\n\t\t\t\t\t\tthis.__getObjects( oldValue, schema, definition ),\n\t\t\t\t\t\tthis.__getObjects( newValue, schema, definition )\n\t\t\t\t\t) );\n\t\t\t\t}\n\n\t\t\t\tif( ! listUpdates.length ) return;\n\n\t\t\t\tthis.__addPrefixFrom( predicateURI, schema );\n\t\t\t\tlistUpdates.forEach( updateDelta => {\n\t\t\t\t\tconst collection:CollectionToken = new CollectionToken();\n\n\t\t\t\t\tupdateDelta.objects.forEach( object => {\n\t\t\t\t\t\tcollection.addObject( object );\n\t\t\t\t\t\tthis.__addPrefixFrom( object, schema );\n\t\t\t\t\t} );\n\n\t\t\t\t\tupdateLists.push( new UpdateListToken(\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\tpredicateURI as IRIToken,\n\t\t\t\t\t\tupdateDelta.objects.length ?\n\t\t\t\t\t\t\tnew SliceToken( updateDelta.slice[ 0 ], updateDelta.slice[ 0 ] ) :\n\t\t\t\t\t\t\tnew SliceToken( ...updateDelta.slice ),\n\t\t\t\t\t\tcollection\n\t\t\t\t\t) );\n\t\t\t\t} );\n\n\t\t\t} else {\n\t\t\t\tconst oldObjects:ObjectToken[] = this.__getObjects( oldValue, schema, definition );\n\t\t\t\tconst newObjects:ObjectToken[] = this.__getObjects( newValue, schema, definition );\n\n\t\t\t\tconst setDelta:ArrayDelta = __getArrayDelta( oldObjects, newObjects );\n\n\t\t\t\tconst addValues:( objects:ObjectToken[], triple:SubjectToken ) => void = ( objects, triple ) => {\n\t\t\t\t\tif( ! objects.length ) return;\n\n\t\t\t\t\tconst property:PropertyToken = new PropertyToken( predicateURI );\n\t\t\t\t\tobjects.forEach( object => {\n\t\t\t\t\t\tproperty.addObject( object );\n\t\t\t\t\t\tthis.__addPrefixFrom( object, schema );\n\t\t\t\t\t} );\n\n\t\t\t\t\ttriple.addProperty( property );\n\t\t\t\t};\n\n\t\t\t\taddValues( setDelta.toAdd, addTriples );\n\t\t\t\taddValues( setDelta.toDelete, deleteTriples );\n\t\t\t}\n\t\t} );\n\n\t\tthis.updateLists.push( ...updateLists );\n\t\tupdateLists.forEach( x => this.__addPrefixFrom( x.predicate, schema ) );\n\n\t\tif( addTriples.properties.length ) this.addToken.triples.push( addTriples );\n\t\taddTriples.properties.forEach( x => this.__addPrefixFrom( x.verb, schema ) );\n\n\t\tif( deleteTriples.properties.length ) this.deleteToken.triples.push( deleteTriples );\n\t\tdeleteTriples.properties.forEach( x => this.__addPrefixFrom( x.verb, schema ) );\n\n\t\tthis.__addPrefixFrom( resource, schema );\n\t}\n\n\tprivate __getSchema( $id:string, previousResource:TargetResource, currentResource:TargetResource ):DigestedObjectSchema {\n\t\tconst typesSet:Set<string> = new Set();\n\n\t\tif( \"types\" in previousResource ) previousResource\n\t\t\t.types!.forEach( typesSet.add, typesSet );\n\t\tif( \"types\" in currentResource ) currentResource\n\t\t\t.types!.forEach( typesSet.add, typesSet );\n\n\n\t\tconst mergedResource:object = { $id, types: Array.from( typesSet ) };\n\t\tconst baseSchema:DigestedObjectSchema = this.context.registry\n\t\t\t.getSchemaFor( mergedResource );\n\n\t\tconst queryableProperty:QueryableProperty | undefined = previousResource.$_queryableMetadata || previousResource.$_queryableMetadata;\n\t\tif( ! queryableProperty ) return baseSchema;\n\n\t\treturn ObjectSchemaDigester._combineSchemas( [\n\t\t\tbaseSchema,\n\t\t\tqueryableProperty.getSchema(),\n\t\t] );\n\t}\n\n\tprivate _getPropertyIRI( schema:DigestedObjectSchema, propertyName:string ):IRIToken {\n\t\tconst propertyDefinition:DigestedObjectSchemaProperty | undefined = schema.properties.get( propertyName );\n\t\tconst uri:string = propertyDefinition && propertyDefinition.uri ?\n\t\t\tpropertyDefinition.uri :\n\t\t\tpropertyName;\n\n\t\treturn this.__compactIRI( schema, uri );\n\t}\n\n\tprivate __getObjects( value:any, schema:DigestedObjectSchema, definition?:DigestedObjectSchemaProperty ):ObjectToken[] {\n\t\tconst values:any[] = (Array.isArray( value ) ?\n\t\t\t\t! definition || definition.containerType !== null ? value : value.slice( 0, 1 ) :\n\t\t\t\t[ value ]\n\t\t).filter( _isExistingValue );\n\n\t\tif( definition && definition.containerType === ContainerType.LIST ) {\n\t\t\tif( ! _isExistingValue( value ) ) return [];\n\n\t\t\tconst collection:CollectionToken = new CollectionToken();\n\t\t\tcollection.objects.push( ...this.__expandValues( values, schema, definition ) );\n\n\t\t\treturn [ collection ];\n\t\t}\n\n\t\tif( definition && definition.containerType === ContainerType.LANGUAGE ) {\n\t\t\treturn this.__expandLanguageMap( values, schema );\n\t\t}\n\n\t\treturn this.__expandValues( values, schema, definition );\n\t}\n\n\tprivate __expandValues( values:any[], schema:DigestedObjectSchema, definition?:DigestedObjectSchemaProperty ):ObjectToken[] {\n\t\tconst areDefinedLiteral:boolean | null = definition && definition.literal !== null ? definition.literal : null;\n\n\t\treturn values\n\t\t\t.map( value => {\n\t\t\t\tconst isLiteral:boolean = areDefinedLiteral !== null ? areDefinedLiteral : ! Pointer.is( value );\n\n\t\t\t\tif( isLiteral ) return this.__expandLiteral( value, schema, definition );\n\t\t\t\treturn this.__expandPointer( value, schema );\n\t\t\t} )\n\t\t\t.filter( _isExistingValue );\n\t}\n\n\tprivate __expandLanguageMap( values:any[], schema:DigestedObjectSchema ):ObjectToken[] {\n\t\tif( ! values.length ) return [];\n\t\tconst languageMap:object = values[ 0 ];\n\n\t\treturn Object\n\t\t\t.keys( languageMap )\n\t\t\t.map( key => {\n\t\t\t\tconst value:any = languageMap[ key ];\n\n\t\t\t\tconst tempDefinition:DigestedObjectSchemaProperty = new DigestedObjectSchemaProperty();\n\t\t\t\ttempDefinition.language = key;\n\t\t\t\ttempDefinition.literalType = XSD.string;\n\n\t\t\t\treturn this.__expandLiteral( value, schema, tempDefinition );\n\t\t\t} )\n\t\t\t.filter( _isExistingValue );\n\t}\n\n\tprivate __expandPointer( value:any, schema:DigestedObjectSchema ):IRIToken | BlankNodeToken | null {\n\t\tconst id:string = Pointer.is( value ) ? value.$id : value;\n\t\tif( ! isString( id ) ) return null;\n\n\t\treturn isBNodeLabel( id ) ?\n\t\t\tnew BlankNodeToken( id ) :\n\t\t\tthis.__compactIRI( schema, id );\n\t}\n\n\tprivate __expandLiteral( value:any, schema:DigestedObjectSchema, definition?:DigestedObjectSchemaProperty ):LiteralToken | null {\n\t\tconst type:string | null = definition && definition.literalType ?\n\t\t\tdefinition.literalType :\n\t\t\t_guessXSDType( value );\n\n\t\tif( type === null || ! this.context.jsonldConverter.literalSerializers.has( type ) ) return null;\n\n\t\tvalue = this.context.jsonldConverter.literalSerializers.get( type )!.serialize( value );\n\t\tif( type !== XSD.string )\n\t\t\treturn new RDFLiteralToken( value, this.__compactIRI( schema, type ) );\n\n\t\tif( definition && typeof definition.language === \"string\" )\n\t\t\treturn new RDFLiteralToken( value, new LanguageToken( definition.language ) );\n\n\t\treturn new LiteralToken( value );\n\t}\n\n\tprivate __compactIRI( schema:DigestedObjectSchema, iri:string ):IRIToken {\n\t\tiri = schema.resolveURI( iri, { vocab: true } );\n\n\t\tconst matchPrefix:[ string, string ] | undefined = Array.from( schema.prefixes.entries() )\n\t\t\t.find( ( [ , prefixURI ] ) => iri.startsWith( prefixURI ) );\n\n\t\tif( ! matchPrefix ) return new IRIRefToken( iri );\n\n\t\treturn new PrefixedNameToken( matchPrefix[ 0 ], iri.substr( matchPrefix[ 1 ].length ) );\n\t}\n\n\tprivate __addPrefixFrom( object:ObjectToken | PathToken, schema:DigestedObjectSchema ):void {\n\t\tif( object === \"a\" ) return;\n\n\t\tif( \"objects\" in object )\n\t\t\treturn object.objects.forEach( collectionObject => {\n\t\t\t\tthis.__addPrefixFrom( collectionObject, schema );\n\t\t\t} );\n\n\t\tif( \"type\" in object )\n\t\t\treturn this.__addPrefixFrom( object.type!, schema );\n\n\t\tif( object.token !== \"prefixedName\" ) return;\n\n\t\tconst namespace:string = object.namespace;\n\t\tif( this.prefixesMap.has( namespace ) ) return;\n\n\t\tconst iri:string = schema.prefixes.get( namespace )!;\n\t\tthis.prefixesMap.set( namespace, new PrefixToken( namespace, new IRIRefToken( iri ) ) );\n\t}\n\n}\n\nfunction __getArrayDelta( oldValues:ObjectToken[], newValues:ObjectToken[] ):ArrayDelta {\n\tconst objectMapper:( object:ObjectToken ) => [ string, ObjectToken ] = object => [ `${object}`, object ];\n\tconst toAdd:Map<string, ObjectToken> = new Map( newValues.map( objectMapper ) );\n\tconst toDelete:Map<string, ObjectToken> = new Map( oldValues.map( objectMapper ) );\n\n\ttoAdd.forEach( ( value, identifier ) => {\n\t\tif( ! toDelete.has( identifier ) ) return;\n\n\t\ttoDelete.delete( identifier );\n\t\ttoAdd.delete( identifier );\n\t} );\n\n\treturn {\n\t\ttoAdd: Array.from( toAdd.values() ),\n\t\ttoDelete: Array.from( toDelete.values() ),\n\t};\n}\n\nfunction __getListDelta( oldValues:ObjectToken[], newValues:ObjectToken[] ):UpdateDelta[] {\n\tinterface Node {\n\t\tidentifier:string;\n\t\tobject:ObjectToken;\n\t\tindex:number;\n\t}\n\n\tconst nodeMapper:( object:ObjectToken, index:number ) => Node = ( object, index ) => ({\n\t\tidentifier: `${object}`,\n\t\tobject,\n\t\tindex,\n\t});\n\tconst oldPositions:Node[] = oldValues.map( nodeMapper );\n\tconst newPositions:Node[] = newValues.map( nodeMapper );\n\n\tconst addsSet:Set<Node> = new Set( newPositions );\n\tconst deletes:Node[] = [];\n\n\tlet offset:number = 0;\n\tlet remnants:Node[] = newPositions;\n\n\toldPositions.forEach( oldNode => {\n\t\tconst currentIndex:number = remnants.findIndex( newNode => newNode.identifier === oldNode.identifier );\n\n\t\tif( currentIndex === - 1 ) {\n\t\t\toldNode.index -= offset ++;\n\t\t\tdeletes.push( oldNode );\n\t\t} else {\n\t\t\taddsSet.delete( remnants[ currentIndex ] );\n\t\t\tremnants = remnants.slice( currentIndex + 1 );\n\t\t}\n\t} );\n\n\tconst updates:UpdateDelta[] = [];\n\n\tlet last:UpdateDelta | undefined;\n\tdeletes.forEach( node => {\n\t\tif( last && last.slice[ 0 ] === node.index ) {\n\t\t\tlast.slice = [ last.slice[ 0 ], last.slice[ 1 ]! + 1 ];\n\t\t\treturn;\n\t\t}\n\n\t\tupdates.push( last = {\n\t\t\tslice: [ node.index, node.index + 1 ],\n\t\t\tobjects: [],\n\t\t} );\n\t} );\n\n\tlast = void 0;\n\taddsSet.forEach( node => {\n\t\tif( last && last.slice[ 1 ] === node.index ) {\n\t\t\tlast.slice = [ last.slice[ 0 ], node.index + 1 ];\n\t\t\tlast.objects.push( node.object );\n\t\t\treturn;\n\t\t}\n\n\t\tupdates.push( last = {\n\t\t\tslice: [ node.index, node.index + 1 ],\n\t\t\tobjects: [ node.object ],\n\t\t} );\n\t} );\n\n\treturn updates;\n}\n"],"sourceRoot":"../../src"}