{"version":3,"sources":["Model/ModelSchema.ts"],"names":[],"mappings":"AAmBA,MAAM,CAAC,MAAM,WAAW,GAMpB;IACH,EAAE,CAAE,MAAa;QAChB,OAAO,MAAM,IAAI,MAAM;eACnB,QAAQ,IAAI,MAAM,CACpB;IACH,CAAC;CACD,CAAC","file":"ModelSchema.js","sourcesContent":["import { ObjectSchema } from \"../ObjectSchema/ObjectSchema\";\n\n/**\n * Interface to define the pair TYPE/SCHEMA of a model.\n */\nexport interface ModelSchema<T extends string = string> {\n\t/**\n\t * The type associated to the model.\n\t */\n\tTYPE:T;\n\t/**\n\t * The schema associated to the model.\n\t */\n\tSCHEMA:ObjectSchema;\n}\n\n/**\n * Constant with the utils for {@link ModelSchema}.\n */\nexport const ModelSchema:{\n\t/**\n\t * Returns true when the object provided has the properties of a {@link ModelSchema}.\n\t * @param object The object to check.\n\t */\n\tis( object:object ):object is ModelSchema;\n} = {\n\tis( object:object ):object is ModelSchema {\n\t\treturn \"TYPE\" in object\n\t\t\t&& \"SCHEMA\" in object\n\t\t\t;\n\t},\n};\n"],"sourceRoot":"../../src"}