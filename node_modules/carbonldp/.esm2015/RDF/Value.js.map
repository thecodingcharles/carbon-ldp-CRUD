{"version":3,"sources":["RDF/Value.ts"],"names":[],"mappings":"AAAA,OAAO,EAAmB,WAAW,EAAkB,MAAM,2BAA2B,CAAC;AAEzF,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAC;AAEpC,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACjC,OAAO,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AA0CjC,MAAM,CAAC,MAAM,QAAQ,GAAmB;IAEvC,KAAK,CAAE,cAA+C,EAAE,KAAwD;QAC/G,IAAI,QAAQ,CAAE,KAAK,CAAE;YAAG,OAAO,KAAK,CAAC;QAErC,IAAI,UAAU,CAAC,EAAE,CAAE,KAAK,CAAE;YACzB,OAAO,UAAU,CAAC,KAAK,CAAE,KAAK,CAAE,CAAC;QAElC,IAAI,OAAO,CAAC,EAAE,CAAE,KAAK,CAAE;YACtB,OAAO,WAAW,CAAE,cAAc,EAAE,KAAK,CAAE,KAAK,CAAE,CAAE,CAAC;QAEtD,IAAI,OAAO,CAAC,EAAE,CAAE,KAAK,CAAE;YACtB,OAAO,KAAK,CAAE,OAAO,CAAE;iBACrB,GAAG,CAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE,cAAc,CAAE,CAAE,CAAC;QAGtD,OAAO,IAAI,CAAC;IACb,CAAC;CAED,CAAC","file":"Value.js","sourcesContent":["import { $PointerLibrary, _getPointer, PointerLibrary } from \"../Pointer/PointerLibrary\";\n\nimport { isString } from \"../Utils\";\n\nimport { RDFList } from \"./List\";\nimport { RDFLiteral } from \"./Literal\";\nimport { RDFNode } from \"./Node\";\n\n\n/**\n * Interface that represents an RDF Value.\n */\nexport interface RDFValue {\n\t/**\n\t * The URI of the current value.\n\t */\n\t\"@id\"?:string;\n\t/**\n\t * The URI if the XSD type of the possible value.\n\t */\n\t\"@type\"?:string;\n\t/**\n\t * The possible string value if the current object value.\n\t */\n\t\"@value\"?:string;\n\t/**\n\t * The specific language of the string value.\n\t */\n\t\"@language\"?:string;\n}\n\n\n/**\n * Factory and utils for {@link RDFValue}.\n */\nexport interface RDFValueFactory {\n\t/**\n\t * Returns the parsed object from an Literal, Node, or List.\n\t * Returns `null` if it cannot be parsed.\n\t * @param pointerLibrary Library from where to obtains pointers when RDFNode provided.\n\t * @param value The RDF value to parse.\n\t */\n\tparse( pointerLibrary:PointerLibrary | $PointerLibrary, value:RDFLiteral | RDFNode | RDFList | RDFValue | string, ):any;\n}\n\n/**\n * Constant that implements {@link RDFValueFactory}.\n */\nexport const RDFValue:RDFValueFactory = {\n\n\tparse( pointerLibrary:PointerLibrary | $PointerLibrary, value:RDFLiteral | RDFNode | RDFList | RDFValue | string ):any {\n\t\tif( isString( value ) ) return value;\n\n\t\tif( RDFLiteral.is( value ) )\n\t\t\treturn RDFLiteral.parse( value );\n\n\t\tif( RDFNode.is( value ) )\n\t\t\treturn _getPointer( pointerLibrary, value[ \"@id\" ] );\n\n\t\tif( RDFList.is( value ) )\n\t\t\treturn value[ \"@list\" ]\n\t\t\t\t.map( RDFValue.parse.bind( null, pointerLibrary ) );\n\n\t\t// TODO: What else could it be?\n\t\treturn null;\n\t},\n\n};\n"],"sourceRoot":"../../src"}