import { BadResponseError } from "./Errors/ServerErrors/BadResponseError";
import { Header } from "./Header";
export class Response {
    constructor(request, data, response) {
        this.request = request;
        if (typeof XMLHttpRequest !== "undefined" && request instanceof XMLHttpRequest) {
            this.status = request.status;
            this.data = request.responseText;
            this.headers = Header.parseHeaders(request.getAllResponseHeaders());
        }
        else {
            this.data = data || "";
            this.status = response && response.statusCode || 0;
            this.headers = new Map();
            if (!response)
                return;
            for (const name in response.headers) {
                const header = new Header(response.headers[name]);
                this.headers.set(name.toLowerCase(), header);
            }
        }
    }
    getHeader(name) {
        name = name.toLowerCase();
        return this.headers.get(name) || null;
    }
    getETag() {
        const eTagHeader = this.getHeader("ETag");
        if (!eTagHeader || !eTagHeader.values.length)
            throw new BadResponseError("The response doesn't contain an ETag", this);
        return eTagHeader.values[0];
    }
}

//# sourceMappingURL=Response.js.map
