{"version":3,"sources":["Errors/AbstractError.ts"],"names":[],"mappings":";;;AAGA;IAA4C,yCAAK;IAGhD,uBAAa,OAAc;;QAA3B,YACC,kBAAO,OAAO,CAAE,SAKhB;QAJA,MAAM,CAAC,cAAc,CAAE,KAAI,EAAE,WAAW,SAAS,CAAE,CAAC;QAGpD,mBAAmB,IAAI,KAAK,IAAI,KAAK,CAAC,iBAAiB,CAAE,KAAI,EAAE,KAAI,CAAC,WAAW,CAAE,CAAC;;IACnF,CAAC;IARD,sBAAI,+BAAI;aAAR,cAAoB,OAAO,eAAe,CAAC,CAAC,CAAC;;;OAAA;IAU9C,oBAAC;AAAD,CAXA,AAWC,CAX2C,KAAK,GAWhD;AAXqB,sCAAa","file":"AbstractError.js","sourcesContent":["/**\n * Class that works as template for the custom errors in the SDK.\n */\nexport abstract class AbstractError extends Error {\n\tget name():string { return \"AbstractError\"; }\n\n\tconstructor( message:string ) {\n\t\tsuper( message );\n\t\tObject.setPrototypeOf( this, new.target.prototype );\n\n\t\t// Deletes self construct from the stack\n\t\t\"captureStackTrace\" in Error && Error.captureStackTrace( this, this.constructor );\n\t}\n\n}\n"],"sourceRoot":"../../src"}