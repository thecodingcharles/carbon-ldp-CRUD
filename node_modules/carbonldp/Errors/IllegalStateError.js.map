{"version":3,"sources":["Errors/IllegalStateError.ts"],"names":[],"mappings":";;;AAAA,iDAAgD;AAKhD;IAAuC,6CAAa;IAGnD,2BAAa,OAAmB;QAAnB,wBAAA,EAAA,YAAmB;eAC/B,kBAAO,OAAO,CAAE;IACjB,CAAC;IAJD,sBAAI,mCAAI;aAAR,cAAoB,OAAO,mBAAmB,CAAC,CAAC,CAAC;;;OAAA;IAKlD,wBAAC;AAAD,CANA,AAMC,CANsC,6BAAa,GAMnD;AANY,8CAAiB","file":"IllegalStateError.js","sourcesContent":["import { AbstractError } from \"./AbstractError\";\n\n/**\n * Error class to indicate that a task can't be completed because of the lack of pre-required configuration or execution of previous tasks.\n */\nexport class IllegalStateError extends AbstractError {\n\tget name():string { return \"IllegalStateError\"; }\n\n\tconstructor( message:string = \"\" ) {\n\t\tsuper( message );\n\t}\n}\n"],"sourceRoot":"../../src"}