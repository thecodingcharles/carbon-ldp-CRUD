{"version":3,"sources":["ObjectSchema/DigestedObjectSchemaProperty.ts"],"names":[],"mappings":";;AAOA;IAAA;QAIC,QAAG,GAAiB,IAAI,CAAC;QAIzB,YAAO,GAAkB,IAAI,CAAC;QAK9B,gBAAW,GAAiB,IAAI,CAAC;QAIjC,gBAAW,GAAsB,IAAI,CAAC;QAStC,kBAAa,GAAwB,IAAI,CAAC;IAC3C,CAAC;IAAD,mCAAC;AAAD,CA3BA,AA2BC,IAAA;AA3BY,oEAA4B","file":"DigestedObjectSchemaProperty.js","sourcesContent":["import { ContainerType } from \"./ContainerType\";\nimport { PointerType } from \"./PointerType\";\n\n\n/**\n * Standardized definition of a property in a schema.\n */\nexport class DigestedObjectSchemaProperty {\n\t/**\n\t * The URI that represents the property.\n\t */\n\turi:string | null = null;\n\t/**\n\t * Indicates if the property is a literal or not.\n\t */\n\tliteral:boolean | null = null;\n\t/**\n\t * The type of literal the property is.\n\t * Will be `null` when the property is not a literal.\n\t */\n\tliteralType:string | null = null;\n\t/**\n\t * Type of pointer the property value is related.\n\t */\n\tpointerType:PointerType | null = null;\n\t/**\n\t * The language the property value is in.\n\t */\n\tlanguage?:string | null;\n\t/**\n\t * Type of container when the property contains multiple values.\n\t * Will be `null` when the property is not a multiple one.\n\t */\n\tcontainerType:ContainerType | null = null;\n}\n"],"sourceRoot":"../../src"}