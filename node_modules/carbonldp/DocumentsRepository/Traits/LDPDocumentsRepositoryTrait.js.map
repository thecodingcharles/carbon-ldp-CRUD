{"version":3,"sources":["DocumentsRepository/Traits/LDPDocumentsRepositoryTrait.ts"],"names":[],"mappings":"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","file":"LDPDocumentsRepositoryTrait.js","sourcesContent":["import { DocumentsContext } from \"../../Context/DocumentsContext\";\n\nimport { Document } from \"../../Document/Document\";\nimport { TransientDocument } from \"../../Document/TransientDocument\";\n\nimport { IllegalArgumentError } from \"../../Errors/IllegalArgumentError\";\n\nimport { Fragment } from \"../../Fragment/Fragment\";\n\nimport { FreeResources } from \"../../FreeResources/FreeResources\";\n\nimport { HTTPError } from \"../../HTTP/Errors/HTTPError\";\nimport { BadResponseError } from \"../../HTTP/Errors/ServerErrors/BadResponseError\";\n\nimport { Header } from \"../../HTTP/Header\";\nimport { GETOptions, RequestOptions, RequestService, RequestUtils } from \"../../HTTP/Request\";\nimport { Response } from \"../../HTTP/Response\";\n\nimport { JSONLDParser } from \"../../JSONLD/JSONLDParser\";\n\nimport { AddMemberAction } from \"../../LDP/AddMemberAction\";\nimport { Map } from \"../../LDP/Map\";\nimport { RemoveMemberAction } from \"../../LDP/RemoveMemberAction\";\nimport { ResponseMetadata } from \"../../LDP/ResponseMetadata\";\n\nimport { DeltaCreator } from \"../../LDPatch/DeltaCreator\";\n\nimport { ModelDecorator } from \"../../Model/ModelDecorator\";\nimport { ModelPrototype } from \"../../Model/ModelPrototype\";\n\nimport { DigestedObjectSchema } from \"../../ObjectSchema/DigestedObjectSchema\";\n\nimport { Pointer } from \"../../Pointer/Pointer\";\n\nimport { RDFDocument } from \"../../RDF/Document\";\nimport { RDFNode } from \"../../RDF/Node\";\n\nimport { $Registry, Registry } from \"../../Registry/Registry\";\nimport { ResolvablePointer } from \"../../Repository/ResolvablePointer\";\n\nimport { isString } from \"../../Utils\";\n\nimport { C } from \"../../Vocabularies/C\";\nimport { LDP } from \"../../Vocabularies/LDP\";\n\nimport { BaseDocumentsRepository } from \"../BaseDocumentsRepository\";\nimport { _getErrorResponseParserFn } from \"../Utils\";\n\nimport { HTTPRepositoryTrait } from \"./HTTPRepositoryTrait\";\n\n\n/**\n * Trait of a {@link DocumentsRepository} with methods for LDP related requests.\n */\nexport interface LDPDocumentsRepositoryTrait extends HTTPRepositoryTrait<Document> {\n\t/**\n\t * Context from where the repository is created.\n\t */\n\treadonly context:DocumentsContext;\n\n\t/**\n\t * Retrieves the entire document of the URI specified.\n\t * @param uri URI of the document to be retrieved.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tget<T extends object>( uri:string, requestOptions?:GETOptions ):Promise<T & Document>;\n\n\t/**\n\t * Resolves the entire document of the URI specified.\n\t * @param document Document to be resolved.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tresolve<T extends object>( document:Document, requestOptions?:GETOptions ):Promise<T & Document>;\n\n\n\t/**\n\t * Persists multiple objects as children of the document of the specified URI.\n\t * @param uri URI of the document where to create the children.\n\t * @param children Objects to be persisted.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tcreate<T extends object>( uri:string, children:T[], requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\t/**\n\t * Persists multiple objects as children of the document of the specified URI.\n\t * @param uri URI of the document where to create the children.\n\t * @param children Objects to be persisted.\n\t * @param slugs Suggested slugs for every child URI of the {@param children} provided. The slug will be assigned in the order they are provided.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tcreate<T extends object>( uri:string, children:T[], slugs?:string[], requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\t/**\n\t * Persists the object as a child of the document of the specified URI.\n\t * @param uri URI of the document where to create the child.\n\t * @param child Object to be persisted.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tcreate<T extends object>( uri:string, child:T, requestOptions?:RequestOptions ):Promise<T & Document>;\n\t/**\n\t * Persists the object as a child of the document of the specified URI.\n\t * @param uri URI of the document where to create the child.\n\t * @param child Object to be persisted.\n\t * @param slug Suggested slug for the child URI.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tcreate<T extends object>( uri:string, child:T, slug?:string, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\t/**\n\t * Persists multiple objects as children of the document of the specified URI and retrieves the updated data from the server.\n\t * @param uri URI of the document where to create the children.\n\t * @param children Objects to be persisted.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tcreateAndRetrieve<T extends object>( uri:string, children:T[], requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\t/**\n\t * Persists multiple objects as children of the document of the specified URI and retrieves the updated data from the server.\n\t * @param uri URI of the document where to create the children.\n\t * @param children Objects to be persisted.\n\t * @param slugs Suggested slugs for every child URI of the {@param children} provided. The slug will be assigned in the order they are provided.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tcreateAndRetrieve<T extends object>( uri:string, children:T[], slugs?:string[], requestOptions?:RequestOptions ):Promise<(T & Document)[]>;\n\t/**\n\t * Persists the object as a child of the document of the specified URI and retrieves the updated data from the server.\n\t * @param uri URI of the document where to create the child.\n\t * @param child Object to be persisted.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tcreateAndRetrieve<T extends object>( uri:string, child:T, requestOptions?:RequestOptions ):Promise<T & Document>;\n\t/**\n\t * Persists the object as a child of the document of the specified URI and retrieves the updated data from the server.\n\t * @param uri URI of the document where to create the child.\n\t * @param child Object to be persisted.\n\t * @param slug Suggested slug for the child URI.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tcreateAndRetrieve<T extends object>( uri:string, child:T, slug?:string, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\n\t/**\n\t * Refreshes with the latest data of the specified document.\n\t * @param document The document to be refreshed.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\trefresh<T extends object>( document:Document, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\t/**\n\t * Saves the changes of the specified document.\n\t * @param document The document to be saved.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tsave<T extends object>( document:Document, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\t/**\n\t * Saves the changes of the specified document and retrieves its latest changes.\n\t * @param document The resource to saved and refreshed.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tsaveAndRefresh<T extends object>( document:Document, requestOptions?:RequestOptions ):Promise<T & Document>;\n\n\n\t/**\n\t * Deletes the document of the specified URI.\n\t * @param uri URI of the document to be deleted.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tdelete( uri:string, requestOptions?:RequestOptions ):Promise<void>;\n\n\n\t/**\n\t * Adds the provided resource as member of the document of the specified URI.\n\t * @param uri URI of the document to add the member.\n\t * @param member Resource to be added as member.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\taddMember( uri:string, member:(string | Pointer), requestOptions?:RequestOptions ):Promise<void>;\n\n\t/**\n\t * Adds the provided resources as members of the document of the specified URI.\n\t * @param uri URI of the document to add the members.\n\t * @param members Resources to be added as members.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\taddMembers( uri:string, members:(string | Pointer)[], requestOptions?:RequestOptions ):Promise<void>;\n\n\n\t/**\n\t * Removes the provided resource as member of the document of the specified URI.\n\t * @param uri URI of the document to remove the member.\n\t * @param member Resource to be removed as member.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tremoveMember( uri:string, member:(string | Pointer), requestOptions?:RequestOptions ):Promise<void>;\n\n\t/**\n\t * Removes the provided resources as members of the document of the specified URI.\n\t * IF no {@param members} is provided all the members of the specified document will be removed.\n\t * @param uri URI of the document to remove the members.\n\t * @param members Resources to be removed as members.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tremoveMembers( uri:string, members?:(string | Pointer)[], requestOptions?:RequestOptions ):Promise<void>;\n\t/**\n\t * Removes all the members of the document of the specified URI.\n\t * @param uri URI of the document to remove its members.\n\t * @param requestOptions Customizable options for the request.\n\t */\n\tremoveMembers( uri:string, requestOptions?:RequestOptions ):Promise<void>;\n\n\n\t/**\n\t * Override method to parse the data that is a JSON-LD Document into the {@link Document} model.\n\t * @see {@link HTTPRepositoryTrait._parseResponseData}\n\t */\n\t_parseResponseData<T extends object>( response:Response, id:string ):Promise<T & Document>;\n}\n\n\nconst __JSONLD_PARSER:JSONLDParser = new JSONLDParser();\n\nfunction __setDefaultRequestOptions( requestOptions:RequestOptions, interactionModel?:string ):void {\n\tif( interactionModel ) RequestUtils.setPreferredInteractionModel( interactionModel, requestOptions );\n\tRequestUtils.setAcceptHeader( \"application/ld+json\", requestOptions );\n}\n\nfunction __getTargetID( id:string, response:Response ):string {\n\tconst locationHeader:Header | null = response.getHeader( \"Content-Location\" );\n\tif( ! locationHeader ) return id;\n\n\tif( locationHeader.values.length !== 1 ) throw new BadResponseError( \"The response must contain one Content-Location header.\", response );\n\tconst locationString:string = \"\" + locationHeader;\n\n\tif( ! locationString ) throw new BadResponseError( `The response doesn't contain a valid 'Content-Location' header.`, response );\n\treturn locationString;\n}\n\nfunction __getErrorResponseParserFnFrom( repository:LDPDocumentsRepositoryTrait ):( error:HTTPError | Error ) => Promise<never> {\n\treturn _getErrorResponseParserFn( repository.context.registry );\n}\n\n\nfunction __changeNodesID( resource:$Registry, map:Map<Pointer, Pointer> ):void {\n\tmap\n\t\t.entries\n\t\t.forEach( ( { entryKey, entryValue } ) => {\n\t\t\tconst node:Pointer = resource\n\t\t\t\t.$getPointer( entryKey.$id, true );\n\n\t\t\tresource.$removePointer( entryKey.$id );\n\n\t\t\tnode.$id = entryValue.$id;\n\t\t\tresource.$_addPointer( node );\n\t\t} )\n\t;\n}\n\nfunction __applyResponseMetadata( repository:LDPDocumentsRepositoryTrait, freeNodes:RDFNode[] ):void {\n\tif( ! freeNodes.length ) return;\n\tconst freeResources:FreeResources = FreeResources.parseFreeNodes( repository.context.registry, freeNodes );\n\n\tconst responseMetadata:ResponseMetadata | undefined = freeResources\n\t\t.getPointers( true )\n\t\t.find( ResponseMetadata.is )\n\t;\n\n\tif( ! responseMetadata ) return;\n\n\tresponseMetadata\n\t\t.documentsMetadata!\n\t\t.forEach( metadata => __changeNodesID( metadata.relatedDocument, metadata.bNodesMap ) )\n\t;\n}\n\nfunction __applyResponseRepresentation<T extends object>( repository:LDPDocumentsRepositoryTrait, resource:Document, response:Response ):(T & Document) | Promise<T & Document> {\n\tif( response.status === 204 || ! response.data ) return resource as T & Document;\n\n\treturn __JSONLD_PARSER\n\t\t.parse( response.data )\n\t\t.then( ( expandedResult:object[] ) => {\n\t\t\tconst freeNodes:RDFNode[] = RDFDocument.getFreeNodes( expandedResult );\n\t\t\t__applyResponseMetadata( repository, freeNodes );\n\n\t\t\tconst preferenceHeader:Header | null = response.getHeader( \"Preference-Applied\" );\n\t\t\tif( preferenceHeader === null || ! preferenceHeader.hasValue( \"return=representation\" ) ) return resource as T & Document;\n\n\t\t\treturn repository._parseResponseData<T>( response, resource.$id );\n\t\t} )\n\t\t;\n}\n\n\nfunction __isInvalidChild( child:object ):boolean {\n\treturn ResolvablePointer.is( child );\n}\n\nfunction __isPersistingChild( object:object ):boolean {\n\treturn object[ \"__CarbonLDP_persisting__\" ];\n}\n\nfunction __createChild<T extends object>( this:void, repository:LDPDocumentsRepositoryTrait, parentURI:string, requestOptions:RequestOptions, child:T, slug?:string ):Promise<T & Document> {\n\tif( ResolvablePointer.is( child ) ) throw new IllegalArgumentError( \"Cannot persist an already resolvable pointer.\" );\n\n\tconst transient:T & TransientDocument = TransientDocument.is( child ) ?\n\t\tchild : TransientDocument.decorate( child );\n\n\ttransient.$_normalize();\n\n\ttransient.$registry = repository.context.registry;\n\tconst body:string = JSON.stringify( transient );\n\n\tif( ! ! slug ) RequestUtils.setSlug( slug, requestOptions );\n\n\tObject.defineProperty( transient, \"__CarbonLDP_persisting__\", { configurable: true, value: true } );\n\treturn RequestService\n\t\t.post( parentURI, body, requestOptions )\n\t\t.then( ( response:Response ) => {\n\t\t\tdelete transient[ \"__CarbonLDP_persisting__\" ];\n\n\t\t\tconst locationHeader:Header | null = response.getHeader( \"Location\" );\n\t\t\tif( locationHeader === null || locationHeader.values.length < 1 ) throw new BadResponseError( \"The response is missing a Location header.\", response );\n\t\t\tif( locationHeader.values.length !== 1 ) throw new BadResponseError( \"The response contains more than one Location header.\", response );\n\t\t\ttransient.$id = locationHeader.values[ 0 ].toString();\n\n\t\t\tconst document:T & Document = repository.context.registry._addPointer( transient );\n\t\t\tdocument\n\t\t\t\t.$getFragments()\n\t\t\t\t.forEach( document.$__modelDecorator.decorate );\n\n\t\t\treturn __applyResponseRepresentation<T>( repository, document, response );\n\t\t} )\n\t\t.catch( ( error ) => {\n\t\t\tdelete transient[ \"__CarbonLDP_persisting__\" ];\n\t\t\treturn __getErrorResponseParserFnFrom( repository )( error );\n\t\t} );\n}\n\nfunction __createChildren<T extends object>( this:void, retrievalType:\"minimal\" | \"representation\", repository:LDPDocumentsRepositoryTrait, uri:string, children:T | T[], slugsOrOptions?:string | string[] | RequestOptions, requestOptions?:RequestOptions ):Promise<(T & Document) | (T & Document)[]> {\n\tif( ! repository.context.registry.inScope( uri, true ) ) return Promise.reject( new IllegalArgumentError( `\"${ uri }\" is out of scope.` ) );\n\tconst url:string = repository.context.getObjectSchema().resolveURI( uri, { base: true } );\n\n\trequestOptions = RequestUtils.isOptions( slugsOrOptions ) ?\n\t\tslugsOrOptions :\n\t\trequestOptions ? requestOptions : {}\n\t;\n\n\tconst slugs:string[] | string | null = isString( slugsOrOptions ) || Array.isArray( slugsOrOptions ) ?\n\t\tslugsOrOptions : null\n\t;\n\n\t__setDefaultRequestOptions( requestOptions, LDP.Container );\n\tRequestUtils.setPreferredRetrieval( retrievalType, requestOptions );\n\tRequestUtils.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\n\n\tif( ! Array.isArray( children ) ) {\n\t\tif( __isInvalidChild( children ) ) return Promise.reject( new IllegalArgumentError( `The object is already a resolvable pointer.` ) );\n\t\tif( __isPersistingChild( children ) ) return Promise.reject( new IllegalArgumentError( `The object is already being persisted.` ) );\n\n\t\treturn __createChild<T>( repository, url, requestOptions, children, slugs ? slugs.toString() : undefined );\n\t}\n\n\n\tconst invalidChild:number = children\n\t\t.findIndex( child => __isInvalidChild( child ) );\n\tif( invalidChild !== - 1 ) return Promise.reject( new IllegalArgumentError( `The object in \"${ invalidChild }\" is already a resolvable pointer.` ) );\n\n\tconst persistingChild:number = children\n\t\t.findIndex( child => __isPersistingChild( child ) );\n\tif( persistingChild !== - 1 ) return Promise.reject( new IllegalArgumentError( `The object in \"${ persistingChild }\" is already being persisted.` ) );\n\n\tconst promises:Promise<T & Document>[] = children.map( ( child, index ) => {\n\t\tconst cloneOptions:RequestOptions = RequestUtils.cloneOptions( requestOptions! );\n\n\t\tconst slug:string | undefined = slugs && index < slugs.length ? slugs[ index ] : void 0;\n\t\treturn __createChild<T>( repository, url, cloneOptions, child, slug );\n\t} );\n\treturn Promise.all( promises );\n}\n\n\nfunction __sendPatch<T extends object>( this:void, repository:LDPDocumentsRepositoryTrait, document:Document, requestOptions:RequestOptions ):Promise<T & Document> {\n\tif( ! ResolvablePointer.is( document ) ) return Promise.reject( new IllegalArgumentError( \"The document isn't a resolvable pointer.\" ) );\n\n\tif( ! repository.context.registry.inScope( document.$id ) ) return Promise.reject( new IllegalArgumentError( `\"${ document.$id }\" is out of scope.` ) );\n\tconst url:string = repository.context.getObjectSchema().resolveURI( document.$id, { base: true } );\n\n\tif( ! document.$isDirty() ) return Promise.resolve( document as T & Document );\n\n\tdocument.$_normalize();\n\n\t__setDefaultRequestOptions( requestOptions );\n\tRequestUtils.setContentTypeHeader( \"text/ldpatch\", requestOptions );\n\tRequestUtils.setIfMatchHeader( document.$eTag!, requestOptions );\n\n\n\tconst deltaCreator:DeltaCreator = new DeltaCreator( repository.context );\n\n\t// Document resource\n\tdeltaCreator.addResource( document.$id, document.$_snapshot, document );\n\n\t// Current fragments\n\tdocument\n\t\t.$getPointers( true )\n\t\t.forEach( ( pointer:ResolvablePointer ) => {\n\t\t\tdeltaCreator.addResource( pointer.$id, pointer.$_snapshot, pointer );\n\t\t} )\n\t;\n\n\t// Deleted fragments\n\tdocument.$__savedFragments\n\t\t.filter( pointer => ! document.$hasPointer( pointer.$id ) )\n\t\t.forEach( pointer => {\n\t\t\tdeltaCreator.addResource( pointer.$id, pointer.$_snapshot, {} );\n\t\t} )\n\t;\n\n\n\tconst body:string = deltaCreator.getPatch();\n\n\treturn RequestService\n\t\t.patch( url, body, requestOptions )\n\t\t.then( ( response:Response ) => {\n\t\t\treturn __applyResponseRepresentation<T>( repository, document, response );\n\t\t} )\n\t\t.catch( __getErrorResponseParserFnFrom( repository ) )\n\t\t;\n}\n\n\nfunction __parseMembers( registry:Registry, pointers:(string | Pointer)[] ):Pointer[] {\n\treturn pointers\n\t\t.map( pointer => {\n\t\t\tif( isString( pointer ) ) return registry.getPointer( pointer );\n\t\t\tif( Pointer.is( pointer ) ) return pointer;\n\t\t} )\n\t\t.filter( ( pointer ):pointer is Pointer => ! ! pointer )\n\t\t;\n}\n\nfunction __sendAddAction( this:void, repository:LDPDocumentsRepositoryTrait, uri:string, members:(string | Pointer)[], requestOptions:RequestOptions = {} ):Promise<void> {\n\tif( ! repository.context.registry.inScope( uri, true ) ) return Promise.reject( new IllegalArgumentError( `\"${ uri }\" is out of scope.` ) );\n\tconst url:string = repository.context.getObjectSchema().resolveURI( uri, { base: true } );\n\n\t__setDefaultRequestOptions( requestOptions, LDP.Container );\n\tRequestUtils.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\n\tconst freeResources:FreeResources = FreeResources.createFrom( { registry: repository.context.registry } );\n\n\tconst targetMembers:Pointer[] = __parseMembers( repository.context.registry, members );\n\tfreeResources._addPointer( AddMemberAction.createFrom( { targetMembers } ) );\n\n\tconst body:string = JSON.stringify( freeResources );\n\n\treturn RequestService\n\t\t.put( url, body, requestOptions )\n\t\t.then( () => {} )\n\t\t.catch( __getErrorResponseParserFnFrom( repository ) )\n\t\t;\n}\n\nfunction __sendRemoveAction( this:void, repository:LDPDocumentsRepositoryTrait, uri:string, members:(string | Pointer)[], requestOptions:RequestOptions = {} ):Promise<void> {\n\tif( ! repository.context.registry.inScope( uri, true ) ) return Promise.reject( new IllegalArgumentError( `\"${ uri }\" is out of scope.` ) );\n\tconst url:string = repository.context.getObjectSchema().resolveURI( uri, { base: true } );\n\n\t__setDefaultRequestOptions( requestOptions, LDP.Container );\n\tRequestUtils.setContentTypeHeader( \"application/ld+json\", requestOptions );\n\tRequestUtils.setRetrievalPreferences( {\n\t\tinclude: [ C.PreferSelectedMembershipTriples ],\n\t\tomit: [ C.PreferMembershipTriples ],\n\t}, requestOptions );\n\n\tconst freeResources:FreeResources = FreeResources.createFrom( { registry: repository.context.registry } );\n\n\tconst targetMembers:Pointer[] = __parseMembers( repository.context.registry, members );\n\tfreeResources._addPointer( RemoveMemberAction.createFrom( { targetMembers } ) );\n\n\tconst body:string = JSON.stringify( freeResources );\n\n\treturn RequestService\n\t\t.delete( url, body, requestOptions )\n\t\t.then( () => {} )\n\t\t.catch( __getErrorResponseParserFnFrom( repository ) )\n\t\t;\n}\n\nfunction __sendRemoveAll( this:void, repository:LDPDocumentsRepositoryTrait, uri:string, requestOptions:RequestOptions = {} ):Promise<void> {\n\tif( ! repository.context.registry.inScope( uri, true ) ) return Promise.reject( new IllegalArgumentError( `\"${ uri }\" is out of scope.` ) );\n\tconst url:string = repository.context.getObjectSchema().resolveURI( uri, { base: true } );\n\n\t__setDefaultRequestOptions( requestOptions, LDP.Container );\n\tRequestUtils.setRetrievalPreferences( {\n\t\tinclude: [\n\t\t\tC.PreferMembershipTriples,\n\t\t],\n\t\tomit: [\n\t\t\tC.PreferMembershipResources,\n\t\t\tC.PreferContainmentTriples,\n\t\t\tC.PreferContainmentResources,\n\t\t\tC.PreferContainer,\n\t\t],\n\t}, requestOptions );\n\n\treturn RequestService\n\t\t.delete( url, requestOptions )\n\t\t.then( () => {} )\n\t\t.catch( __getErrorResponseParserFnFrom( repository ) )\n\t\t;\n}\n\nexport type OverriddenMembers =\n\t| \"get\"\n\t| \"refresh\"\n\t| \"exists\"\n\t| \"save\"\n\t| \"saveAndRefresh\"\n\t| \"delete\"\n\t| \"_parseResponseData\"\n\t;\n\n/**\n * Factory, decorator and utils for {@link LDPDocumentsRepositoryTrait}.\n */\nexport type LDPDocumentsRepositoryTraitFactory =\n\t& ModelPrototype<LDPDocumentsRepositoryTrait, HTTPRepositoryTrait, OverriddenMembers>\n\t& ModelDecorator<LDPDocumentsRepositoryTrait, BaseDocumentsRepository>\n\t;\n\n/**\n * Constant that implements {@link LDPDocumentsRepositoryTraitFactory}.\n */\nexport const LDPDocumentsRepositoryTrait:LDPDocumentsRepositoryTraitFactory = {\n\tPROTOTYPE: {\n\t\tget<T extends object>( this:LDPDocumentsRepositoryTrait, uri:string, requestOptions:RequestOptions = {} ):Promise<T & Document> {\n\t\t\t__setDefaultRequestOptions( requestOptions, LDP.RDFSource );\n\n\t\t\treturn HTTPRepositoryTrait.PROTOTYPE\n\t\t\t\t.get.call<HTTPRepositoryTrait, [ string, RequestOptions?], Promise<T & Document>>( this, uri, requestOptions )\n\t\t\t\t.catch( __getErrorResponseParserFnFrom( this ) );\n\t\t},\n\n\t\texists( this:LDPDocumentsRepositoryTrait, uri:string, requestOptions:RequestOptions = {} ):Promise<boolean> {\n\t\t\t__setDefaultRequestOptions( requestOptions, LDP.RDFSource );\n\n\t\t\treturn HTTPRepositoryTrait.PROTOTYPE\n\t\t\t\t.exists.call( this, uri, requestOptions )\n\t\t\t\t.catch( __getErrorResponseParserFnFrom( this ) );\n\t\t},\n\n\n\t\tcreate<T extends object>( this:LDPDocumentsRepositoryTrait, uri:string, children:T | T[], slugsOrOptions?:string | string[] | RequestOptions, requestOptions?:RequestOptions ):Promise<(T & Document) | (T & Document)[]> {\n\t\t\treturn __createChildren<T>( \"minimal\", this, uri, children, slugsOrOptions, requestOptions );\n\t\t},\n\n\t\tcreateAndRetrieve<T extends object>( this:LDPDocumentsRepositoryTrait, uri:string, children:T | T[], slugsOrOptions?:string | string[] | RequestOptions, requestOptions?:RequestOptions ):Promise<(T & Document) | (T & Document)[]> {\n\t\t\treturn __createChildren<T>( \"representation\", this, uri, children, slugsOrOptions, requestOptions );\n\t\t},\n\n\n\t\trefresh<T extends object>( this:LDPDocumentsRepositoryTrait, document:Document, requestOptions:RequestOptions = {} ):Promise<T & Document> {\n\t\t\t__setDefaultRequestOptions( requestOptions, LDP.RDFSource );\n\t\t\tRequestUtils.setIfNoneMatchHeader( document.$eTag!, requestOptions );\n\n\t\t\treturn HTTPRepositoryTrait.PROTOTYPE\n\t\t\t\t.refresh.call<HTTPRepositoryTrait, [ Document, RequestOptions?], Promise<T & Document>>( this, document, requestOptions )\n\t\t\t\t.catch( __getErrorResponseParserFnFrom( this ) )\n\t\t\t\t;\n\t\t},\n\n\t\tsave<T extends object>( this:LDPDocumentsRepositoryTrait, document:Document, requestOptions:RequestOptions = {} ):Promise<T & Document> {\n\t\t\tRequestUtils.setPreferredRetrieval( \"minimal\", requestOptions );\n\t\t\treturn __sendPatch<T>( this, document, requestOptions );\n\t\t},\n\n\t\tsaveAndRefresh<T extends object>( this:LDPDocumentsRepositoryTrait, document:Document, requestOptions:RequestOptions = {} ):Promise<T & Document> {\n\t\t\tRequestUtils.setPreferredRetrieval( \"representation\", requestOptions );\n\t\t\treturn __sendPatch<T>( this, document, requestOptions );\n\t\t},\n\n\n\t\tdelete( this:LDPDocumentsRepositoryTrait, uri:string, requestOptions:RequestOptions = {} ):Promise<void> {\n\t\t\t__setDefaultRequestOptions( requestOptions, LDP.RDFSource );\n\n\t\t\treturn HTTPRepositoryTrait.PROTOTYPE\n\t\t\t\t.delete.call( this, uri, requestOptions )\n\t\t\t\t.catch( __getErrorResponseParserFnFrom( this ) )\n\t\t\t\t;\n\t\t},\n\n\n\t\taddMember( this:LDPDocumentsRepositoryTrait, uri:string, member:string | Pointer, requestOptions?:RequestOptions ):Promise<void> {\n\t\t\treturn __sendAddAction( this, uri, [ member ], requestOptions );\n\t\t},\n\n\t\taddMembers( this:LDPDocumentsRepositoryTrait, uri:string, members:(string | Pointer)[], requestOptions?:RequestOptions ):Promise<void> {\n\t\t\treturn __sendAddAction( this, uri, members, requestOptions );\n\t\t},\n\n\n\t\tremoveMember( this:LDPDocumentsRepositoryTrait, uri:string, member:string | Pointer, requestOptions?:RequestOptions ):Promise<void> {\n\t\t\treturn __sendRemoveAction( this, uri, [ member ], requestOptions );\n\t\t},\n\n\t\tremoveMembers( this:LDPDocumentsRepositoryTrait, uri:string, membersOrOptions?:(string | Pointer)[] | RequestOptions, requestOptions?:RequestOptions ):Promise<void> {\n\t\t\tif( Array.isArray( membersOrOptions ) ) return __sendRemoveAction( this, uri, membersOrOptions, requestOptions );\n\t\t\treturn __sendRemoveAll( this, uri, membersOrOptions || requestOptions );\n\t\t},\n\n\n\t\t_parseResponseData<T extends object>( this:LDPDocumentsRepositoryTrait, response:Response, id:string ):Promise<T & Document> {\n\t\t\treturn __JSONLD_PARSER\n\t\t\t\t.parse( response.data )\n\t\t\t\t.then( ( rdfNodes:object[] ) => {\n\t\t\t\t\tconst rdfDocuments:RDFDocument[] = RDFDocument\n\t\t\t\t\t\t.getDocuments( rdfNodes );\n\n\t\t\t\t\tid = __getTargetID( id, response );\n\t\t\t\t\tconst rdfDocument:RDFDocument | undefined = rdfDocuments.find( doc => doc[ \"@id\" ] === id );\n\n\t\t\t\t\tif( ! rdfDocument ) throw new BadResponseError( `No document \"${ id }\" was returned.`, response );\n\t\t\t\t\tconst document:T & Document = this.context.registry.register( id ) as T & Document;\n\n\t\t\t\t\tconst previousFragments:Set<string> = new Set();\n\t\t\t\t\tdocument\n\t\t\t\t\t\t.$getPointers( true )\n\t\t\t\t\t\t.forEach( pointer => previousFragments.add( pointer.$id ) );\n\n\t\t\t\t\t// Update all elements data\n\t\t\t\t\tconst elements:(Document | Fragment)[] = rdfDocument[ \"@graph\" ].map( node => {\n\t\t\t\t\t\tconst target:Document | Fragment = document.$getPointer( node[ \"@id\" ] ) as Document | Fragment;\n\n\t\t\t\t\t\tconst schema:DigestedObjectSchema = this.context.registry.getSchemaFor( node );\n\t\t\t\t\t\tthis.context.jsonldConverter.update( target, node, schema, document );\n\n\t\t\t\t\t\t// Remove updated fragments\n\t\t\t\t\t\tif( \"$document\" in target ) previousFragments.delete( target.$id );\n\n\t\t\t\t\t\treturn target;\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Delete not updated fragments\n\t\t\t\t\tpreviousFragments\n\t\t\t\t\t\t.forEach( pointer => document.$removePointer( pointer ) );\n\n\t\t\t\t\t// Finish elements after all compactions\n\t\t\t\t\telements.forEach( element => {\n\t\t\t\t\t\telement.$_syncSnapshot();\n\t\t\t\t\t\tthis.context.registry.decorate( element );\n\t\t\t\t\t} );\n\n\t\t\t\t\tdocument.$eTag = response.getETag();\n\t\t\t\t\tdocument.$_resolved = true;\n\n\t\t\t\t\treturn document;\n\t\t\t\t} )\n\t\t\t\t;\n\t\t},\n\t},\n\n\n\tisDecorated( object:object ):object is LDPDocumentsRepositoryTrait {\n\t\treturn ModelDecorator\n\t\t\t.hasPropertiesFrom( LDPDocumentsRepositoryTrait.PROTOTYPE, object );\n\t},\n\n\tdecorate<T extends BaseDocumentsRepository>( object:T ):T & LDPDocumentsRepositoryTrait {\n\t\tif( LDPDocumentsRepositoryTrait.isDecorated( object ) ) return object;\n\n\t\tconst target:T & HTTPRepositoryTrait<Document> = ModelDecorator\n\t\t\t.decorateMultiple( object, HTTPRepositoryTrait );\n\n\t\treturn ModelDecorator\n\t\t\t.definePropertiesFrom( LDPDocumentsRepositoryTrait.PROTOTYPE, target );\n\t},\n};\n"],"sourceRoot":"../../../src"}